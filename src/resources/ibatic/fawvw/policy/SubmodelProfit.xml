<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="submodelProfit">

<!-- 初始化时间，从用户购买数据表取 -->
<select id="initDate" resultClass="java.util.HashMap">
with t1 as(	 select distinct max(fv.ym) endDate,
                min(fv.ym) beginDate
  from FDM_VERSION_SUBSIDY2 fv
 inner join Fdm_Faw_Rebate ff
    on fv.ym = ff.ym
   and fv.version_id = ff.version_id
 inner join fdm_version_state_price fp
    on fv.ym = fp.ym
   and fv.version_id = fp.version_id )
	 select 
	 	   <![CDATA[
	       case when g.sdate < t1.begindate 
	       		then to_char(to_date(t1.begindate,'YYYY-MM'),'YYYY-MM') 
	       else to_char(to_date(substr(g.sdate,0,6),'YYYY-MM'),'YYYY-MM') 
	        end begindate ,
	       case when g.edate > t1.enddate then to_char(to_date(t1.enddate,'YYYY-MM'),'YYYY-MM') 
	       else to_char(to_date(substr(g.edate,0,6),'YYYY-MM'),'YYYY-MM') 
	        end enddate
	       ]]>
	       from Fdm_User_Purchaser_Module_Date g 
	       full join t1 on 1=1
	       where g.group_id=$userId$ 
	       <!-- 车型利润模块 -->
				 and g.Module='brandprofitanaly'
</select>


<!-- 根据型号ID获取子集关系 -->
<sql id="getVersionBaseAndVersion">
With Base As
 (Select *
    From (Select d.*,
                 Row_Number() Over(Partition By d.Groupid, d.Listingdate Order By d.Vid Desc) Vrn
            From (Select v.Version_Id Vid,
                         v.Parentid Pid,
                         To_Char(add_months(v.Launch_Date, 1), 'YYYYMM') Listingdate,
                         To_Char(v.halt_no_sale_date, 'YYYYMM') no_sale,
                         Connect_By_Root(v.Version_Id) Groupid,
                         v.Submodel_Id Submodelid,
                         v.Manf_Id Scs,
                         v.Brand_Id Pbrandid,
                         c.Chg_Name_Cn Changname
                    From Fdm_Car_Version v
                   Inner Join Fdm_Car_Change c On c.Chg_Id = v.Chg_Id
                   Where v.Is_Installed_Flag != 1
                 Connect By Prior v.Version_Id = v.Parentid Start With v.Version_Id In ($vids$)
                  Union
                  Select v.Version_Id Vid,
                         v.Parentid Pid,
                         To_Char(add_months(v.Launch_Date, 1), 'YYYYMM') Listingdate,
                         To_Char(v.halt_no_sale_date, 'YYYYMM') no_sale,
                         Connect_By_Root(v.Version_Id) Groupid,
                         v.Submodel_Id Submodelid,
                         v.Manf_Id Scs,
                         v.Brand_Id Pbrandid,
                         c.Chg_Name_Cn Changname
                    From Fdm_Car_Version v
                   Inner Join Fdm_Car_Change c On c.Chg_Id = v.Chg_Id
                   Where v.Is_Installed_Flag != 1
                 Connect By v.Version_Id = Prior v.Parentid Start With v.Version_Id In ($vids$)
                 ) d
            ) d
   Where d.Vrn = 1
     And Exists (Select 1 
                   From (Select n.Manf_Id Scs, n.Brand_Id Pbrandid
                           From Fdm_Car_Version n
                          Where n.Version_Id In ($vids$)
                       ) s
                   Where s.Scs = d.Scs And s.Pbrandid = d.Pbrandid
              )
  ),
     Version as
 (Select v.VERSION_ID Vid,
         v.VERSION_ID,
         b.Groupid,
         v.VERSION_NAME_CN Versionname,
         v.VERSION_NAME_EN VersionNameEn,
         v.VERSION_CODE Versioncode,
         v.YEAR Modelyear,
         v.launch_date,
         v.halt_no_sale_date,
         v.halt_product_date,
         b.SUBMODEL_NAME_EN || ' ' || v.VERSION_TRIM_NAME_EN Versionchartname,
         v.VERSION_TRIM_NAME_EN,
         v.version_short_name_cn versionShortName,
         v.version_short_name_en versionShortNameEn,
         to_char(v.LAUNCH_DATE, 'YYYY-MM-DD') Versionlaunchdate,
         v.VERSION_TRIM_NAME_CN Typeid,
         v.VERSION_TRIM_NAME_EN Typeiden,
         v.ORIGINAL_VERSION_ID o_car_number_id,
         v.is_installed_flag,
         v.VERSION_ID ObjId,
         v.VERSION_NAME_CN objName,
         v.VERSION_NAME_EN objNameEn,
         s.ID manfId,
         s.manf_name_cn Manfname,
         s.manf_name_en Manfnameen,
         b.SUBMODEL_ID SubModelId,
         b.SUBMODEL_NAME_CN Submodelname,
         b.SUBMODEL_NAME_EN Submodelnameen,
         Pl.EMISSIONS_NAME Discharge,
         Pd.TRNSMS_NAME_CN Gearmode,
         case
           when v.brand_id in (6, 31) and pd.TRNSMS_NAME_EN = 'DCT' then
            'DSG'
           else
            pd.TRNSMS_NAME_EN
         end Gearmodeen,
         cs.BODY_TYPE_NAME_CN bodytype,
         cs.BODY_TYPE_NAME_EN bodytypeen,
         wg.grade_id GradeId,
         wg.grade_name_en segmentname,
         wg.parent_grade_name || ' ' || wg.grade_name_en || '-' ||
         wg.sub_grade_name Gradename,
         wg.parent_grade_name || ' ' || wg.grade_name_en || '-' ||
         wg.sub_grade_name Gradenameen,
         Case
           When t.brand_id = 31 And s.manf_id = 109 Then
            '1'
           Else
            '0'
         End isBase,
         o.orig_id origId,
         o.ORIG_NAME_CN origName,
         o.ORIG_NAME_EN origNameEn,
         t.BRAND_ID brandId,
         t.BRAND_NAME_CN brandName,
         t.BRAND_NAME_EN brandNameEn
    from FDM_CAR_VERSION v
   Inner join FDM_CAR_SUBMODEL b
      on b.SUBMODEL_ID = v.SUBMODEL_ID
   Inner join fdm_car_brand t
      on t.brand_id = v.brand_id
   Inner join FDM_CAR_ORIG o
      on o.orig_id = t.orig_id
   Inner join v_car_manf_brand s
      on s.manf_id = v.manf_id
     and s.brand_id = v.brand_id
   Inner join FDM_CAR_EMISSIONS pl
      on pl.EMISSIONS_ID = v.EMISSIONS_ID
   Inner join FDM_CAR_TRANSMISSION pd
      on pd.TRNSMS_ID = v.TRNSMS_ID
   Inner join FDM_FAW_BODY_TYPE mtype
      on mtype.SUBMODEL_ID = v.SUBMODEL_ID
     and mtype.group_id = 2
   Inner join fdm_ways_body_type cs
      on cs.body_type_id = mtype.BODY_TYPE_ID
   Inner join v_faw_info_grade g
      on g.model_id = v.model_id
   Inner join v_faw_grade wg
      on g.grade_id = wg.grade_id
   Inner Join base b
      on b.vid = v.Version_Id
   Where 1 = 1),
<isEqual property="analysisDimensionType" compareValue="2"> 
Full_Time As
 (Select p.year || lpad(p.month, 2, 0) yearmonth,
         p.yearmonth ym,
         v.Vid,
         v.ObjId,
         v.Submodelnameen || ' ' || v.ModelYear || ' ' ||
         v.versionShortNameEn versionChartname,
         v.versionShortName,
         v.versionShortNameEn,
         v.versionName,
         v.versionNameen,
         v.versioncode,
          v.VERSIONLAUNCHDATE,
              v.MANFNAME,
                v.MANFNAMEEN,
                v.SUBMODELNAME,
                v.SUBMODELNAMEEN,
                v.brandName,
                v.brandNameEn,
                v.isbase,
         v.segmentname ,
         v.Gradename,
         v.bodytype,
         v.bodytypeen
        FROM fdm_date_main p, Version v
   Where p.yearmonth Between Replace('$beginDate$', '-', '') And
         Replace('$endDate$', '-', '')
         <!-- 在售条件 -->
         and p.yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM')
     and nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), 999999) >= p.yearmonth 
         ),
</isEqual>
<isNotEqual  property="analysisDimensionType" compareValue="2">
Full_Time As
 (select * from (Select p.year || lpad(p.month, 2, 0) yearmonth,
         p.yearmonth ym,
         v.Vid,
         v.ObjId,
         v.Submodelnameen || ' ' || v.ModelYear || ' ' ||
         v.versionShortNameEn versionChartname,
         v.versionShortName,
         v.versionShortNameEn,
         v.versionName,
         v.versionnameen,
         v.versioncode,
          v.VERSIONLAUNCHDATE,
              v.MANFNAME,
                v.MANFNAMEEN,
                v.SUBMODELNAME,
                v.SUBMODELNAMEEN,
                v.brandName,
                v.brandNameEn,
                v.isbase,
         v.segmentname,
         v.Gradename,
         v.bodytype,
         v.bodytypeen,
          row_number() over(partition by v.groupid, p.yearmonth order by v.Vid desc) rn
    FROM fdm_date_main p, Version v
   Where p.yearmonth Between Replace('$beginDate$', '-', '') And
         Replace('$endDate$', '-', '')
          and p.yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM')
     and nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), 999999) >= p.yearmonth 
         )
        where rn=1
     ),
   full_time2 as
   (
   select p.yearmonth,b.vid from fdm_date_main p,full_time b where p.yearmonth=b.ym(+)
   and  p.yearmonth Between Replace('$beginDate$', '-', '') And
                 Replace('$endDate$', '-', '')
   ),
</isNotEqual>
   <!--促销信息  -->      
  promotiondata1 as
 (select b.Groupid Pvid,
         p.ym,
         p.year,
         p.month,
         p.version_id,
         p.version_code,
         v1.objId,
         v1.Vid,
         v1.Versionname,
         v1.VersionNameEn,
         v1.Versioncode,
         v1.Modelyear,
         v1.Versionchartname,
         v1.VERSION_TRIM_NAME_EN,
         v1.versionShortName,
         v1.versionShortNameEn,
         v1.Versionlaunchdate,
         v1.Typeid,
         v1.Typeiden,
         v1.o_car_number_id,
         v1.is_installed_flag,
         v1.objName,
         v1.objNameEn,
         v1.manfId,
         v1.Manfname,
         v1.Manfnameen,
         v1.SubModelId,
         v1.Submodelname,
         v1.Submodelnameen,
         v1.Discharge,
         v1.Gearmode,
         v1.Gearmodeen,
         v1.bodytype,
         v1.bodytypeen,
         v1.GradeId,
         v1.Gradename,
         v1.Gradenameen,
         v1.isBase,
         v1.origId,
         v1.origName,
         v1.origNameEn,
         v1.brandId,
         v1.brandName,
         v1.brandNameEn,
         b.listingdate,
         b.changname,
         (case
           when p.subsidy_type_id = 5 then
            to_char(p.subsidy)
           else
            ''
         end) c1,
         (case
           when p.subsidy_type_id = 6 then
            to_char(p.subsidy)
           else
            ''
         end) c2,
         (case
           when p.subsidy_type_id = 7 then
            to_char(p.subsidy)
           else
            ''
         end) c3,
         (case
           when p.subsidy_type_id = 8 then
            to_char(p.subsidy)
           else
            ''
         end) c4,
         (case
           when p.subsidy_type_id = 9 then
            to_char(p.subsidy)
           else
            ''
         end) c5,
         (case
           when p.subsidy_type_id = 10 then
            to_char(p.subsidy)
           else
            ''
         end) c6,
         (case
           when p.subsidy_type_id = 11 then
            to_char(p.subsidy)
           else
            ''
         end) c7,
         (case
           when p.subsidy_type_id = 12 then
            to_char(p.subsidy)
           else
            ''
         end) c8,
         (case
           when p.subsidy_type_id = 14 then
            p.subsidy
           else
            null
         end) maintenance,
         (case
           when p.subsidy_type_id = 13 then
            to_char(p.subsidy)
           else
            ''
         end) c9
    from FDM_VERSION_SUBSIDY2 p
   Inner Join FDM_SUBSIDY_TYPE2 t
      on p.subsidy_type_id = t.subsidy_type_id
   Inner Join BASE b
      on b.Vid = p.Version_id
   Inner Join Version v1
      on b.Vid = v1.Vid
   where 1 = 1
     And to_date(P.YM, 'yyyymm') between to_date('$beginDate$', 'yyyy-mm') And
         to_date('$endDate$', 'yyyy-mm')
     and p.ym >= to_char(add_months(v1.launch_date, 1), 'YYYYMM')
     and (to_char(v1.halt_no_sale_date, 'YYYYMM') >= p.ym or
         v1.halt_no_sale_date is null)),
promotiondata as
 (select *
    from (select Pvid,
                 ym,
                 year,
                 month,
                 version_id,
                 version_code,
                 objId,
                 Vid,
                 Versionname,
                 VersionNameEn,
                 Versioncode,
                 Modelyear,
                 Versionchartname,
                 VERSION_TRIM_NAME_EN,
                 versionShortName,
                 versionShortNameEn,
                 Versionlaunchdate,
                 Typeid,
                 Typeiden,
                 o_car_number_id,
                 is_installed_flag,
                 objName,
                 objNameEn,
                 manfId,
                 Manfname,
                 Manfnameen,
                 SubModelId,
                 Submodelname,
                 Submodelnameen,
                 Discharge,
                 Gearmode,
                 Gearmodeen,
                 bodytype,
                 bodytypeen,
                 GradeId,
                 Gradename,
                 Gradenameen,
                 isBase,
                 origId,
                 origName,
                 origNameEn,
                 brandId,
                 brandName,
                 brandNameEn,
                 listingdate,
                 changname,
                 max(c1) c1,
                 max(c2) c2,
                 max(c3) c3,
                 max(c4) c4,
                 max(c5) c5,
                 max(c6) c6,
                 max(c7) c7,
                 max(c8) c8,
                 max(maintenance) maintenance,
                 max(c9) c9,
                 row_number() over(partition by pvid, ym order by Vid desc) rn
            from promotiondata1
           group by Pvid,
                    ym,
                    year,
                    month,
                    version_id,
                    version_code,
                    objId,
                    Vid,
                    Versionname,
                    VersionNameEn,
                    Versioncode,
                    Modelyear,
                    Versionchartname,
                    VERSION_TRIM_NAME_EN,
                    versionShortName,
                    versionShortNameEn,
                    Versionlaunchdate,
                    Typeid,
                    Typeiden,
                    o_car_number_id,
                    is_installed_flag,
                    objName,
                    objNameEn,
                    manfId,
                    Manfname,
                    Manfnameen,
                    SubModelId,
                    Submodelname,
                    Submodelnameen,
                    Discharge,
                    Gearmode,
                    Gearmodeen,
                    bodytype,
                    bodytypeen,
                    GradeId,
                    Gradename,
                    Gradenameen,
                    isBase,
                    origId,
                    origName,
                    origNameEn,
                    brandId,
                    brandName,
                    brandNameEn,
                    listingdate,
                    changname)
   where rn = 1)        
</sql>


<select id="loadVersionChart" resultClass="com.ways.app.policy.model.VersionPromotionInfoEntity">
	<include refid="getVersionBaseAndVersion"/>
	<!-- 非城市对比下其他维度 -->
	<isNotEqual property="analysisDimensionType" compareValue="2">
	<!--全国均价  -->
	<isEqual property="citys" compareValue="0">
	,t1 as
 (SELECT A.*
    FROM fdm_version_state_price a
   WHERE ym BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
     AND week = '7')
	</isEqual>
	<isNotEqual property="citys" compareValue="0">
		, t1 as
 (select distinct e.vid version_id,
                  e.yearmonth ym,
                  e.week,
                  e.versionSale,
                  Case
                    When Max(e.MaxCityMix)
                     over(partition by e.vid, e.yearmonth, e.week) Is Not Null Then
                     Sum(e.Mix) Over(Partition By e.Vid, e.Yearmonth, e.week)
                    Else
                     Avg(e.minTp)
                     Over(Partition By e.vid, e.yearmonth, e.week)
                  End price_fawvw
    from (select d.vid,
                 d.yearmonth,
                 d.week,
                
                 case
                   when min(d.value) is not null then
                    to_char(min(d.tp) * ratio_to_report(sum(d.value))
                            over(partition by d.vid, d.yearmonth, d.week))
                   else
                    null
                 end mix,
                 d.versionSale,
                 Min(d.tp) minTP,
                 Max(d.value) maxCityMix
            From (select b.vid vid,
                         p.ym Yearmonth,
                         p.week,
                         
                         p.price_fawvw tp,
                         p.city_id region,
                         m.value,
                         b.submodelid as sub_model_id,
                         sales.version_sale versionSale,
                         row_number() over(partition by b.Groupid, p.City_id, p.Ym, p.Week Order By b.Vid Desc) rn
                    From Fdm_Version_City_Price p
                   inner join base b
                      on b.vid = p.Version_Id
                    <![CDATA[ and b.listingdate <= p.ym
                    left join Fdm_Model_City_Mix m
                      on m.Sub_Model_Id = b.Submodelid
                     and m.City_Id = p.City_Id
                     and m.year = (CASE
                           WHEN p.Year <= 2013 THEN
                            2013
                           ELSE
                            p.Year - 1
                         END)
                      ]]>
                    left join Fdm_Version_Sales sales
                      on sales.version_id = b.vid
                     and sales.year = p.year
                     and sales.month = p.month
                   where 1 = 1
                     And P.ym between Replace('$beginDate$', '-', '') and
                         Replace('$endDate$', '-', '')
                     and p.Week = '7'
                     and p.City_Id in ($citys$)
                     and p.price_fawvw is not null
                     and p.price_fawvw != 0.00) d
           where d.rn = 1
           group by d.vid, d.yearmonth, d.week, d.region, d.versionSale) e)
	</isNotEqual>
	</isNotEqual>
	<!--城市对比维度  -->
	<isEqual property="analysisDimensionType" compareValue="2">
	<isNotEqual property="citys" compareValue="0">
	 ,t1 as
 (select d.vid version_id, d.yearmonth ym, d.week, d.tp price_fawvw, d.cityId city_id, d.versionSale
    from (Select b.Groupid Vid,
                 p.Ym Yearmonth,
                 p.Week,
                 p.price_fawvw tp,
                 p.City_Id Cityid,
                 sales.version_sale versionSale,
                 Row_Number() Over(Partition By b.Groupid, p.City_Id, p.Ym, p.Week Order By b.Vid Desc) Rn
            From Fdm_Version_City_Price p
           Inner Join Base b
              On b.Vid = p.Version_Id
            <![CDATA[ and b.listingdate <= p.ym]]>
            left join Fdm_Version_Sales sales
              on sales.version_id = b.vid
             and sales.year = p.year
             and sales.month = p.month
           Where p.City_Id In ($citys$)
             And p.price_fawvw Is Not Null
             And P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '')
             and p.Week = '7') d
   where d.rn = 1)
     <!--  城市对比时城市名字      -->
    ,  t4 as
 (Select p.ym ,
         p.week,
         t.vid version_id ,
         c.City_Id ,
         c.City_Name_Cn Citynamecn,
         c.City_Name_En Citynameen
    From Fdm_City c,
         (select distinct ym, week, version_id
            from fdm_version_state_msrp
           where (ym Between Replace('$beginDate$', '-', '') And
                 Replace('$endDate$', '-', '') and week = '7')) p
   inner join full_time t
      on t.vid = p.version_id
     and t.ym = p.ym
   Where 1 = 1
   and t.vid = $vids$
     And c.City_Id In ($citys$)) 
      </isNotEqual>
      <isEqual property="citys" compareValue="0">
    ,t1 as
 (SELECT A.*
    FROM fdm_version_state_price a
   WHERE ym BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
     AND week = '7')
   </isEqual> 
	</isEqual>
	<!-- 当月销量 -->
	, t3 as
 (SELECT (a.year * 100 + a.month) ym,
         a.year,
         a.month,
         a.version_id,
         DECODE(a.month,
                12,
                ((a.year + 1) * 100 + 01),
                (a.year * 100 + a.month + 1)) ym2,
         SUM(VERSION_SALE) VERSION_SALE
    FROM fdm_version_sales_direct a
   WHERE (a.year * 100 + a.month) BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
   GROUP BY a.year, a.month, a.version_id)
   <!--上月销量  -->
,t5 as
 (SELECT a.year,
         a.month,
         a.version_id,
         DECODE(a.month,
                12,
                ((a.year + 1) * 100 + 01),
                (a.year * 100 + a.month + 1)) ym,
         SUM(VERSION_SALE) VERSION_SALE
    FROM fdm_version_sales a
   WHERE (a.year * 100 + a.month) BETWEEN to_char(add_months(to_date(Replace('$beginDate$', '-', ''),'YYYYMM'),-1),'YYYYMM') AND
         Replace('$endDate$', '-', '')
   GROUP BY a.year, a.month, a.version_id)
, t2 as
 (select *
    from (select distinct b.vid version_id,
                          p.ym ym,
                          p.month,
                          p.year,
                          nvl(p.msrp, 0) msrp,
                          max(week) over(partition by p.version_id, p.ym, p.month, p.year, p.msrp) week
            from Fdm_Version_State_Msrp p
           inner join version b
              on b.vid = p.Version_Id
           where 1 = 1
             and p.msrp is not null
             And ((P.ym between Replace('$beginDate$', '-', '') AND
                 Replace('$endDate$', '-', ''))))),
  t7 as
 (select *
    from (select p.version_id,
                 p.ym ym,
                 p.week,
                 nvl(p.rebate_count, 0) rebate_count,
                 nvl(p.reward_count, 0) reward_count,
                 nvl(p.rebate_pst, 0) rebate_pst
            From Fdm_Faw_Rebate p
           where 1 = 1
             And ((P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '') and p.Week = 7))))
  <!-- 城市对比 -->
 <isEqual property="analysisDimensionType" compareValue="2">
 <isNotEqual property="citys" compareValue="0">
  select distinct P1.Pvid VERSIONID,
                b2.vid,
                b2.VERSIONCHARTNAME,
                b2.versionShortName,
                b2.versionShortNameEn,
                b2.segmentname segment,
                b2.Gradename,
                b2.bodytype,
                b2.bodytypeen,
                t4.city_id cityid,
                t4.citynamecn cityname,
                t4.citynameen,
                b2.ISBASE,
                B2.YEARMONTH,
                t4.YM,
                decode(B2.yearmonth, P1.listingdate, P1.changname, '') CHANGNAME,
                P1.LISTINGDATE,
                ROUND(P1.C1, 0) C1,
                ROUND(P1.C2, 0) C2,
                ROUND(P1.C3, 0) C3,
                ROUND(P1.C4, 0) C4,
                ROUND(P1.C5, 0) C5,
                ROUND(P1.C6, 0) C6,
                ROUND(P1.C7, 0) C7,
                ROUND(P1.C8, 0) C8,
                round(p1.maintenance, 0) maintenance,
                ROUND(P1.C9, 0) C9,
                round(t2.msrp,0) msrp,
                ROUND(round(t2.msrp,0) - round(t7.rebate_count,0) - round(t7.reward_count,0) -
                      round(nvl(P1.c2, 0),0) - round(nvl(P1.c3, 0),0) - round(nvl(P1.c8, 0),0) -
                      round(nvl(P1.c7, 0),0) - round(nvl(P1.maintenance, 0),0) -
                      round(nvl(p1.c4, 0),0) - round(nvl(P1.c5, 0),0) - round(nvl(P1.c6, 0),0),
                      0) invoiceprice,
                ROUND(round(t2.msrp,0) - round(t7.rebate_count,0) -
                      (round(t7.rebate_pst,0) - round(nvl(P1.maintenance, 0),0)),
                      0) grossinvoiceprice,
                round(t7.reward_count,0) bonus,
                ROUND(round(nvl(P1.c8, 0),0) + round(nvl(P1.c7, 0),0) +
                      round(nvl(P1.maintenance, 0),0) + round(nvl(p1.c4, 0),0) +
                      round(nvl(p1.c5, 0),0) + round(nvl(P1.c6, 0),0),
                      0) customerincentive,
                ROUND(round(nvl(P1.c2, 0),0) + round(nvl(P1.c3, 0), 0),0) grosssupports,
                round(t7.rebate_count,0) margin,
                ROUND(round(t1.price_fawvw,0) - round(t2.msrp,0) + round(t7.rebate_count,0) +
                      (round(t7.rebate_pst,0) - round(nvl(P1.maintenance, 0),0)),
                      0) profit,
                 round((round(t1.price_fawvw,0) - round(t2.msrp,0) + round(t7.rebate_count,0) +
                     (round(t7.rebate_pst,0) - round(nvl(p1.maintenance, 0),0))) / round(t2.msrp,0),
                     3) profitrate,
                      round(round(t7.rebate_pst) - nvl(round(P1.maintenance), 0),0) fullyPaid,
                      round(t1.price_fawvw,0) tp,
                     round(T5.version_sale, 0) versionlastmonthsales,
                      round(t3.version_sale, 0) versionsale,
                b2.VERSIONNAME,
                b2.VERSIONNAMEEN,
                b2.VERSIONCODE,
                P1.MODELYEAR,
                b2.VERSIONLAUNCHDATE,
                P1.TYPEID,
                P1.TYPEIDEN,
                b2.MANFNAME,
                b2.MANFNAMEEN,
                b2.SUBMODELNAME,
                b2.SUBMODELNAMEEN,
                P1.DISCHARGE,
                P1.GEARMODE,
                P1.GEARMODEEN,
                P1.BODYTYPE,
                P1.BODYTYPEEN,
                P1.GRADENAME,
                P1.GRADENAMEEN,
                P1.origId,
                P1.origName,
                P1.origNameEn,
                P1.brandId,
                b2.brandName,
                b2.brandNameEn
   from t4, Full_Time b2, promotiondata p1, t1, t2, t7,t3,t5
 where t4.version_id = P1.Pvid(+)
   And t4.ym = p1.ym(+)
   And t4.version_id In ($vids$)
   and t4.version_id = t1.version_id(+)
   and t4.ym = t1.ym(+)
   and t4.city_id = t1.City_id(+)
   and t4.version_id = t2.version_id
   and t4.ym = t2.ym
   and t4.version_id = t7.version_id(+)
   and t4.ym = t7.ym(+)
   and t4.ym = b2.ym
   and t4.version_id = b2.vid
   and t4.ym=t3.ym(+) 
   and t4.version_id = t3.version_id(+)
   and t4.ym= t5.ym(+)
   and t4.version_id=t5.version_id(+)
 order by t4.city_id, T4.ym(+)
 </isNotEqual>
 <isEqual property="citys" compareValue="0">
 select distinct P1.Pvid VERSIONID,
                b2.vid,
                b2.VERSIONCHARTNAME,
                b2.versionShortName,
                b2.versionShortNameEn,
                b2.segmentname segment,
                b2.Gradename,
                b2.bodytype,
                b2.bodytypeen,
                0 cityid,
                null cityname,
                null citynameen,
                b2.ISBASE,
                B2.YEARMONTH,
                decode(B2.yearmonth, P1.listingdate, P1.changname, '') CHANGNAME,
                P1.LISTINGDATE,
                ROUND(P1.C1, 0) C1,
                ROUND(P1.C2, 0) C2,
                ROUND(P1.C3, 0) C3,
                ROUND(P1.C4, 0) C4,
                ROUND(P1.C5, 0) C5,
                ROUND(P1.C6, 0) C6,
                ROUND(P1.C7, 0) C7,
                ROUND(P1.C8, 0) C8,
                round(p1.maintenance, 0) maintenance,
                ROUND(P1.C9, 0) C9,
                round(t2.msrp,0) msrp,
                ROUND(round(t2.msrp) - round(t7.rebate_count) - round(t7.reward_count) -
                      nvl(round(P1.c2), 0) - nvl(round(P1.c3), 0) - nvl(round(P1.c8), 0) -
                      nvl(round(P1.c7), 0) - nvl(round(P1.maintenance), 0) -
                      nvl(round(p1.c4), 0) - nvl(round(P1.c5), 0) - nvl(round(P1.c6), 0),
                      0) invoiceprice,
                ROUND(round(t2.msrp) - round(t7.rebate_count) -
                      (round(t7.rebate_pst) - nvl(round(P1.maintenance), 0)),
                      0) grossinvoiceprice,
                round(t7.reward_count,0) bonus,
                ROUND(nvl(round(P1.c8), 0) + nvl(round(P1.c7), 0) +
                      nvl(round(P1.maintenance), 0) + nvl(round(p1.c4), 0) +
                      nvl(round(p1.c5), 0) + nvl(round(P1.c6), 0),
                      0) customerincentive,
                ROUND(nvl(round(P1.c2), 0) + nvl(round(P1.c3), 0), 0) grosssupports,
                round(t7.rebate_count,0) margin,
                ROUND(round(t1.price_fawvw) - round(t2.msrp) + round(t7.rebate_count) +
                      (round(t7.rebate_pst) - nvl(round(P1.maintenance), 0)),
                      0) profit,
                 round((round(t1.price_fawvw) - round(t2.msrp) + round(t7.rebate_count) +
                     (round(t7.rebate_pst) - nvl(round(p1.maintenance), 0))) / round(t2.msrp),
                     3) profitrate,
                      round(round(t7.rebate_pst) - nvl(round(P1.maintenance), 0),0) fullyPaid,
                      round(t1.price_fawvw,0) tp,
                     round(T5.version_sale, 0) versionlastmonthsales,
                      round(t3.version_sale, 0) versionsale,
                b2.VERSIONNAME,
                b2.VERSIONNAMEEN,
                b2.VERSIONCODE,
                P1.MODELYEAR,
                b2.VERSIONLAUNCHDATE,
                P1.TYPEID,
                P1.TYPEIDEN,
                b2.MANFNAME,
                b2.MANFNAMEEN,
                b2.SUBMODELNAME,
                b2.SUBMODELNAMEEN,
                P1.DISCHARGE,
                P1.GEARMODE,
                P1.GEARMODEEN,
                P1.BODYTYPE,
                P1.BODYTYPEEN,
                P1.GRADENAME,
                P1.GRADENAMEEN,
                P1.origId,
                P1.origName,
                P1.origNameEn,
                P1.brandId,
                b2.brandName,
                b2.brandNameEn
  from Full_Time b2, promotiondata p1,t1,t2,t7,t3,t5
 where B2.Vid = P1.Pvid(+)
   And B2.ym = p1.ym(+)
   And B2.Vid In ($vids$)
   and b2.vid = t1.version_id(+)
   and b2.ym =t1.ym(+)
   and b2.vid = t2.version_id
   and b2.ym = t2.ym
   and b2.vid = t7.version_id (+)
   and b2.ym = t7.ym(+)
   and b2.ym = t3.ym(+)
   and b2.vid = t3.version_id(+)
   and b2.ym = t5.ym(+)
   and b2.vid = t5.version_id(+)
 order by b2.vid,
          b2.versionShortNameEn,
          b2.VERSIONCHARTNAME,
          TO_NUMBER(B2.YEARMONTH) ASC
 </isEqual>
 </isEqual> 
 
 <isNotEqual property="analysisDimensionType" compareValue="2">
  select distinct P1.Pvid VERSIONID,
                b2.vid,
                b2.VERSIONCHARTNAME,
                b2.versionShortName,
                b2.versionShortNameEn,
                b2.segmentname segment,
                b2.Gradename,
                b2.bodytype,
                b2.bodytypeen,
                0 cityid,
                null cityname,
                null citynameen,
                b2.ISBASE,
                B1.YEARMONTH,
                decode(B2.yearmonth, P1.listingdate, P1.changname, '') CHANGNAME,
                P1.LISTINGDATE,
                ROUND(P1.C1, 0) C1,
                ROUND(P1.C2, 0) C2,
                ROUND(P1.C3, 0) C3,
                ROUND(P1.C4, 0) C4,
                ROUND(P1.C5, 0) C5,
                ROUND(P1.C6, 0) C6,
                ROUND(P1.C7, 0) C7,
                ROUND(P1.C8, 0) C8,
                round(p1.maintenance, 0) maintenance,
                ROUND(P1.C9, 0) C9,
                round(t2.msrp,0) msrp,
                ROUND(round(t2.msrp) - round(t7.rebate_count) - round(t7.reward_count) -
                      nvl(round(P1.c2), 0) - nvl(round(P1.c3), 0) - nvl(round(P1.c8), 0) -
                      nvl(round(P1.c7), 0) - nvl(round(P1.maintenance), 0) -
                      nvl(round(p1.c4), 0) - nvl(round(P1.c5), 0) - nvl(round(P1.c6), 0),
                      0) invoiceprice,
                ROUND(round(t2.msrp) - round(t7.rebate_count) -
                      (round(t7.rebate_pst) - nvl(round(P1.maintenance), 0)),
                      0) grossinvoiceprice,
                round(t7.reward_count,0) bonus,
                ROUND(nvl(round(P1.c8), 0) + nvl(round(P1.c7), 0) +
                      nvl(round(P1.maintenance), 0) + nvl(round(p1.c4), 0) +
                      nvl(round(p1.c5), 0) + nvl(round(P1.c6), 0),
                      0) customerincentive,
                ROUND(nvl(round(P1.c2), 0) + nvl(round(P1.c3), 0), 0) grosssupports,
                round(t7.rebate_count,0) margin,
                ROUND(round(t1.price_fawvw) - round(t2.msrp) + round(t7.rebate_count) +
                      (round(t7.rebate_pst) - nvl(round(P1.maintenance), 0)),
                      0) profit,
                 round((round(t1.price_fawvw) - round(t2.msrp) + round(t7.rebate_count) +
                     (round(t7.rebate_pst) - nvl(round(p1.maintenance), 0))) / round(t2.msrp),
                     3) profitrate,
                      round(round(t7.rebate_pst) - nvl(round(P1.maintenance), 0),0) fullyPaid,
                      round(t1.price_fawvw,0) tp,
                     round(T5.version_sale, 0) versionlastmonthsales,
                      round(t3.version_sale, 0) versionsale,
                b2.VERSIONNAME,
                b2.VERSIONNAMEEN,
                b2.VERSIONCODE,
                P1.MODELYEAR,
                b2.VERSIONLAUNCHDATE,
                P1.TYPEID,
                P1.TYPEIDEN,
                b2.MANFNAME,
                b2.MANFNAMEEN,
                b2.SUBMODELNAME,
                b2.SUBMODELNAMEEN,
                P1.DISCHARGE,
                P1.GEARMODE,
                P1.GEARMODEEN,
                P1.BODYTYPE,
                P1.BODYTYPEEN,
                P1.GRADENAME,
                P1.GRADENAMEEN,
                P1.origId,
                P1.origName,
                P1.origNameEn,
                P1.brandId,
                b2.brandName,
                b2.brandNameEn
  from  full_time2 b1,Full_Time b2, promotiondata p1,t1,t2,t7,t3,t5
 where 
 b1.yearmonth=b2.ym(+)
   and b1.vid=b2.vid(+)
 and
 B2.Vid = P1.vid(+)
   And B2.ym = p1.ym(+)
   <isEqual property="analysisDimensionType" compareValue="1">
    And B2.Vid In ($vids$)
     </isEqual>
   and b2.vid = t1.version_id(+)
   and b2.ym =t1.ym(+)
   and b2.vid = t2.version_id(+)
   and b2.ym = t2.ym(+)
   and b2.vid = t7.version_id(+) 
   and b2.ym = t7.ym(+)
   and b2.ym = t3.ym(+)
   and b2.vid = t3.version_id(+)
   and b2.ym = t5.ym(+)
   and b2.vid = t5.version_id(+)
 order by <!-- b2.vid,
          b2.versionShortNameEn,
          b2.VERSIONCHARTNAME, -->
          TO_NUMBER(B1.YEARMONTH) ASC
    <isEqual property="analysisDimensionType" compareValue="1">
    ,b2.isbase desc,  b2.SUBMODELNAME,b2.VERSIONshortname
     </isEqual>
 </isNotEqual> 
</select>
<sql id="submodelChartVersion">
With 
	<isEqual property="objectType" compareValue="2"><!-- 车型维度 -->
		Base As
 (Select distinct p.yearmonth ym,
                  v.version_id Vid,
                  v.parentid Pid,
                  To_Char(v.launch_date, 'YYYYMM') listingdate,
                  v.submodel_id Submodelid,
                  v.manf_id manfid,
                  v.brand_id brandid
    From fdm_car_version v, fdm_date_main p
   where v.submodel_id In ($modelIds$)
     and p.yearmonth between replace('$beginDate$', '-', '') and
         replace('$endDate$', '-', '')
     and p.yearmonth >= to_char(v.launch_date, 'YYYYMM')
    <![CDATA[ and (p.yearmonth <= to_char(v.halt_no_sale_date, 'YYYYMM') or
         v.halt_no_sale_date is null)]]>
         and v.is_installed_flag != 1
         ),
Full_Time1 As /*拿出各月里的最新代型号(没有下一代的型号)*/
 (select ym, vid, pid, listingdate, submodelId, manfid, brandid
    from (select * from base) d
   where not Exists (select 1
            from base s
           where d.ym = s.ym
             and d.vid = s.pid)),
Full_Time2 as
 (select distinct case
           when (vs.version_sale is null or round(vs.version_sale) = 0)
           and v.parentid is not null and v.parentid<![CDATA[ <> 0  and
                f.ym >= to_char(dv.launch_date, 'YYYYMM') and
                (f.ym <= to_char(dv.halt_no_sale_date, 'YYYYMM') or
                dv.halt_no_sale_date is null)]]>
            then
            v.parentid
           else
            v.version_id
         end vid,
         f.ym,
         f.ym yearmonth
    from Full_Time1 f
   inner join faw_vw.fdm_car_version v
      on v.version_id = f.vid
      left join fdm_car_version dv
      on dv.version_id = v.parentid
    left join faw_vw.fdm_version_sales vs
      on vs.version_id = f.vid
     and to_char(add_months(to_date(vs.year || lpad(vs.month, 2, 0),
                                    'YYYYMM'),
                            1),
                 'YYYYMM') = f.ym),
	</isEqual>
 Version As(
 select t.* from(Select v.VERSION_ID Vid,
	     		v.VERSION_ID,
	           v.VERSION_NAME_CN Versionname,
	           v.VERSION_NAME_EN VersionNameEn,
	           v.VERSION_CODE Versioncode,
	           v.YEAR Modelyear,
	           v.on_product,
	           v.halt_product_date,
                v.halt_no_sale_date,
                 v.on_sale,
                 v.launch_date,
                 v.parentId,
	           b.SUBMODEL_NAME_EN || ' ' || v.VERSION_TRIM_NAME_EN Versionchartname,
	           v.VERSION_TRIM_NAME_EN,
	           v.version_short_name_cn versionShortName,
	           v.version_short_name_en versionShortNameEn,
	           to_char(v.LAUNCH_DATE,'YYYY-MM-DD') Versionlaunchdate,
	           v.VERSION_TRIM_NAME_CN Typeid,
	           v.VERSION_TRIM_NAME_EN Typeiden,
	           v.ORIGINAL_VERSION_ID o_car_number_id,
	           v.is_installed_flag,
	           <!-- 车型 -->
	        <isEqual property="objectType" compareValue="2">
		      	b.SUBMODEL_ID ObjId,
	            b.SUBMODEL_NAME_CN objName,
	            b.SUBMODEL_NAME_EN objNameEn,
	      	</isEqual>
	      	<!-- 厂商-品牌 -->
	      	<isEqual property="objectType" compareValue="3">
	      		s.ID ObjId,
	           	s.manf_name_cn objName,
	           	s.manf_name_en objNameEn,
	      	</isEqual>
	           s.ID manfId,
	           s.manf_name_cn Manfname,
	           s.manf_name_en Manfnameen,
	           b.SUBMODEL_ID  SubModelId,
	           b.SUBMODEL_NAME_CN Submodelname,
	           b.SUBMODEL_NAME_EN Submodelnameen,
	           Pl.EMISSIONS_NAME Discharge,
	           Pd.TRNSMS_NAME_CN Gearmode,
	           case when v.brand_id in(6,31) and pd.TRNSMS_NAME_EN = 'DCT' then 'DSG' else pd.TRNSMS_NAME_EN end Gearmodeen,
	           cs.BODY_TYPE_NAME_CN bodytype,
	       	   cs.BODY_TYPE_NAME_EN bodytypeen,
	          
                 wg.grade_id GradeId,
                 
                 wg.grade_name_en segmentname,
                 
                 wg.parent_grade_name || ' ' || wg.grade_name_en || '-' ||
                 wg.sub_grade_name Gradename,
                 
                 wg.parent_grade_name || ' ' || wg.grade_name_en || '-' ||
                 wg.sub_grade_name Gradenameen,
	           Case When t.brand_id = 31 And s.manf_id = 109 Then '1' Else '0' End isBase,
	           o.orig_id origId,
			   o.ORIG_NAME_CN origName,
	           o.ORIG_NAME_EN origNameEn,
			   t.BRAND_ID brandId,
	           t.BRAND_NAME_CN brandName,
	           t.BRAND_NAME_EN brandNameEn
	      from $dataUserName$FDM_CAR_VERSION v 
	       Inner join $dataUserName$FDM_CAR_SUBMODEL b       on b.SUBMODEL_ID = v.SUBMODEL_ID  
	       Inner join $dataUserName$fdm_car_brand t          on t.brand_id = v.brand_id
	       Inner join $dataUserName$FDM_CAR_ORIG o           on o.orig_id = t.orig_id 
	       Inner join $dataUserName$v_car_manf_brand s       on s.manf_id = v.manf_id  and s.brand_id = v.brand_id    
	       Inner join $dataUserName$FDM_CAR_EMISSIONS pl     on pl.EMISSIONS_ID = v.EMISSIONS_ID
	       Inner join $dataUserName$FDM_CAR_TRANSMISSION pd  on pd.TRNSMS_ID = v.TRNSMS_ID  
	       Inner join $dataUserName$FDM_FAW_BODY_TYPE  mtype on mtype.SUBMODEL_ID = v.SUBMODEL_ID  and mtype.group_id = $userId$
	       Inner join $dataUserName$fdm_ways_body_type cs    on cs.body_type_id = mtype.BODY_TYPE_ID
	        Inner join v_faw_info_grade g on g.model_id = v.model_id
           Inner Join v_faw_grade wg On  g.GRADE_ID = wg.grade_id
		 Where 1=1 
	     <isEqual property="objectType" compareValue="2">
	     	And b.SUBMODEL_ID in ($modelIds$)
	     </isEqual>
	     <isEqual property="objectType" compareValue="3">
	     	And s.manf_id||'~'||t.BRAND_ID in ($manfs$)
	     </isEqual>
) t
)
</sql>
<!-- 加载chexing维度 -->
<select id="loadSubmodelChart" resultClass="com.ways.app.policy.model.VersionPromotionInfoEntity">
	<include refid="submodelChartVersion"/>
						,Full_Time As
				 (Select 
					 <isEqual property="objectType" compareValue="2">
					  p.ym yearmonth,p.ym ym,
					 </isEqual>
					 <isNotEqual property="objectType" compareValue="2">
					  p.year || lpad(p.month, 2, 0) yearmonth,p.yearmonth ym,
					 </isNotEqual>
				         v.Vid,
				         v.ObjId,
				         v.Submodelnameen || ' ' || v.ModelYear || ' ' ||
				         v.versionShortNameEn versionChartname,
				         v.versionShortName,
				         v.versionShortNameEn
				    FROM 
				    <isEqual property="objectType" compareValue="2">
				    Full_Time2
				    </isEqual>
				    <isNotEqual property="objectType" compareValue="2">
				     fdm_date_main
				    </isNotEqual>
				    p, Version v
				   Where 1=1
				   <isNotEqual property="objectType" compareValue="2">
				    and p.yearmonth Between Replace('$beginDate$', '-', '') And
				         Replace('$endDate$', '-', '')
				   </isNotEqual>
				   <isEqual property="objectType" compareValue="2">
				    and v.vid = p.vid
				   </isEqual>
				     And v.is_installed_flag != 1
				     <isEqual property="objectType" compareValue="2">
				     And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
				         p.Yearmonth
				     And p.Yearmonth >= to_char(v.launch_date, 'YYYYMM')
				     <!-- And nvl(CASE
				               WHEN v.isBase = '1' THEN
				                to_char(v.halt_no_sale_date, 'YYYYMM')
				               else
				                to_char(add_months(v.halt_product_date, 1), 'YYYYMMDD')
				             end,
				             '99999999') >= case
				           when v.isBase = '1' then
				            p.Yearmonth
				           else
				            p.Yearmonth || 32
				         end
				     And p.Yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM') -->
				      </isEqual>
				      <isEqual property="objectType" compareValue="3">
				       And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
				         p.Yearmonth
				     And p.Yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM')
				      </isEqual>
				     )
   ,promotiondata1 as
 (select p.id,
         p.ym,
         p.year,
         p.month,
         p.version_id,
         p.version_code,
         b.objId,
         (case
           when p.subsidy_type_id = 5 then
            to_char(p.subsidy)
           else
            ''
         end) c1,
         (case
           when p.subsidy_type_id = 6 then
            to_char(p.subsidy)
           else
            ''
         end) c2,
         (case
           when p.subsidy_type_id = 7 then
            to_char(p.subsidy)
           else
            ''
         end) c3,
         (case
           when p.subsidy_type_id = 8 then
            to_char(p.subsidy)
           else
            ''
         end) c4,
         (case
           when p.subsidy_type_id = 9 then
            to_char(p.subsidy)
           else
            ''
         end) c5,
         (case
           when p.subsidy_type_id = 10 then
            to_char(p.subsidy)
           else
            ''
         end) c6,
         (case
           when p.subsidy_type_id = 11 then
            to_char(p.subsidy)
           else
            ''
         end) c7,
         (case
           when p.subsidy_type_id = 12 then
            to_char(p.subsidy)
           else
            ''
         end) c8,
         (case
           when p.subsidy_type_id = 14 then
            p.subsidy
           else
            null
         end) maintenance,
         (case
           when p.subsidy_type_id = 13 then
            to_char(p.subsidy)
           else
            ''
         end) c9
    from FDM_VERSION_SUBSIDY2 p
    left join FDM_SUBSIDY_TYPE2 t
      on p.subsidy_type_id = t.subsidy_type_id
   inner join Version b
      on b.vid = p.version_id
      <isEqual property="objectType" compareValue="2">
        inner join full_time f on f.vid = p.version_id and f.ym = p.ym
      </isEqual>
   where 1 = 1
     and to_date(P.YM, 'yyyymm') between to_date('$beginDate$', 'yyyy-mm') and
         to_date('$endDate$', 'yyyy-mm')
         <isEqual property="objectType" compareValue="2">
     <!-- And nvl(CASE
               WHEN b.isBase = '1' THEN
                to_char(b.halt_no_sale_date, 'YYYYMM')
               else
                to_char(add_months(b.halt_product_date, 1), 'YYYYMMDD')
             end,
             '99999999') >= case
           when b.isBase = '1' then
            to_char(p.ym)
           else
            to_char(p.ym) || 32
         end
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM') -->
     </isEqual>
     <isEqual property="objectType" compareValue="3">
     And nvl( to_char(b.halt_no_sale_date, 'YYYYMM'),'99999999') >= to_char(p.ym)
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM')
     </isEqual>
     ),
promotiondata as
 (select ym,
         year,
         month,
         version_id,
         version_code,
         objId,
         max(c1) c1,
         max(c2) c2,
         max(c3) c3,
         max(c4) c4,
         max(c5) c5,
         max(c6) c6,
         max(c7) c7,
         max(c8) c8,
         max(maintenance) maintenance,
         max(c9) c9
    from promotiondata1
   group by ym, year, month, version_id, version_code, objId),
versionSum as
 (Select round(Sum(s.Version_Sale), 0) As Version_Sale,
 		<isEqual property="objectType" compareValue="2">
 		f.vid,f.Objid,
 		</isEqual>
 		<isNotEqual property="objectType" compareValue="2">
 		 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,v.Objid,
 		</isNotEqual>
         s.year,
         s.month,
         s.year || lpad(s.month, 2, 0) yearmonth
    From FDM_VERSION_SALES s, 
    <isEqual property="objectType" compareValue="2">
    full_time f
    </isEqual>
    <isNotEqual property="objectType" compareValue="2">
     Version v
    </isNotEqual>
    <isEqual property="objectType" compareValue="2">
    Where 1=1
      and  f.vid = s.version_id and f.ym = to_char(add_months(to_date(s.year||lpad(s.month,2,0),'YYYYMM'),1),'YYYYMM')
    
   <!-- Where s.Version_id = (CASE
           WHEN v.isBase != '1' AND
                (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0),
                                            'yyyymm'),
                                    1),
                         'yyyymm') = to_char(v.launch_date, 'YYYYMM')) THEN
            v.parentid
           ELSE
            v.vid
         END)
     And nvl(CASE
               WHEN v.isBase = '1' THEN
                to_char(v.halt_no_sale_date, 'YYYYMM')
               else
                to_char(add_months(v.halt_product_date, 1), 'YYYYMMDD')
             end,
             '99999999') >= case
           when v.isBase = '1' then
            to_char(add_months(to_date(s.year || lpad(s.month, 2, 0),
                                       'YYYYMM'),
                               1),
                    'YYYYMM')
           else
            to_char(add_months(to_date(s.year || lpad(s.month, 2, 0),
                                       'YYYYMM'),
                               1),
                    'YYYYMM') || 32
         end
     And to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'YYYYMM'),
                            1),
                 'YYYYMM') >=
         to_char(add_months(v.launch_date, 1), 'YYYYMM') -->
         </isEqual>
     <isEqual property="objectType" compareValue="3">  
      Where s.Version_id = v.vid
      And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
         to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'YYYYMM'),
                            1),
                 'YYYYMM')
     And to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'YYYYMM'),
                            1),
                 'YYYYMM') >=
         to_char(add_months(v.launch_date, 1), 'YYYYMM')
      </isEqual>  
     and s.year || lpad(s.month, 2, 0) Between
         to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'YYYYMM'),
                            -1),
                 'YYYYMM') AND Replace('$endDate$', '-', '')
                 <isNotEqual property="objectType" compareValue="2">
                  And v.is_installed_flag != 1
                 </isNotEqual>
   Group By 
   <isEqual property="objectType" compareValue="2">
   f.vid,f.Objid,
   </isEqual>
   <isNotEqual property="objectType" compareValue="2">
   Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),v.Objid,
   </isNotEqual>
            s.year,
            s.month),
   <isEqual property="objectType" compareValue="2">
  times as
 (select b.submodel_id, b.submodel_name_cn, c.yearmonth
    from fdm_date_main c
    left join FDM_CAR_SUBMODEL b
      on 1 = 1
   where b.submodel_id in ($modelIds$)
     and c.yearmonth Between Replace('$beginDate$', '-', '') And
         Replace('$endDate$', '-', '')),
  </isEqual>
  t7 as
 (Select case
           when month = 12 then
            1
           else
            month + 1
         end month,
         case
           when month = 12 then
            year + 1
           else
            year
         end year,
         s.vid vid,
         s.objid,
         s.version_sale
    From versionsum s
   <!-- inner join version v
      on s.vid = v.vid -->
   where s.year >= SUBSTR('$beginDate$', 0, 4) - 1
     <![CDATA[ and s.year <= SUBSTR('$endDate$', 0, 4))]]>,
 t8 as
 (Select Sum(s.Version_Sale) As Obj_Sale,
         s.Objid,
         s.year,
         s.month,
         (s.year || lpad(s.month, 2, 0)) yearmonth
    From t7 s
   Where 1 = 1
   Group By s.Objid, s.year, s.month, (s.year || lpad(s.month, 2, 0))),
versionmix2 As
 (select v.Version_Sale,
         v.vid,
         v.Vid version_id,
         v.objid,
         v.year,
         v.month,
         (v.year || lpad(v.month, 2, 0)) yearmonth,
         (v.year || lpad(v.month, 2, 0)) ym,
         o.Obj_Sale,
         (case
           when o.Obj_Sale IS NOT NULL and o.Obj_Sale > 0 and
                v.Version_Sale IS NOT NULL then
            (v.Version_Sale / o.Obj_Sale)
           else
            null
         end) mix
    from t8 o, t7 v
   where o.objid = v.objid
     and o.yearmonth = (v.year || lpad(v.month, 2, 0))),
     <!--非城市对比维度  -->
 <isNotEqual property="analysisDimensionType" compareValue="2">
<isNotEqual property="citys" compareValue="0">
  t1 as
 (select distinct e.vid version_id,
                  e.yearmonth ym,
                  e.week,
                  Case
                    When Max(e.MaxCityMix)
                     over(partition by e.vid, e.yearmonth, e.week) Is Not Null Then
                     Sum(e.Mix) Over(Partition By e.Vid, e.Yearmonth, e.week)
                    Else
                     Avg(e.minTp)
                     Over(Partition By e.vid, e.yearmonth, e.week)
                  End price_fawvw
    from (select d.vid,
                 d.yearmonth,
                 d.week,
                 case
                   when min(d.value) is not null then
                    to_char(min(d.tp) * ratio_to_report(sum(d.value))
                            over(partition by d.vid, d.yearmonth, d.week))
                   else
                    null
                 end mix,
                 Min(d.tp) minTP,
                 Max(d.value) maxCityMix
            From (select b.vid vid,
                         p.ym Yearmonth,
                         p.week,
                         p.price_fawvw tp,
                         p.city_id region,
                         m.value,
                         <isEqual property="objectType" compareValue="2">
                          b.objid as sub_model_id,
                         </isEqual>
                         <isNotEqual property="objectType" compareValue="2">
                         b.submodelid as sub_model_id,
                         </isNotEqual>
                         row_number() over(partition by b.vid, p.City_id, p.Ym, p.Week Order By b.Vid Desc) rn
                    From Fdm_Version_City_Price p
                    <isEqual property="objectType" compareValue="2">
                     inner join full_time b
                      on b.vid = p.Version_Id
                      and b.ym = p.ym
                    </isEqual>
                    <isNotEqual property="objectType" compareValue="2">
                    inner join version b
                      on b.vid = p.Version_Id
                    </isNotEqual>
                    left join Fdm_Model_City_Mix m
                      on m.Sub_Model_Id = 
                      <isEqual property="objectType" compareValue="2">
                      b.objid
                      </isEqual>
                      <isNotEqual property="objectType" compareValue="2">
                        b.Submodelid
                      </isNotEqual>
                     and m.City_Id = p.City_Id
                     and m.year = (CASE
                  <![CDATA[         WHEN p.Year <= 2013 THEN]]>
                            2013
                           ELSE
                            p.Year - 1
                         END)
                   where 1 = 1
                     And P.ym between Replace('$beginDate$', '-', '') and
                         Replace('$endDate$', '-', '')
                     and p.Week = '7'
                     and p.City_Id in ($citys$)
                     and p.price_fawvw is not null
                     and p.price_fawvw != 0.00
                     <isNotEqual property="objectType" compareValue="2">
                      and b.Is_Installed_Flag != 1
                     </isNotEqual>
                     ) d
           where d.rn = 1
           group by d.vid, d.yearmonth, d.week, d.region
           ) e),
</isNotEqual>
<isEqual property="citys" compareValue="0">
t1 as
 (SELECT A.*
    FROM fdm_version_state_price a
    <isEqual property="objectTye" compareValue="2">
     inner join full_time f on f.vid = a.version_id and f.ym = a.ym
    </isEqual>
   WHERE a.ym BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
     AND a.week = '7'),
</isEqual>
</isNotEqual>
<!-- 城市对比维度 -->
<isEqual property="analysisDimensionType" compareValue="2">
<isNotEqual property="citys" compareValue="0">
	 t1 as
 (select d.vid version_id, d.yearmonth ym, d.week, d.tp price_fawvw, d.cityId city_id
    from (Select b.vid Vid,
                 p.Ym Yearmonth,
                 p.Week,
                 p.price_fawvw tp,
                 p.City_Id Cityid,
                 Row_Number() Over(Partition By b.vid, p.City_Id, p.Ym, p.Week Order By b.Vid Desc) Rn
            From Fdm_Version_City_Price p
            <isEqual property="objectType" compareValue="2">
             Inner Join full_time b
              On b.Vid = p.Version_Id
              and b.ym = p.ym
            </isEqual>
            <isNotEqual property="objectType" compareValue="2">
            Inner Join version b
              On b.Vid = p.Version_Id
            </isNotEqual>
           Where p.City_Id In ($citys$)
             And p.price_fawvw Is Not Null
             And P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '')
             and p.Week = '7') d
   where d.rn = 1),
      <!-- 城市对比时城市名字      -->
      t4 as
 (Select p.ym ,
         p.week,
         
         t.vid version_id ,
        <isEqual property="objectType" compareValue="2" >
         t.objid,
         </isEqual>
         <isEqual property="objectType" compareValue="3" >
        t.objid,
         </isEqual>
         c.City_Id ,
         c.City_Name_Cn Citynamecn,
         c.City_Name_En Citynameen
    From  Fdm_City c,(select distinct ym, week, version_id
            from fdm_version_state_msrp
           where (ym Between Replace('$beginDate$', '-', '') And
                 Replace('$endDate$', '-', '') and week = '7')) p
         inner join full_time t on t.vid = p.version_id and t.ym = p.ym
         <isEqual property="objectType" compareValue="2" >
  <!--  v.submodel_id = $modelIds$ -->
   </isEqual>
    Where 1=1
   <isEqual property="objectType" compareValue="3">
  <!--  Where v.manf_id ||'~'|| v.brand_id = $manfs$ -->
   </isEqual>
     And c.City_Id In ($citys$)),
  </isNotEqual>
<isEqual property="citys" compareValue="0">
t1 as
 (SELECT A.*
    FROM fdm_version_state_price a
     inner join full_time f on f.ym = a.ym and a.version_id = f.vid
   WHERE a.ym BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
     AND a.week = '7'),
</isEqual> 
</isEqual>
 t2 as
 (select distinct b.vid version_id,
                         b.Objid,
                          p.ym ym,
                          p.month,
                          p.year,
                          nvl(p.msrp, 0) msrp,
                          max(week) over(partition by p.version_id, p.ym, p.month, p.year, p.msrp) week
            from Fdm_Version_State_Msrp p
            <isEqual property="objectType" compareValue="2">
             inner join full_time b on b.vid = p.Version_Id and b.ym = p.ym
            </isEqual>
            <isNotEqual property="objectType" compareValue="2">
             inner join version b on b.vid = p.Version_Id
            </isNotEqual>
           where 1 = 1
             and p.msrp is not null
             <isNotEqual property="objectType" compareValue="2">
             And ((P.ym between Replace('$beginDate$', '-', '') AND
                 Replace('$endDate$', '-', '')))
               And b.is_installed_flag != 1
             </isNotEqual>
               <isEqual property="objectType" compareValue="2">
  <!--    And nvl(CASE
               WHEN b.isBase = '1' THEN
                to_char(b.halt_no_sale_date, 'YYYYMM')
               else
                to_char(add_months(b.halt_product_date, 1), 'YYYYMMDD')
             end,
             '99999999') >= case
           when b.isBase = '1' then
           to_char(p.ym)
           else
           to_char(p.ym) || 32
         end
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM') -->
     </isEqual>
     <isEqual property="objectType" compareValue="3">
     And nvl( to_char(b.halt_no_sale_date, 'YYYYMM'),'99999999') >= to_char(p.ym)
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM')
     </isEqual>
                 ),
 t9 as
 (select *
    from (select p.version_id,
                 p.ym ym,
                 p.week,
                p.rebate_count rebate_count,
                 p.reward_count reward_count,
                 p.rebate_pst rebate_pst
            From Fdm_Faw_Rebate p
            <isEqual property="objectType" compareValue="2">
            inner join full_time f on f.vid = p.version_id and f.ym = p.ym
            </isEqual>
           where 1 = 1
             And ((P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '') and p.Week = 7)))),
 <isNotEqual property="analysisDimensionType" compareValue="2">
 objPromotion as
 (select t2.*, v1.obj_sale, v1.mix,p1.c1,p1.c2,p1.c3,p1.c4,p1.c5,p1.c6,p1.c7,p1.c8,p1.c9,t1.price_fawvw,
  (round(t2.msrp) - round(t9.rebate_count) - round(t9.reward_count) -
                     nvl(round(P1.c2), 0) - nvl(round(P1.c3), 0) - nvl(round(P1.c8), 0) -
                     nvl(round(P1.c7), 0) - nvl(round(P1.maintenance), 0) -
                     nvl(round(p1.c4), 0) - nvl(round(P1.c5), 0) -
                     nvl(round(P1.c6), 0)) invoiceprice,<!-- 开票价 -->
 (round(t2.msrp) - round(t9.rebate_count) -
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) grossinvoiceprice,<!-- 经销商成本 -->
    round(t9.reward_count) bonus,<!-- 考核奖励 -->
    (nvl(round(P1.c8), 0) + nvl(round(P1.c7), 0) +
                     nvl(round(P1.maintenance), 0) + nvl(round(p1.c4), 0) +
                     nvl(round(p1.c5), 0) + nvl(round(P1.c6), 0)) customerincentive,<!-- 用户激励 -->
    (nvl(round(P1.c2), 0) + nvl(round(P1.c3), 0)) grosssupports,<!-- 经销商支持  -->
      round(t9.rebate_count) margin,<!-- 返利 -->
        (round(t1.price_fawvw) - round(t2.msrp) + round(t9.rebate_count) +
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) profit<!-- 利润  -->
   from t2, promotiondata p1,versionmix2 v1,t1, t9
     where   t2.ym = p1.ym(+)
     and t2.version_id = p1.version_id(+)
     and t2.ym = v1.ym(+)
     and t2.version_id = v1.version_id(+)
     and  t2.version_id = t1.version_id(+)
     and t2.ym = t1.ym(+)
     and t9.ym(+) = t2.ym
     and t2.version_id = t9.version_id(+)
     ), 
 </isNotEqual>
 <isEqual property="analysisDimensionType" compareValue="2">
 <isNotEqual property="citys" compareValue="0">
  objPromotion as
 (select t4.city_id,t4.citynameen,t4.Citynamecn,t4.version_id,t4.objid,t4.ym,t2.msrp, v1.obj_sale, v1.mix,p1.c1,p1.c2,p1.c3,p1.c4,p1.c5,p1.c6,p1.c7,p1.c8,p1.c9,t1.price_fawvw,
  (round(t2.msrp) - round(t9.rebate_count) - round(t9.reward_count) -
                     nvl(round(P1.c2), 0) - nvl(round(P1.c3), 0) - nvl(round(P1.c8), 0) -
                     nvl(round(P1.c7), 0) - nvl(round(P1.maintenance), 0) -
                     nvl(round(p1.c4), 0) - nvl(round(P1.c5), 0) -
                     nvl(round(P1.c6), 0)) invoiceprice,<!-- 开票价 -->
 (round(t2.msrp) - round(t9.rebate_count) -
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) grossinvoiceprice,<!-- 经销商成本 -->
    round(t9.reward_count) bonus,<!-- 考核奖励 -->
    (nvl(round(P1.c8), 0) + nvl(round(P1.c7), 0) +
                     nvl(round(P1.maintenance), 0) + nvl(round(p1.c4), 0) +
                     nvl(round(p1.c5), 0) + nvl(round(P1.c6), 0)) customerincentive,<!-- 用户激励 -->
    (nvl(round(P1.c2), 0) + nvl(round(P1.c3), 0)) grosssupports,<!-- 经销商支持  -->
      round(t9.rebate_count) margin,<!-- 返利 -->
        (round(t1.price_fawvw) - round(t2.msrp) + round(t9.rebate_count) +
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) profit<!-- 利润 --> 
    from t4,t2, promotiondata p1,versionmix2 v1, t1,t9
     where 1=1 and t4.version_id = t2.version_id(+)
     and t4.ym = t2.ym(+)
     and t4.objid = t2.objid(+)
     and t4.ym = p1.ym(+)
     and t4.version_id = p1.version_id(+)
     and t4.objid = p1.objid(+)
     and t4.ym = v1.ym(+)
     and t4.version_id = v1.version_id(+)
     and t4.objId = v1.objId(+)
     and t4.version_id = t1.version_id(+)
     and t4.ym = t1.ym(+)
     and t1.city_id(+) = t4.city_id
     and t4.ym = t9.ym(+)
     and t4.version_id = t9.version_id(+)
     ),
     </isNotEqual>
   <isEqual property="citys" compareValue="0">
   objPromotion as
 (select t2.*, v1.obj_sale, v1.mix,p1.c1,p1.c2,p1.c3,p1.c4,p1.c5,p1.c6,p1.c7,p1.c8,p1.c9,t1.price_fawvw,
  (round(t2.msrp) - round(t9.rebate_count) - round(t9.reward_count) -
                     nvl(round(P1.c2), 0) - nvl(round(P1.c3), 0) - nvl(round(P1.c8), 0) -
                     nvl(round(P1.c7), 0) - nvl(round(P1.maintenance), 0) -
                     nvl(round(p1.c4), 0) - nvl(round(P1.c5), 0) -
                     nvl(round(P1.c6), 0)) invoiceprice,<!-- 开票价 -->
 (round(t2.msrp) - round(t9.rebate_count) -
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) grossinvoiceprice,<!-- 经销商成本 -->
    round(t9.reward_count) bonus,<!-- 考核奖励 -->
    (nvl(round(P1.c8), 0) + nvl(round(P1.c7), 0) +
                     nvl(round(P1.maintenance), 0) + nvl(round(p1.c4), 0) +
                     nvl(round(p1.c5), 0) + nvl(round(P1.c6), 0)) customerincentive,<!-- 用户激励 -->
    (nvl(round(P1.c2), 0) + nvl(round(P1.c3), 0)) grosssupports,<!-- 经销商支持  -->
      round(t9.rebate_count) margin,<!-- 返利 -->
        (round(t1.price_fawvw) - round(t2.msrp) + round(t9.rebate_count) +
                     (round(t9.rebate_pst) - nvl(round(P1.maintenance), 0))) profit<!-- 利润  -->
     from t2, promotiondata p1,versionmix2 v1,t1,t9
     where 1=1 and t2.ym = p1.ym(+)
     and t2.version_id = p1.version_id(+)
     and t2.ym = v1.ym(+)
     and t2.version_id = v1.version_id(+)
     and t2.version_id = t1.version_id(+)
     and t2.ym = t1.ym(+)
     and t9.ym(+) = t2.ym
     and t2.version_id = t9.version_id(+)
     ), 
   </isEqual>
 </isEqual>
 objPromotionSum as
 (select distinct rs.ym,
 <!-- 城市对比 -->
 <isEqual property="analysisDimensionType" compareValue="2">
 	<isNotEqual property="citys" compareValue="0">
 		 rs.city_id cityid,
         rs.citynamecn cityname,
         rs.citynameen citynameen,
    </isNotEqual>
 </isEqual>
        
         rs.objId,
         sum(rs.msrp*rs.mix) msrp,
         sum(rs.price_fawvw*rs.mix) tp,
         nvl(sum(rs.c1 * rs.mix), avg(rs.c1)) c1,
         sum(rs.c2 * rs.mix) c2,
         sum(rs.c3 * rs.mix) c3,
         sum(rs.c4 * rs.mix) c4,
         sum(rs.c5 * rs.mix) c5,
         sum(rs.c6 * rs.mix) c6,
         sum(rs.c7 * rs.mix) c7,
         sum(rs.c8 * rs.mix) c8,
         sum(rs.c9 * rs.mix) c9,
         sum(rs.invoiceprice * rs.mix) invoiceprice,
         sum(rs.grossinvoiceprice * rs.mix) grossinvoiceprice,
         sum(rs.bonus * rs.mix) bonus,
         sum(rs.customerincentive * rs.mix) customerincentive,
         sum(rs.grosssupports * rs.mix) grosssupports,
         sum(rs.margin * rs.mix) margin,
         sum(rs.profit * rs.mix) profit
    from objPromotion rs
   group by rs.ym,  rs.objId 
   <isEqual property="analysisDimensionType" compareValue="2">
 	<isNotEqual property="citys" compareValue="0">
 		 ,rs.city_id,
         rs.citynamecn ,
         rs.citynameen 
    </isNotEqual>
 </isEqual>
   )
   
 Select distinct 
 				<isEqual property="analysisDimensionType" compareValue="2">
 	<isNotEqual property="citys" compareValue="0">
 		 rs.cityid,
         rs.cityname ,
         rs.citynameen, 
    </isNotEqual>
    <isEqual property="citys" compareValue="0">
    0 cityid,
    null cityname,
    null cityNameen,
    </isEqual>
 </isEqual>
 <isNotEqual property="analysisDimensionType" compareValue="2">
 	 0 cityid,
    null cityname,
    null cityNameen,
 </isNotEqual>
 				<isEqual property="objectType" compareValue="3">
 				v.manfId objid,
                v.manfName objname,
                v.manfNameen objnameen,
                </isEqual>
               <!--  v.GradeId,
                v.Gradename,
                v.Gradenameen, -->
                <isEqual property="objectType" compareValue="2">
                v.subModelId objid,
                v.Submodelnameen objnameen,
                v.Submodelname objname,
                </isEqual>
                v.isBase,
                <isEqual property="objectType" compareValue="2">
                tm.yearmonth,
                base1.ym,
                </isEqual>
                <isEqual property="objectType" compareValue="3">
                base1.ym yearmonth,
                </isEqual>
                base1.objId,
                round(rs.c1, 0) c1, 
                round(rs.c2, 0) c2,
                round(rs.c3, 0) c3,
                round(rs.c4, 0) c4,
                round(rs.c5, 0) c5,
                round(rs.c6, 0) c6,
                round(rs.c7, 0) c7,
                round(rs.c8, 0) c8,
                round(rs.c9, 0) c9,
                round(rs.msrp,0) msrp,
                round(rs.tp,0) tp,
                round(rs.invoiceprice,0) invoiceprice,
                round(rs.grossinvoiceprice,0) grossinvoiceprice,
                 round(rs.bonus,0) bonus,
                round(rs.customerincentive,0) customerincentive,
                round(rs.grosssupports,0) grosssupports,
                round(rs.margin,0) margin,
                round(rs.profit,0) profit
 	 <isEqual property="objectType" compareValue="2">              
 FROM times tm,Full_Time base1,objPromotionSum rs,(Select Distinct v.ObjId,
                             v.ManfId,
                             v.Manfname,
                             v.Manfnameen,
                             v.GradeId,
                             v.Gradename,
                             v.Gradenameen,
                             v.Submodelid,
                             v.Submodelnameen,
                             v.Submodelname,
                             v.Isbase
               From Version v
              Where v.Is_Installed_Flag != 1) v
 Where 1 = 1
 and tm.submodel_id = base1.objid(+)
   and tm.yearmonth = base1.ym(+)
   and tm.submodel_id = rs.ObjId(+)
   and tm.yearmonth = rs.ym(+)
   and tm.submodel_id = v.ObjId(+)
	</isEqual>
	<isEqual property="objectType" compareValue="3"> 
	FROM  Full_Time base1
  left join objPromotionSum rs
    on base1.objid = rs.ObjId
   and base1.ym = rs.ym
  left join (Select Distinct v.ObjId,
                             v.ManfId,
                             v.Manfname,
                             v.Manfnameen,
                             v.GradeId,
                             v.Gradename,
                             v.Gradenameen,
                             v.Submodelid,
                             v.Submodelnameen,
                             v.Submodelname,
                             v.Isbase
               From Version v
              Where v.Is_Installed_Flag != 1) v
    on base1.objid = v.ObjId
 Where 1 = 1
	</isEqual>
	 order by yearmonth, isbase desc,objnameen
</select>

<!-- 时间维度补数主表 -->		
<sql id="getFullTimes">
<!-- 时间段缺失日期补充 -->
<!-- ,Full_Time As(
      Select p.year||lpad(p.month,2,0) yearmonth,
			 p.yearmonth ym,
			 v.Vid,
			 v.ObjId,
			 v.Submodelnameen || ' ' ||  v.ModelYear || ' ' || v.versionShortNameEn versionChartname,
			 v.versionShortName,
	         v.versionShortNameEn  
	  FROM $dataUserName$fdm_date_main p,Version v  
	  Where p.yearmonth Between Replace('$beginDate$','-','') And Replace('$endDate$','-','') 
	  <isNotEqual property="objectType" compareValue="1">
	  车型/厂商/品牌/系别/级别的结果中不出现加装版,加装版的销量叠加到其它型号上面
	      And v.is_installed_flag != 1    
	  </isNotEqual>
	  <isEqual property="objectType" compareValue="2">
	  车型维度竞品只算在产型号，本品按在售 
	   And nvl(CASE WHEN v.isBase = '1' THEN to_char(v.halt_no_sale_date,'YYYYMM') else to_char(add_months(v.halt_product_date,1),'YYYYMMDD') end,'99999999')>= case when v.isBase = '1' then p.Yearmonth else p.Yearmonth||32 end 
	  And p.Yearmonth >= to_char(add_months(v.launch_date,1),'YYYYMM')
	  </isEqual>
	  <isEqual property="objectType" compareValue="3">
	   And nvl(to_char(v.halt_no_sale_date,'YYYYMM'),'999999')>=p.Yearmonth 
	   And p.Yearmonth >= to_char(add_months(v.launch_date,1),'YYYYMM')
	  </isEqual>
) -->
	,Full_Time As
				 (Select 
					 <isEqual property="objectType" compareValue="2">
					  p.ym yearmonth,p.ym ym,
					 </isEqual>
					 <isNotEqual property="objectType" compareValue="2">
					  p.year || lpad(p.month, 2, 0) yearmonth,p.yearmonth ym,
					 </isNotEqual>
				         v.Vid,
				         v.ObjId,
				         v.Submodelnameen || ' ' || v.ModelYear || ' ' ||
				         v.versionShortNameEn versionChartname,
				         v.versionShortName,
				         v.versionShortNameEn
				    FROM 
				    <isEqual property="objectType" compareValue="2">
				    Full_Time2
				    </isEqual>
				    <isNotEqual property="objectType" compareValue="2">
				     fdm_date_main
				    </isNotEqual>
				    p, Version v
				   Where 1=1
				   <isNotEqual property="objectType" compareValue="2">
				    and p.yearmonth Between Replace('$beginDate$', '-', '') And
				         Replace('$endDate$', '-', '')
				   </isNotEqual>
				   <isEqual property="objectType" compareValue="2">
				    and v.vid = p.vid
				   </isEqual>
				     And v.is_installed_flag != 1
				     <isEqual property="objectType" compareValue="2">
				     And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
				         p.Yearmonth
				     And p.Yearmonth >= to_char(v.launch_date, 'YYYYMM')
				     <!-- And nvl(CASE
				               WHEN v.isBase = '1' THEN
				                to_char(v.halt_no_sale_date, 'YYYYMM')
				               else
				                to_char(add_months(v.halt_product_date, 1), 'YYYYMMDD')
				             end,
				             '99999999') >= case
				           when v.isBase = '1' then
				            p.Yearmonth
				           else
				            p.Yearmonth || 32
				         end
				     And p.Yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM') -->
				      </isEqual>
				      <isEqual property="objectType" compareValue="3">
				       And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
				         p.Yearmonth
				     And p.Yearmonth >= to_char(add_months(v.launch_date, 1), 'YYYYMM')
				      </isEqual>
				     )
</sql>
<!-- 每一个型号在每一个月的促销详细清单 -->
<sql id="getModelPromotionInfos">
<!-- ,promotiondata1 as ( 
		select   p.id,			 
			     p.ym,
			     p.year,
			     p.month,
			     p.version_id,
			     p.version_code,			 
			     b.objId,
		         促销总额
		         (case when p.subsidy_type_id = 5  then to_char(p.subsidy)  else ''  end) c1, 
		         提车支持
		         (case when p.subsidy_type_id = 6 then to_char(p.subsidy)  else ''  end) c2,  
		         零售支持
		         (case when p.subsidy_type_id = 7  then to_char(p.subsidy)  else ''  end) c3, 
		         人员奖励 
		         (case when p.subsidy_type_id = 8  then to_char(p.subsidy)  else ''  end) c4,  
		         金融贷款 
		         (case when p.subsidy_type_id = 9  then to_char(p.subsidy)  else ''  end) c5, 
		         置换支持  
		         (case when p.subsidy_type_id = 10  then to_char(p.subsidy)  else ''  end) c6,  
		         赠送保险  
		         (case when p.subsidy_type_id = 11  then to_char(p.subsidy)  else ''  end) c7,  
		         赠送礼品（油卡、保养） 
		         (case when p.subsidy_type_id = 12  then to_char(p.subsidy)  else ''  end) c8,
		         保养
		         (case
               when p.subsidy_type_id = 14 then
                p.subsidy
               else
                null
             end) maintenance, 
		         选择促销 
		         (case when p.subsidy_type_id = 13  then to_char(p.subsidy)  else ''  end) c9  
		  from $dataUserName$FDM_VERSION_SUBSIDY2 p  
		  left join $dataUserName$FDM_SUBSIDY_TYPE2 t on p.subsidy_type_id = t.subsidy_type_id  
		  inner join Version b on b.vid = p.version_id  
		  where 1=1  
		  and to_date(P.YM,'yyyymm') between  to_date('$beginDate$','yyyy-mm') and to_date('$endDate$','yyyy-mm') 
		 当为车型时加在售在产限定条件
		   <isEqual property="objectType" compareValue="2">
		  And nvl(CASE
               WHEN b.isBase = '1' THEN
                to_char(b.halt_no_sale_date, 'YYYYMM')
               else
                to_char(add_months(b.halt_product_date,1), 'YYYYMMDD')
             end,
             '99999999') >= case
           when b.isBase = '1' then
            to_char(p.ym)
           else
           to_char(p.ym) || 32
         end
     And to_char(p.ym) >= to_char(add_months(b.launch_date,1), 'YYYYMM')
		   </isEqual>
		    ) 
,promotiondata as ( 
	select ym,year,month,version_id,version_code,objId,
		   max(c1) c1,max(c2) c2,max(c3) c3,max(c4) c4,max(c5) c5,max(c6) c6,max(c7) c7,max(c8) c8,max(maintenance) maintenance,max(c9) c9  
    from  promotiondata1  group by ym,year,month,version_id,version_code,objId
) -->
   ,promotiondata1 as
 (select p.id,
         p.ym,
         p.year,
         p.month,
         p.version_id,
         p.version_code,
         b.objId,
         (case
           when p.subsidy_type_id = 5 then
            to_char(p.subsidy)
           else
            ''
         end) c1,
         (case
           when p.subsidy_type_id = 6 then
            to_char(p.subsidy)
           else
            ''
         end) c2,
         (case
           when p.subsidy_type_id = 7 then
            to_char(p.subsidy)
           else
            ''
         end) c3,
         (case
           when p.subsidy_type_id = 8 then
            to_char(p.subsidy)
           else
            ''
         end) c4,
         (case
           when p.subsidy_type_id = 9 then
            to_char(p.subsidy)
           else
            ''
         end) c5,
         (case
           when p.subsidy_type_id = 10 then
            to_char(p.subsidy)
           else
            ''
         end) c6,
         (case
           when p.subsidy_type_id = 11 then
            to_char(p.subsidy)
           else
            ''
         end) c7,
         (case
           when p.subsidy_type_id = 12 then
            to_char(p.subsidy)
           else
            ''
         end) c8,
         (case
           when p.subsidy_type_id = 14 then
            p.subsidy
           else
            null
         end) maintenance,
         (case
           when p.subsidy_type_id = 13 then
            to_char(p.subsidy)
           else
            ''
         end) c9
    from FDM_VERSION_SUBSIDY2 p
    left join FDM_SUBSIDY_TYPE2 t
      on p.subsidy_type_id = t.subsidy_type_id
   inner join Version b
      on b.vid = p.version_id
      <isEqual property="objectType" compareValue="2">
        inner join full_time f on f.vid = p.version_id and f.ym = p.ym
      </isEqual>
   where 1 = 1
     and to_date(P.YM, 'yyyymm') between to_date('$beginDate$', 'yyyy-mm') and
         to_date('$endDate$', 'yyyy-mm')
         <isEqual property="objectType" compareValue="2">
     <!-- And nvl(CASE
               WHEN b.isBase = '1' THEN
                to_char(b.halt_no_sale_date, 'YYYYMM')
               else
                to_char(add_months(b.halt_product_date, 1), 'YYYYMMDD')
             end,
             '99999999') >= case
           when b.isBase = '1' then
            to_char(p.ym)
           else
            to_char(p.ym) || 32
         end
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM') -->
     </isEqual>
     <isEqual property="objectType" compareValue="3">
     And nvl( to_char(b.halt_no_sale_date, 'YYYYMM'),'99999999') >= to_char(p.ym)
     And to_char(p.ym) >= to_char(add_months(b.launch_date, 1), 'YYYYMM')
     </isEqual>
     ),
promotiondata as
 (select ym,
         year,
         month,
         version_id,
         version_code,
         objId,
         max(c1) c1,
         max(c2) c2,
         max(c3) c3,
         max(c4) c4,
         max(c5) c5,
         max(c6) c6,
         max(c7) c7,
         max(c8) c8,
         max(maintenance) maintenance,
         max(c9) c9
    from promotiondata1
   group by ym, year, month, version_id, version_code, objId)
</sql>
<!-- 计算mix权重 -->		
<sql id="getModelMix">
<!-- ,versionSum as (
   	Select round( Sum(s.Version_Sale),0) As Version_Sale,
   		   Decode(v.Is_Installed_Flag,1,v.o_Car_Number_Id,v.Vid) As Vid,
   		   v.Objid,
   		   s.year,
   		   s.month,
   		   s.year||lpad(s.month, 2, 0) yearmonth  
   	From $dataUserName$FDM_VERSION_SALES s,  Version v  
   <isNotEqual property="objectType" compareValue="2" >Where s.Version_id = v.Vid </isNotEqual>	
     竞品，新款上市车型型号直接取上代车型型号销量（上月）  
   <isEqual property="objectType" compareValue="2">
    Where s.Version_id = (CASE WHEN v.isBase!='1' AND  (to_char(add_months(to_date(s.year||lpad(s.month,2,0),'yyyymm'), 1), 'yyyymm') = to_char(v.launch_date, 'YYYYMM') ) THEN v.parentid ELSE v.vid END)
     车型维度本品取在售，竞品取在产
      And nvl(CASE WHEN v.isBase = '1' THEN to_char(v.halt_no_sale_date,'YYYYMM') else to_char(add_months(v.halt_product_date,1),'YYYYMMDD') end,'99999999')>= case when v.isBase = '1' then to_char( add_months(to_date(s.year || lpad(s.month, 2, 0),'YYYYMM'),1),'YYYYMM') else to_char( add_months(to_date(s.year || lpad(s.month, 2, 0),'YYYYMM'),1),'YYYYMM')||32 end 
	  And to_char( add_months(to_date(s.year || lpad(s.month, 2, 0),'YYYYMM'),1),'YYYYMM') >= to_char(add_months(v.launch_date,1),'YYYYMM')
    </isEqual>
    给其他维度都加上在售条件
    <isEqual  property="objectType" compareValue="3">
    And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
         to_char( add_months(to_date(s.year || lpad(s.month, 2, 0),'YYYYMM'),1),'YYYYMM')
     And  to_char( add_months(to_date(s.year || lpad(s.month, 2, 0),'YYYYMM'),1),'YYYYMM') >= to_char(add_months(v.launch_date,1), 'YYYYMM')
    </isEqual>
    and s.year || lpad(s.month, 2, 0) Between to_char(add_months(to_date(Replace('$beginDate$', '-', ''),'YYYYMM'), -1),'YYYYMM') AND Replace('$endDate$','-','')
    <isNotEqual  property="objectType" compareValue="1">
        And v.is_installed_flag != 1
        </isNotEqual>
   	Group By Decode(v.Is_Installed_Flag,1,v.o_Car_Number_Id,v.Vid),v.Objid,s.year,s.month  
)  -->
,versionSum as
 (Select round(Sum(s.Version_Sale), 0) As Version_Sale,
 		<isEqual property="objectType" compareValue="2">
 		f.vid,f.Objid,
 		</isEqual>
 		<isNotEqual property="objectType" compareValue="2">
 		 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,v.Objid,
 		</isNotEqual>
         s.year,
         s.month,
         s.year || lpad(s.month, 2, 0) yearmonth
    From FDM_VERSION_SALES s, 
    <isEqual property="objectType" compareValue="2">
    full_time f
    </isEqual>
    <isNotEqual property="objectType" compareValue="2">
     Version v
    </isNotEqual>
    <isEqual property="objectType" compareValue="2">
    Where 1=1
      and  f.vid = s.version_id and f.ym = to_char(add_months(to_date(s.year||lpad(s.month,2,0),'YYYYMM'),1),'YYYYMM')
         </isEqual>
     <isEqual property="objectType" compareValue="3">  
      Where s.Version_id = v.vid
      And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
         to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'YYYYMM'),
                            1),
                 'YYYYMM')
     And to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'YYYYMM'),
                            1),
                 'YYYYMM') >=
         to_char(add_months(v.launch_date, 1), 'YYYYMM')
      </isEqual>  
     and s.year || lpad(s.month, 2, 0) Between
         to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'YYYYMM'),
                            -1),
                 'YYYYMM') AND Replace('$endDate$', '-', '')
                 <isNotEqual property="objectType" compareValue="2">
                  And v.is_installed_flag != 1
                 </isNotEqual>
   Group By 
   <isEqual property="objectType" compareValue="2">
   f.vid,f.Objid,
   </isEqual>
   <isNotEqual property="objectType" compareValue="2">
   Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),v.Objid,
   </isNotEqual>
            s.year,
            s.month)
,versionSum2 as (
   	<!-- Select round( Sum(s.Version_Sale),0) As Version_Sale,
   		   Decode(v.Is_Installed_Flag,1,v.o_Car_Number_Id,v.Vid) As Vid,
   		   v.Objid,
   		   s.year,
   		   s.month,
   		   s.year||lpad(s.month, 2, 0) yearmonth  
   	From $dataUserName$FDM_VERSION_SALES_DIRECT s,  Version v  
    Where s.Version_id = v.vid
     竞品，新款上市车型型号直接取上代车型型号销量（上月）  
   <isEqual property="objectType" compareValue="2">
     车型维度本品取在售，竞品取在产
      And nvl(CASE WHEN v.isBase = '1' THEN to_char(v.halt_no_sale_date,'YYYYMM') else to_char(add_months(v.halt_product_date,1),'YYYYMMDD') end,'99999999')>= case when v.isBase = '1' then s.year || lpad(s.month, 2, 0) else s.year || lpad(s.month, 2, 0)||32 end 
	  And s.year || lpad(s.month, 2, 0) >= to_char(add_months(v.launch_date,1),'YYYYMM')
    </isEqual>
    给其他维度都加上在售条件
    <isEqual  property="objectType" compareValue="3">
    And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
         s.year || lpad(s.month, 2, 0)
     And  s.year || lpad(s.month, 2, 0) >= to_char(add_months(v.launch_date,1), 'YYYYMM')
    </isEqual>
    <isNotEqual  property="objectType" compareValue="1">
        And v.is_installed_flag != 1
        </isNotEqual>
         and s.year || lpad(s.month, 2, 0) Between
         to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'YYYYMM'),
                            -1),
                 'YYYYMM') AND Replace('$endDate$', '-', '')
   	Group By Decode(v.Is_Installed_Flag,1,v.o_Car_Number_Id,v.Vid),v.Objid,s.year,s.month  --> 
   	Select round(Sum(s.Version_Sale), 0) As Version_Sale,
 		<isEqual property="objectType" compareValue="2">
 		f.vid,f.Objid,
 		</isEqual>
 		<isNotEqual property="objectType" compareValue="2">
 		 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,v.Objid,
 		</isNotEqual>
         s.year,
         s.month,
         s.year || lpad(s.month, 2, 0) yearmonth
    From FDM_VERSION_SALES s, 
    <isEqual property="objectType" compareValue="2">
    full_time f
    </isEqual>
    <isNotEqual property="objectType" compareValue="2">
     Version v
    </isNotEqual>
    Where 1=1
    <isEqual property="objectType" compareValue="2">
      and  f.vid = s.version_id and f.ym = s.year||lpad(s.month,2,0)
     </isEqual>
     <isEqual  property="objectType" compareValue="3">
    And nvl(to_char(v.halt_no_sale_date, 'YYYYMM'), '999999') >=
         s.year || lpad(s.month, 2, 0)
     And  s.year || lpad(s.month, 2, 0) >= to_char(add_months(v.launch_date,1), 'YYYYMM')
    </isEqual>  
     and s.year || lpad(s.month, 2, 0) Between
         to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'YYYYMM'),
                            -1),
                 'YYYYMM') AND Replace('$endDate$', '-', '')
                 <isNotEqual property="objectType" compareValue="2">
                  And v.is_installed_flag != 1
                 </isNotEqual>
   Group By 
   <isEqual property="objectType" compareValue="2">
   f.vid,f.Objid,
   </isEqual>
   <isNotEqual property="objectType" compareValue="2">
   Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),v.Objid,
   </isNotEqual>
            s.year,
            s.month
) 
,objsum as (	
		Select Sum(s.Version_Sale) As Obj_Sale,
			   s.Objid,
			   s.year,
			   s.month,
			   s.yearmonth yearmonth  
	    From versionSum2 s
	    Where 1=1 
	    Group By s.Objid,s.year,s.month,s.yearmonth 
) 
,versionmix As (
	select  v.Version_Sale,
			v.vid,
			v.Vid version_id,
			v.objid,
			v.year,
   		    v.month,
			v.yearmonth,
			v.yearmonth ym,
			o.Obj_Sale,  
			( case when o.Obj_Sale IS NOT NULL and o.Obj_Sale > 0  and v.Version_Sale IS NOT NULL then (v.Version_Sale/o.Obj_Sale) else null end ) mix 
	from  objsum o ,versionSum2 v  where o.objid = v.objid and o.yearmonth = v.yearmonth 
)     
</sql>

<select id="exportSubmodelProfitData" resultClass="com.ways.app.policy.model.VersionPromotionInfoEntity">
	with 
		<isEqual property="objectType" compareValue="2"><!-- 车型维度 -->
			Base As
 (Select distinct p.yearmonth ym,
                  v.version_id Vid,
                  v.parentid Pid,
                  To_Char(v.launch_date, 'YYYYMM') listingdate,
                  v.submodel_id Submodelid,
                  v.manf_id manfid,
                  v.brand_id brandid
    From fdm_car_version v, fdm_date_main p
   where v.submodel_id In ($modelIds$)
     and p.yearmonth between replace('$beginDate$', '-', '') and
         replace('$endDate$', '-', '')
     and p.yearmonth >= to_char(v.launch_date, 'YYYYMM')
    <![CDATA[ and (p.yearmonth <= to_char(v.halt_no_sale_date, 'YYYYMM') or
         v.halt_no_sale_date is null)
         and v.is_installed_flag != 1]]>
         ),
Full_Time1 As /*拿出各月里的最新代型号(没有下一代的型号)*/
 (select ym, vid, pid, listingdate, submodelId, manfid, brandid
    from (select * from base) d
   where not Exists (select 1
            from base s
           where d.ym = s.ym
             and d.vid = s.pid)),
	Full_Time2 as
	 (select distinct case
	           when (vs.version_sale is null or round(vs.version_sale) = 0 )
	           and v.parentid is not null and v.parentid <![CDATA[<> 0  and
                f.ym >= to_char(dv.launch_date, 'YYYYMM') and
                (f.ym <= to_char(dv.halt_no_sale_date, 'YYYYMM') or
                dv.halt_no_sale_date is null)]]>
	           then
	            v.parentid
	           else
	            v.version_id
	         end vid,
	         f.ym,
	         f.ym yearmonth
	    from Full_Time1 f
	   inner join faw_vw.fdm_car_version v
	      on v.version_id = f.vid
	      left join fdm_car_version dv
      on dv.version_id = v.parentid
	    left join faw_vw.fdm_version_sales vs
	      on vs.version_id = f.vid
	     and to_char(add_months(to_date(vs.year || lpad(vs.month, 2, 0),
	                                    'YYYYMM'),
	                            1),
	                 'YYYYMM') = f.ym),
		</isEqual>
	Version As(
 		(select t.* from (Select v.VERSION_ID Vid,
	     		v.VERSION_ID,
	           v.VERSION_NAME_CN Versionname,
	           v.VERSION_NAME_EN VersionNameEn,
	           v.VERSION_CODE Versioncode,
	            v.on_product,
	             v.halt_product_date,
                 v.halt_no_sale_date,
                 v.parentid,
         		v.on_sale,
         		v.launch_date,
	           v.YEAR Modelyear,
	           b.SUBMODEL_NAME_EN || ' ' || v.VERSION_TRIM_NAME_EN Versionchartname,
	           v.VERSION_TRIM_NAME_EN,
	           v.version_short_name_cn versionShortName,
	           v.version_short_name_en versionShortNameEn,
	           to_char(v.LAUNCH_DATE,'YYYY-MM-DD') Versionlaunchdate,
	           v.VERSION_TRIM_NAME_CN Typeid,
	           v.VERSION_TRIM_NAME_EN Typeiden,
	           v.ORIGINAL_VERSION_ID o_car_number_id,
	           v.is_installed_flag,
	           <!-- 车型 -->
	        <isEqual property="objectType" compareValue="2">
		      	b.SUBMODEL_ID ObjId,
	            b.SUBMODEL_NAME_CN objName,
	            b.SUBMODEL_NAME_EN objNameEn,
	      	</isEqual>
	      	<!-- 厂商-品牌 -->
	      	<isEqual property="objectType" compareValue="3">
	      		s.ID ObjId,
	           	s.manf_name_cn objName,
	           	s.manf_name_en objNameEn,
	      	</isEqual>
	           s.ID manfId,
	           s.manf_name_cn Manfname,
	           s.manf_name_en Manfnameen,
	           b.SUBMODEL_ID  SubModelId,
	           b.SUBMODEL_NAME_CN Submodelname,
	           b.SUBMODEL_NAME_EN Submodelnameen,
	           Pl.EMISSIONS_NAME Discharge,
	           Pd.TRNSMS_NAME_CN Gearmode,
	           case when v.brand_id in(6,31) and pd.TRNSMS_NAME_EN = 'DCT' then 'DSG' else pd.TRNSMS_NAME_EN end Gearmodeen,
	           cs.BODY_TYPE_NAME_CN bodytype,
	       	   cs.BODY_TYPE_NAME_EN bodytypeen,
	           wg.grade_id GradeId,
         wg.grade_name_en segmentname,
         wg.parent_grade_name||' '||wg.grade_name_en||'-'||wg.sub_grade_name Gradename,
        wg.parent_grade_name||' '||wg.grade_name_en||'-'||wg.sub_grade_name Gradenameen,
	           Case When t.brand_id = 31 And s.manf_id = 109 Then '1' Else '0' End isBase,
	           o.orig_id origId,
			   o.ORIG_NAME_CN origName,
	           o.ORIG_NAME_EN origNameEn,
			   t.BRAND_ID brandId,
	           t.BRAND_NAME_CN brandName,
	           t.BRAND_NAME_EN brandNameEn
	      from $dataUserName$FDM_CAR_VERSION v 
	       Inner join $dataUserName$FDM_CAR_SUBMODEL b       on b.SUBMODEL_ID = v.SUBMODEL_ID  
	       Inner join $dataUserName$fdm_car_brand t          on t.brand_id = v.brand_id
	       Inner join $dataUserName$FDM_CAR_ORIG o           on o.orig_id = t.orig_id 
	       Inner join $dataUserName$v_car_manf_brand s       on s.manf_id = v.manf_id  and s.brand_id = v.brand_id    
	       Inner join $dataUserName$FDM_CAR_EMISSIONS pl     on pl.EMISSIONS_ID = v.EMISSIONS_ID
	       Inner join $dataUserName$FDM_CAR_TRANSMISSION pd  on pd.TRNSMS_ID = v.TRNSMS_ID  
	       Inner join $dataUserName$FDM_FAW_BODY_TYPE  mtype on mtype.SUBMODEL_ID = v.SUBMODEL_ID  and mtype.group_id = $userId$
	       Inner join $dataUserName$fdm_ways_body_type cs    on cs.body_type_id = mtype.BODY_TYPE_ID
	       Inner join  v_faw_info_grade g on g.model_id = v.model_id 
          Inner Join v_faw_grade  wg On  g.GRADE_ID =  wg.grade_id
		 Where 1=1 
	     <isEqual property="objectType" compareValue="2">
	     	And b.SUBMODEL_ID in ($modelIds$)
	     </isEqual>
	     <isEqual property="objectType" compareValue="3">
	     	And s.manf_id||'~'||t.BRAND_ID in ($manfs$)
	     </isEqual>
	    ) t
	     
	     )
)
<!-- 时间段缺失日期补充 -->
<include refid="getFullTimes"/>
<!-- 型号促销明细数据 -->
<include refid="getModelPromotionInfos"/>
<!-- 型号销量在全部销量数据中的占比(按月分组,按型号所在的对象分组汇总对象的销量) -->
<include refid="getModelMix"/>
<!-- 根据mix汇总对象的促销值 -->
,objPromotion  as  (
select p1.*,v1.obj_sale,v1.mix,v1.version_sale From promotiondata p1 left join versionmix v1  
on p1.year = v1.year And p1.month = v1.month And p1.objId = v1.objId And p1.version_id = v1.version_id
)
<!-- 型号的促销详细情况(导出数据需要导出到型号一级的详细数据) -->
,objPromotionSum as
 (select ym,
         year,
         month,
         version_id,
         objId,
         SUM(obj_sale) obj_sale,
         SUM(mix) MIX,
         SUM(version_sale) version_sale,
         sum(c1) c1,
         sum(c2) c2,
         sum(c3) c3,
         sum(c4) c4,
         sum(c5) c5,
         sum(c6) c6,
         sum(c7) c7,
         sum(c8) c8,
         sum(c9) c9,
         sum(maintenance) maintenance
    from objPromotion
   group by ym, year, month, objId, version_id),
   <!-- 城市对比 -->
<isEqual property="analysisType" compareValue="2">
<isEqual property="citys" compareValue="0">
 t4 as
 (SELECT A.*
    FROM fdm_version_state_price a
    inner join full_time f on f.vid = a.version_id and f.ym = a.ym
   WHERE a.ym BETWEEN Replace('$beginDate$', '-', '') AND Replace('$endDate$', '-', '')
     AND a.week = '7'
     <!-- group by a.version_id, a.ym -->
     ),
 </isEqual>
 <isNotEqual property="citys" compareValue="0">
    t4 as
 (select d.vid       version_id,
         d.yearmonth ym,
         d.week,
         d.tp        price_fawvw,
         d.cityId    city_id
    from (Select b.vid Vid,
                 p.Ym Yearmonth,
                 p.Week,
                 p.price_fawvw tp,
                 p.City_Id Cityid,
                 Row_Number() Over(Partition By b.vid, p.City_Id, p.Ym, p.Week Order By b.Vid Desc) Rn
            From Fdm_Version_City_Price p
            <isNotEqual property="objectType" compareValue="2">
             Inner Join version b
              On b.Vid = p.Version_Id
            </isNotEqual>
            <isEqual property="objectType" compareValue="2">
            inner join full_time b on b.vid = p.version_id and b.ym = p.ym
            </isEqual>
           Where p.City_Id In ($citys$)
             And p.price_fawvw Is Not Null
             And P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '')
             and p.Week = '7') d
   where d.rn = 1),
t8 as
 (Select p.ym,
         p.week,
         t.vid version_id,
        t.objid,
         c.City_Id,
         c.City_Name_Cn Citynamecn,
         c.City_Name_En Citynameen
     From Fdm_City c,(select distinct ym, week, version_id
            from fdm_version_state_msrp
           where (ym Between Replace('$beginDate$', '-', '') And
                 Replace('$endDate$', '-', '') and week = '7')) p
   inner join full_time t
      on t.vid = p.version_id
     and t.ym = p.ym
   Where 1 = 1
   <isEqual property="objectType" compareValue="2">
  and t.objid = $modelIds$
   </isEqual>
   <isEqual property="objectType" compareValue="3">
  and t.objid in ($manfs$)
   </isEqual>
     And c.City_Id In ($citys$)),  
     </isNotEqual>
     </isEqual>
     <!-- 时间和对象对比 -->
     <isNotEqual property="analysisType" compareValue="2">
     <isEqual property="citys" compareValue="0">
     t4 as
 (SELECT A.*
    FROM fdm_version_state_price a
    inner join full_time f on f.vid = a.version_id and f.ym = a.ym
   WHERE a.ym BETWEEN Replace('$beginDate$', '-', '') AND
         Replace('$endDate$', '-', '')
     AND a.week = '7'),
     </isEqual>
     <isNotEqual property="citys" compareValue="0">
      t4 as
 (select distinct e.vid version_id,
                  e.yearmonth ym,
                  e.week,
                  Case
                    When Max(e.MaxCityMix)
                     over(partition by e.vid, e.yearmonth, e.week) Is Not Null Then
                     Sum(e.Mix) Over(Partition By e.Vid, e.Yearmonth, e.week)
                    Else
                     Avg(e.minTp)
                     Over(Partition By e.vid, e.yearmonth, e.week)
                  End price_fawvw
    from (select d.vid,
                 d.yearmonth,
                 d.week,
                 case
                   when min(d.value) is not null then
                    to_char(min(d.tp) * ratio_to_report(sum(d.value))
                            over(partition by d.vid, d.yearmonth, d.week))
                   else
                    null
                 end mix,
                 Min(d.tp) minTP,
                 Max(d.value) maxCityMix
            From (select b.vid vid,
                         p.ym Yearmonth,
                         p.week,
                         p.price_fawvw tp,
                         p.city_id region,
                         m.value,
                         <isNotEqual property="objectType" compareValue="2">
                          b.submodelid as sub_model_id,
                         </isNotEqual>
                         <isEqual property="objectType" compareValue="2">
                         b.objid as sub_model_id,
                         </isEqual>
                         row_number() over(partition by b.vid, p.City_id, p.Ym, p.Week Order By b.Vid Desc) rn
                    From Fdm_Version_City_Price p
                    <isNotEqual property="objectType" compareValue="2">
                     inner join version b
                      on b.vid = p.Version_Id
                    </isNotEqual>
                  	<isEqual property="objectType" compareValue="2">
                  	inner join full_time b on b.vid = p.version_id and b.ym = p.ym 
                  	</isEqual>
                    
                    left join Fdm_Model_City_Mix m
                      on m.Sub_Model_Id = 
                      <isNotEqual property="objectType" compareValue="2">
                      b.Submodelid
                      </isNotEqual>
                      <isEqual property="objectType" compareValue="2">
                      b.objid
                      </isEqual>
                     and m.City_Id = p.City_Id
                     and m.year = (CASE
                           <![CDATA[  WHEN p.Year <= 2013 THEN]]>
                            2013
                           ELSE
                            p.Year - 1
                         END)
                   where 1 = 1
                     And P.ym between Replace('$beginDate$', '-', '') and
                         Replace('$endDate$', '-', '')
                     and p.Week = '7'
                     and p.City_Id in ($citys$)
                     and p.price_fawvw is not null
                     and p.price_fawvw != 0.00) d
           where d.rn = 1
           group by d.vid, d.yearmonth, d.week, d.region) e),
     </isNotEqual>
     </isNotEqual>
     t5 as
 (select *
    from (select b.vid vid,
                          p.ym ym,
                          p.month,
                          p.year,
                          nvl(p.msrp, 0) msrp,
                          row_number() over(partition by p.version_id, p.ym order by p.week) rn
            from Fdm_Version_State_Msrp p
            <isNotEqual property="objectType" compareValue="2">
            inner join version b
              on b.vid = p.Version_Id
            </isNotEqual>
           <isEqual property="objectType" compareValue="2">
           inner join full_time b on b.vid = p.version_id and b.ym = p.ym
           </isEqual>
           where 1 = 1
             and p.msrp is not null
             And ((P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', ''))))
            where rn=1     ) ,
 
t6 as
 (select *
    from (select 
               b.vid vid,
                 p.ym ym,
                 p.week,
                 nvl(p.rebate_count,0) rebate_count,
                 nvl(p.reward_count,0) reward_count,
                nvl( p.rebate_pst,0) rebate_pst
            From Fdm_Faw_Rebate p
            <isNotEqual property="objectType" compareValue="2">
             inner join version b
              on b.vid = p.Version_Id
            </isNotEqual>
          	<isEqual property="objectType" compareValue="2">
          	inner join full_time b on b.vid = p.version_id and b.ym = p.ym
          	</isEqual>
           where 1 = 1
             And ((P.ym between Replace('$beginDate$', '-', '') and
                 Replace('$endDate$', '-', '') and p.Week = 7) ))
   )  
    ,
t7 as (select t.*, t.year || lpad(t.month, 2, 0) ym
    from (Select case
           when month = 12 then
            1
           else
            month + 1
         end month,
         case
           when month = 12 then
            year + 1
           else
            year
         end year,
         s.vid vid,
            s.version_sale
    From versionsum s<!-- 
    inner join version v
    on s.vid=v.vid -->
        where
        <![CDATA[  
        s.year >= SUBSTR('$beginDate$', 0, 4)-1 and s.year <= SUBSTR('$endDate$',0,4)
        ]]>) t
) 
<isEqual property="analysisType" compareValue="2">
<isEqual property="citys" compareValue="0">
Select distinct 
			0 cityid,
			null cityName,
			null cityNameEn,
			BASE1.vid Versionid,
            v.Versionchartname,
            v.Isbase,
            v.Versionname,
            V.VERSIONNAMEEN,
            v.Versioncode,
            v.Modelyear,
            v.Versionlaunchdate,
            v.Typeid,
            v.Typeiden,
            v.Manfname,
            v.Manfnameen,
            v.Submodelname,
            v.Submodelnameen,
            v.Discharge,
            v.Gearmode,
            v.Gearmodeen,
            v.Bodytype,
            v.Bodytypeen,
            v.Gradename,
            v.Gradenameen,<!-- 车身级别 -->
            v.origId,
            v.origName,
            v.origNameEn,
            v.brandId,
            v.brandName,
            v.brandNameEn,         
            BASE1.versionShortName,
            BASE1.versionShortNameEn,
            BASE1.yearmonth,
            BASE1.ym,
            round(mix.version_sale, 0) versionSale,
            ROUND(t7.version_sale, 0) VersionLastMonthSales,
                ROUND(nvl(round(rs.c8, 0), 0) + nvl(round(rs.c7, 0), 0) +
                      nvl(round(rs.maintenance, 0), 0) + nvl(round(rs.c4, 0), 0) +
                      nvl(round(rs.c5, 0), 0) + nvl(round(rs.c6, 0), 0),
                      0) customerincentive,
                ROUND(nvl(round(rs.c2, 0), 0) + nvl(round(rs.c3, 0), 0), 0) grosssupports,
                round(t6.rebate_count,0) margin,
                round(t6.reward_count,0) bonus,
                ROUND(t5.msrp, 0) MSRP,
                v.segmentname segment,
                
                ROUND(round(t5.msrp) - round(t6.rebate_count) - round(t6.reward_count) -
                      nvl(round(rs.c2, 0), 0) - nvl(round(rs.c3, 0), 0) -
                      nvl(round(rs.c8, 0), 0) - nvl(round(rs.c7, 0), 0) -
                      nvl(round(rs.maintenance, 0), 0) - nvl(round(rs.c4, 0), 0) -
                      nvl(round(rs.c5, 0), 0) - nvl(round(rs.c6, 0), 0),
                      0) invoiceprice,
                ROUND(round(t5.msrp) - round(t6.rebate_count) - (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),
                      0) grossinvoiceprice,
                ROUND(t4.price_fawvw, 0) TP,
                ROUND(round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),
                      0) profit,
                round((round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance),0))) /
                      round(t5.msrp),
                      3) profitrate,
                 round( (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),0) fullypaid,
                (case
                  when mix.mix is not null then
                   round(mix.mix * 100, 2) || '%'
                  else
                   '-'
                end) versionMix,
                
                round(rs.c1, 0) c1,
                round(rs.c2, 0) c2,
                round(rs.c3, 0) c3,
                round(rs.c4, 0) c4,
                round(rs.c5, 0) c5,
                round(rs.c6, 0) c6,
                round(rs.c7, 0) c7,
                round(rs.c8, 0) c8,
                round(rs.c9, 0) c9,
                round(rs.maintenance,0) maintenance
  FROM Full_Time BASE1,Version v,Versionmix mix,ObjPromotionSum rs,promotiondata p1,t4,t5,t6,t7
   where 1=1 and  BASE1.Vid = v.Vid and mix.vid(+) = BASE1.Vid
   and BASE1.YEARMONTH = mix.YEARMONTH(+)
   and BASE1.Vid = rs.Version_id(+)
   And BASE1.ObjId = rs.ObjId(+)
   And BASE1.ym = rs.ym(+)
   and BASE1.ym = p1.ym(+)
    and base1.vid=p1.version_id(+)
    and BASE1.vid = t4.version_id(+)
   and BASE1.ym = t4.ym(+)
   and t5.vid(+) = BASE1.vid
   and t5.ym(+) = BASE1.ym
   and BASE1.vid = t6.vid(+)
   and BASE1.ym = t6.ym(+)
   and t7.vid(+) = BASE1.vid
   and t7.ym(+) = BASE1.ym
   Order By  TO_NUMBER(BASE1.YEARMONTH) desc ,BASE1.Vid
</isEqual>
<isNotEqual property="citys" compareValue="0">
Select distinct
         t8.city_id cityid,
         t8.citynamecn cityname,
         t8.citynameen,
 			BASE1.vid Versionid,
                v.Versionchartname,
                v.Isbase,
                v.Versionname,
                V.VERSIONNAMEEN,
                v.Versioncode,
                v.Modelyear,
                v.Versionlaunchdate,
                v.Typeid,
                v.Typeiden,
                v.Manfname,
                v.Manfnameen,
                v.Submodelname,
                v.Submodelnameen,
                v.Discharge,
                v.Gearmode,
                v.Gearmodeen,
                v.Bodytype,
                v.Bodytypeen,
                v.Gradename,
                v.Gradenameen,
                v.origId,
                v.origName,
                v.origNameEn,
                v.brandId,
                v.brandName,
                v.brandNameEn,
                BASE1.versionShortName,
                BASE1.versionShortNameEn,
                BASE1.yearmonth,
                BASE1.ym,
                round(mix.version_sale, 0) versionSale,
                ROUND(t7.version_sale, 0) VersionLastMonthSales,
                ROUND(nvl(round(rs.c8, 0), 0) + nvl(round(rs.c7, 0), 0) +
                      nvl(round(rs.maintenance, 0), 0) +
                      nvl(round(rs.c4, 0), 0) + nvl(round(rs.c5, 0), 0) +
                      nvl(round(rs.c6, 0), 0),
                      0) customerincentive,
                ROUND(nvl(round(rs.c2, 0), 0) + nvl(round(rs.c3, 0), 0), 0) grosssupports,
                round(t6.rebate_count,0) margin,
                round(t6.reward_count,0) bonus,
                ROUND(t5.msrp, 0) MSRP,
                v.segmentname segment,
                ROUND(round(t5.msrp) - round(t6.rebate_count) - round(t6.reward_count) -
                      nvl(round(rs.c2, 0), 0) - nvl(round(rs.c3, 0), 0) -
                      nvl(round(rs.c8, 0), 0) - nvl(round(rs.c7, 0), 0) -
                      nvl(round(rs.maintenance, 0), 0) -
                      nvl(round(rs.c4, 0), 0) - nvl(round(rs.c5, 0), 0) -
                      nvl(round(rs.c6, 0), 0),
                      0) invoiceprice,
                ROUND(round(t5.msrp) - round(t6.rebate_count) -
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance), 0)),
                      0) grossinvoiceprice,
                ROUND(t4.price_fawvw, 0) TP,
                ROUND(round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance), 0)),
                      0) profit,
                round((round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance), 0))) / round(t5.msrp),
                      3) profitrate,
                round((round(t6.rebate_pst) - nvl(round(rs.maintenance), 0)), 0) fullypaid,
                (case
                  when mix.mix is not null then
                   round(mix.mix * 100, 2) || '%'
                  else
                   '-'
                end) versionMix,
                round(rs.c1, 0) c1,
                round(rs.c2, 0) c2,
                round(rs.c3, 0) c3,
                round(rs.c4, 0) c4,
                round(rs.c5, 0) c5,
                round(rs.c6, 0) c6,
                round(rs.c7, 0) c7,
                round(rs.c8, 0) c8,
                round(rs.c9, 0) c9,
                round(rs.maintenance, 0) maintenance
  FROM t8,Full_Time BASE1,Version v,Versionmix mix,ObjPromotionSum rs,promotiondata p1,t4,t5,t6,t7
   where 1=1 and t8.ym =base1.ym and t8.version_id = base1.vid and t8.objid=base1.objid
   and t8.Version_id = v.Vid
   and mix.vid(+) = t8.Version_id
   and t8.ym = mix.YEARMONTH(+)
   and t8.objid=mix.objid(+)
   and t8.version_id = rs.Version_id(+)
   And t8.ObjId = rs.ObjId(+)
   And t8.ym = rs.ym(+)
   and t8.ym = p1.ym(+)
   and t8.version_id = p1.version_id(+)
   and t8.objid=p1.objid(+)
   and t8.version_id = t4.version_id(+)
   and t8.ym = t4.ym(+)
   and t8.city_id=t4.city_id(+)
   and t5.vid = t8.version_id
   and t5.ym = t8.ym
   and t8.version_id = t6.vid(+)
   and t8.ym = t6.ym(+)
   and t7.vid(+) = t8.version_id
   and t7.ym(+) = t8.ym
 Order By  TO_NUMBER(BASE1.YEARMONTH) desc, BASE1.Vid,t8.city_id

</isNotEqual>
</isEqual>
<isNotEqual property="analysisType" compareValue="2">
Select distinct 
			0 cityid,
			null cityName,
			null cityNameEn,
			BASE1.vid Versionid,
            v.Versionchartname,
            v.Isbase,
            v.Versionname,
            V.VERSIONNAMEEN,
            v.Versioncode,
            v.Modelyear,
            v.Versionlaunchdate,
            v.Typeid,
            v.Typeiden,
            v.Manfname,
            v.Manfnameen,
            v.Submodelname,
            v.Submodelnameen,
            v.Discharge,
            v.Gearmode,
            v.Gearmodeen,
            v.Bodytype,
            v.Bodytypeen,
            v.Gradename,
            v.Gradenameen,<!-- 车身级别 -->
            v.origId,
            v.origName,
            v.origNameEn,
            v.brandId,
            v.brandName,
            v.brandNameEn,         
            BASE1.versionShortName,
            BASE1.versionShortNameEn,
            BASE1.yearmonth,
            BASE1.ym,
            round(mix.version_sale, 0) versionSale,
            ROUND(t7.version_sale, 0) VersionLastMonthSales,
                ROUND(nvl(round(rs.c8, 0), 0) + nvl(round(rs.c7, 0), 0) +
                      nvl(round(rs.maintenance, 0), 0) + nvl(round(rs.c4, 0), 0) +
                      nvl(round(rs.c5, 0), 0) + nvl(round(rs.c6, 0), 0),
                      0) customerincentive,
                ROUND(nvl(round(rs.c2, 0), 0) + nvl(round(rs.c3, 0), 0), 0) grosssupports,
                round(t6.rebate_count,0) margin,
                round(t6.reward_count,0) bonus,
                ROUND(t5.msrp, 0) MSRP,
                v.segmentname segment,
                
                ROUND(round(t5.msrp) - round(t6.rebate_count) - round(t6.reward_count) -
                      nvl(round(rs.c2, 0), 0) - nvl(round(rs.c3, 0), 0) -
                      nvl(round(rs.c8, 0), 0) - nvl(round(rs.c7, 0), 0) -
                      nvl(round(rs.maintenance, 0), 0) - nvl(round(rs.c4, 0), 0) -
                      nvl(round(rs.c5, 0), 0) - nvl(round(rs.c6, 0), 0),
                      0) invoiceprice,
                ROUND(round(t5.msrp) - round(t6.rebate_count) - (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),
                      0) grossinvoiceprice,
                ROUND(t4.price_fawvw, 0) TP,
                ROUND(round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),
                      0) profit,
                round((round(t4.price_fawvw) - round(t5.msrp) + round(t6.rebate_count) +
                      (round(t6.rebate_pst) - nvl(round(rs.maintenance),0))) /
                      round(t5.msrp),
                     3) profitrate,
                 round( (round(t6.rebate_pst) - nvl(round(rs.maintenance),0)),0) fullypaid,
                (case
                  when mix.mix is not null then
                   round(mix.mix * 100, 2) || '%'
                  else
                   '-'
                end) versionMix,
                
                round(rs.c1, 0) c1,
                round(rs.c2, 0) c2,
                round(rs.c3, 0) c3,
                round(rs.c4, 0) c4,
                round(rs.c5, 0) c5,
                round(rs.c6, 0) c6,
                round(rs.c7, 0) c7,
                round(rs.c8, 0) c8,
                round(rs.c9, 0) c9,
                round(rs.maintenance,0) maintenance
  FROM Full_Time BASE1,Version v,Versionmix mix,ObjPromotionSum rs,promotiondata p1,t4,t5,t6,t7
   where 1=1 and BASE1.Vid = v.Vid
   and mix.vid(+) = BASE1.Vid
   and BASE1.YEARMONTH = mix.YEARMONTH(+)
   and BASE1.Vid = rs.Version_id(+)
   And BASE1.ObjId = rs.ObjId(+)
   And BASE1.ym = rs.ym(+)
   and BASE1.ym = p1.ym(+)
    and base1.vid=p1.version_id(+)
    and BASE1.vid = t4.version_id(+)
   and BASE1.ym = t4.ym(+)
   and t5.vid(+) = BASE1.vid
   and t5.ym(+) = BASE1.ym
   and BASE1.vid = t6.vid(+)
   and BASE1.ym = t6.ym(+)
   and t7.vid(+) = BASE1.vid
   and t7.ym(+) = BASE1.ym
   Order By  TO_NUMBER(BASE1.YEARMONTH) desc ,v.Manfname,v.Submodelname,BASE1.Vid
   </isNotEqual>
</select>


<!-- 根据界面选取对象查询型号信息 -->
<!-- <sql id="getVersionInfoByObject">    
	    Select v.Version_Id Vid,
		       v.Version_Name_Cn Versionname,
		       v.Version_Name_En Versionnameen,
		       v.Version_Code Versioncode,
		       v.Year Modelyear,
		       to_char(add_months(v.launch_date, 1), 'yyyymm') launch_date,
               to_char(add_months(v.halt_product_date, 1), 'yyyymmdd') no_product,
               to_char(v.halt_no_sale_date, 'yyyymm') no_sale,
               v.parentid,
               b.Submodel_Name_En || ' ' || v.Version_Short_Name_En Versionchartname,
		       To_Char(v.Launch_Date, 'YYYY-MM-DD') Versionlaunchdate,
		       v.Version_Short_Name_Cn Typeid,
		       v.Version_Short_Name_En Typeiden,
		       v.Original_Version_Id o_car_number_id,
		       v.Is_Installed_Flag, 	           
	        <isEqual property="objectType" compareValue="2">
		       b.Submodel_Id      Objid,
		       b.Submodel_Name_Cn Objname,
		       b.Submodel_Name_En Objnameen,
	      	</isEqual>
	      	<isEqual property="objectType" compareValue="3">
	      	   s.id ObjId,
	           s.Manf_Name_Cn objName,
	           s.Manf_Name_En objNameEn,
	      	</isEqual>         
	           s.id Manfid,
		       s.Manf_Name_Cn Manfname,
		       s.Manf_Name_En Manfnameen,
		       brand.brand_name_cn brandname,
               brand.brand_name_en brandnameen,
		       b.Submodel_Id Submodelid,
		       b.Submodel_Name_Cn Submodelname,
		       b.Submodel_Name_En Submodelnameen,
	       	   Pl.Emissions_Name Discharge,
		       Pd.Trnsms_Name_Cn Gearmode,
		       Case When v.Brand_Id In (5, 19) And Pd.Trnsms_Name_En = 'DCT' Then 'DSG' Else Pd.Trnsms_Name_En End Gearmodeen,
		       Cs.Body_Type_Name_Cn Bodytype,
		       Cs.Body_Type_Name_En Bodytypeen,
		      wg.grade_id As Gradeid,
        wg.parent_grade_name||' '||wg.grade_name_en||'-'||wg.sub_grade_name Gradename,
       wg.parent_grade_name||' '||wg.grade_name_en||'-'||wg.sub_grade_name Gradenameen,
		       Case When b.Brand_Id = 19 And b.Manf_Id = 47 Then '1' Else '0' End Isbase
		  From Fdm_Car_Submodel     b,
		       Fdm_Car_Version      v,
		       v_Car_Manf_Brand     s,
		       Fdm_Car_Emissions    Pl,
		       Fdm_Car_Transmission Pd,
		       Fdm_Faw_Body_Type    Fs,
		       Fdm_Ways_Body_Type   Cs,
		       v_faw_info_grade      g,
         v_faw_grade          Wg,
		       Fdm_car_brand        brand
		 Where b.Submodel_Id = v.Submodel_Id
		   And s.Manf_Id = b.Manf_Id
		   And s.Brand_Id = b.Brand_Id
		   And Pl.Emissions_Id = v.Emissions_Id
		   And Pd.Trnsms_Id = v.Trnsms_Id
		   And b.Submodel_Id = Fs.Submodel_Id
		   And Fs.Body_Type_Id = Cs.Body_Type_Id      
		   And g.Model_Id = b.Model_Id
     And wg.GRADE_ID =g.grade_id
		   And Wg.Group_Id = $userId$
		   And brand.brand_id = b.brand_id
	     <isEqual property="objectType" compareValue="2">
	       And b.Submodel_Id in($modelIds$)
	     </isEqual>
	     <isEqual property="objectType" compareValue="3">
	       And s.id in($manfs$)
	     </isEqual>
</sql> -->

<!-- <sql id="getVersionColumn">
<isEqual property="objectType" compareValue="2">
	Select Distinct v.ObjId,v.ManfId,v.Manfname,v.Manfnameen,v.GradeId,v.Gradename,v.Gradenameen,v.Submodelid,
           v.Submodelnameen,v.Submodelname,v.Isbase
  	  From Version v Where v.Is_Installed_Flag != 1
</isEqual>
<isEqual property="objectType" compareValue="3">
	Select Distinct v.ObjId,v.ManfId,v.Manfname,v.Manfnameen,'' GradeId,'' Gradename,'' Gradenameen,'' Submodelid,
           '' Submodelnameen,'' Submodelname,v.Isbase
  	  From Version v Where v.Is_Installed_Flag != 1
</isEqual>
</sql> -->

<!-- 加载利润图形和表格数据 (车型，厂商-对象对比)-->
<!-- <select id="loadModelProfitChartAndTable" resultClass="com.ways.app.price.model.ObjectInfoEntity">
With Version As(
<include refid="getVersionInfoByObject"/>
)
查询所选城市,时间段成交价及城市Mix数据
,city_price as (
   select p.ym,p.year,p.week,p.version_id,p.city_id,p.price_fawvw    From Fdm_Version_City_Price P
       where  P.price_fawvw Is Not Null
          And P.price_fawvw != 0.00
          And P.City_Id In($citys$)
     <include refid="price_Condition"/>
)
,city_mix As(
 Select /*+ RULE*/
 		v.Vid,
 		v.ObjId,
        p.price_fawvw tp,
        P.City_Id Region,
       	p.Ym Yearmonth,
       	p.Week,
        获取最新型号的最低成交价 
     	Row_number() over(partition by v.Vid,p.City_Id,p.Ym,p.Week Order by v.Vid Desc) rn,
        m.Value
   From city_price P
  Inner Join Version v On P.Version_id = v.Vid
   斜对应关系查询出成交价城市Mix
   Left Join Fdm_Model_City_Mix m On m.Sub_Model_Id = v.subModelId And m.City_Id = P.City_id
					    <![CDATA[And m.Year = (Case When p.Year <= 2013 Then 2013 Else p.Year - 1 End) ]]>                                                           
    Where v.Is_Installed_Flag != 1)
,version_tp As(
获取型号成交价sum(min(tp)*([城市x]Mix/sum([城市All]Mix)))
select distinct e.vid,e.ObjId,e.yearmonth,e.Week,
			     当前型号所有城市Mix不为为Null时型号成交价sum(min(tp)*([城市x]Mix/sum([城市All]Mix)))
			     	  ,为Null时取当前型号最低成交价的算术平均	
			     
				 Case When Max(e.MaxCityMix) > 0 
                      Then Sum(e.Mix)
                      Else Avg(e.minTp)
                      End Tp  From
        (
          Select c.vid,c.ObjId,c.yearmonth,c.Week,Max(c.Value) MaxCityMix,Min(c.tp) minTp,c.region,
          城市Mix归一,获取型号在所选城市的Mix权重
          case when min(c.value) is not Null then to_char(min(c.tp) * ratio_to_report(sum(c.value)) over(partition by c.vid,c.yearmonth,c.Week))
               判断城市个数如果城市个数为一的话,加权成交价直接为最低参考价
               <isEqual property="cityNum" compareValue="1">
               	 	else to_char(min(c.tp))
               </isEqual>
               判断城市个数如果城市个数不为一的话,加权成交价为零
               <isNotEqual property="cityNum" compareValue="1">
               	    else null
               </isNotEqual>                                                                     
               end mix
          From  city_mix c
          where c.rn = 1  
          Group By c.Vid,c.ObjId,c.Yearmonth,c.Week,c.Region
         ) e
       Group By e.Vid, e.Objid, e.Yearmonth,e.Week   
)
时间段缺失日期补充
,Full_Time As(
      Select p.Yearmonth ym,v.Vid,v.ObjId, s.maxdate
             FROM Fdm_Date_Main p,Version v, (Select  Max(s.year || Lpad(s.month, 2, 0)) maxdate From Fdm_version_sales s ) s
             Where p.Yearmonth Between Replace('$beginDate$','-','') And Replace('$endDate$','-','')
             	<isEqual property="objectType" compareValue="2">
                   <![CDATA[
                  And nvl(case when v.isBase = '1' then v.no_sale else v.no_product end, '99999999') >= case when v.isBase = '1' then p.Yearmonth else p.Yearmonth||32 end 
                   ]]>
                 </isEqual>
                 <isEqual property="objectType" compareValue="3">
                   <![CDATA[
                   And (p.Yearmonth <= v.no_sale or v.no_sale is null)
                   ]]>
                 </isEqual>
                   And p.Yearmonth >= v.launch_date
             And v.is_installed_flag != 1
)
<isEqual property="objectType" compareValue="2">
,sales as (
   select s.version_id,s.year,s.month,s.version_sale From Fdm_Version_Sales s, Version V
    Where s.Year || Lpad(s.Month, 2, 0) Between to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'yyyymm'), -1), 'yyyymm') And Replace('$endDate$', '-', '')
                     And s.Version_Id = V.VID
)
,sales2 as ( 
<![CDATA[
   Select Version_Sale,  
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) and  v.parentid <> 0  
            Then v.parentid
              Else v.vid
           End As Vid,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else V.o_Car_Number_Id
           End As o_Car_Number_Id,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else v.Is_Installed_Flag
           End As Is_Installed_Flag,
         v.Objid,
         s.Year || Lpad(s.Month, 2, 0) Yearmonth From sales s left join  Version V on s.Version_Id = V.VID
) 
, sales3 as ( 
   Select * From (
     Select Version_Sale,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date)  and  v.parentid <> 0  
               Then v.vid
             End As Vid,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else V.o_Car_Number_Id
             End As o_Car_Number_Id,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else v.Is_Installed_Flag
             End As Is_Installed_Flag,
            v.Objid,
            s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s left join  Version V
               on s.Version_Id = V.VID )  where Vid is not null       
)
,sales4 as (
  Select * From sales2 Union Select * From sales3
)
]]>
获取型号加权销量(型号销量/车型销量通过型号与日期分组)
,weight_sales As(
	 Select e.Version_Sale,
	        e.Objid,
	        e.Vid,
	        to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
	        Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
	  From (
	  		 Select Sum(b.Version_Sale) As Version_Sale,
	               Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid) As Vid,
	               b.Objid,
	               b.Yearmonth
	            From sales4 b
	            Group By Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid), b.Objid, b.Yearmonth
	        ) e
	 Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth
)
补全缺失日期段数据
,all_weight_sales As(
    Select 
          s.Version_sale,s.Vid,s.ObjId,s.ym,
          Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > m.maxDate Then
            (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = m.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
             End saleMix
          FROM (补全无销量的月份型号数据
               Select t.*,s.version_sale,s.salemix
                      FROM Full_Time t,weight_sales s
   		             Where t.ym = s.yearmonth(+) And t.vid = s.vid(+) And t.ObjId = s.ObjId(+)
          ) s,(Select to_char(add_months(to_date(Max(s.Year || Lpad(s.Month, 2, 0)), 'yyyymm'), 1), 'yyyymm') maxdate From Fdm_Version_Sales s 
            inner join version v on s.version_id = v.vid
           <![CDATA[
            where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '')) m
            ]]>
)
</isEqual>
<isEqual property="objectType" compareValue="3">
<![CDATA[
,sales as
 (select s.version_id, s.year, s.month, s.version_sale
    From Fdm_Version_Sales s, Version V
   Where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '')
     And s.Version_Id = V.VID)
,weight_sales As
 (Select e.Version_Sale,
         e.Objid,
         e.Vid,
         to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
         Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
    From (Select Sum(s.Version_Sale) As Version_Sale,
                 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,
                 v.Objid,
                 s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s, Version v
           Where s.Version_id = v.Vid
           Group By Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),
                    v.Objid,
                    s.Year || Lpad(s.Month, 2, 0)) e
   Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth)
,all_weight_sales As
 (Select s.Vid,
         s.ObjId,
         s.ym,
         Case When (s.Version_Sale Is Null Or s.Version_Sale = 0) And s.ym > s.maxDate Then
            (Select decode(t.Version_sale, 0, null, t.Version_sale) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.Version_sale, 0, null, s.Version_sale)
            End Version_sale,
         Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > s.maxDate Then
            (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
            End saleMix
    FROM (Select t.*, s.version_sale, s.salemix from Full_Time t left join  weight_sales s
   on t.vid = s.vid and t.ym = s.yearmonth and t.ObjId = s.ObjId
      ) s)
 ]]>
</isEqual>
型号权重成交价(型号成交价*型号销量权重)
,weight_tp As(
	  Select tp.ObjId,tp.ym As yearmonth,tp.Week,
	  			当前车型有销量数据时车型TP为SUM(型号成交价*型号销量权重) 
	  				 ,无车型销量则取SUM(型号成交价)
	  			
			Case When Max(tp.Salemix) Is Not Null
		    Then Decode(Sum(Weight_Tp), 0, Avg(Tp), Sum(Weight_Tp))
		    Else Avg(tp)
		    End Weight_Tp
	   FROM (
	       Select s.Vid,  
	              s.ObjId,
	              Decode(ct.yearmonth,Null,s.ym,ct.yearmonth) ym,
	              ct.Week,
	              Ct.Tp,
	              s.Version_Sale,
	              s.salemix,
	              Case When Ct.Tp Is Not Null And Sum(s.Salemix)Over(Partition By s.Objid,Ct.Yearmonth,Ct.Week) > 0
	              	   Then Nvl(Ct.Tp,0) * nvl(s.salemix / Sum(s.Salemix)Over(Partition By s.Objid,Ct.Yearmonth,Ct.Week),0) 
	              	   Else 0
	               End weight_tp
	         From version_tp Ct,all_weight_sales s 
	        Where Ct.Vid(+) = s.Vid And Ct.ObjId(+) = s.ObjId And Ct.Yearmonth(+) = s.ym And Ct.Week In('7', '1', '2', '3', '4')
	  ) tp 
   Group By tp.ObjId,tp.ym,tp.Week
)
,state_msrp as 
(
   Select p.version_id, p.msrp, p.ym, p.week From Fdm_Version_State_Msrp p
     where p.Msrp Is Not Null
     <include refid="price_Condition"/>
 )
获取型号每月最新指导价信息
,Msrp As(       
    Select * From 
           (
            Select Distinct p.YM Yearmonth,P.Msrp,P.Week,
                   Row_Number() Over(Partition By v.Vid, p.Ym, p.Week Order By v.Vid Desc) Rn,
                   v.*
              From  state_msrp p
              Inner Join Version v On v.Vid = p.Version_Id
              Where v.Is_Installed_Flag != 1) msrp
     Where Rn = 1
)
加权指导价信息获取(最新指导价*加权销量)
,weight_Msrp As(
    Select objId,YearMonth,Week,
    		Case When Max(Salemix) Is Not Null 
    			 Then Decode(Sum(Weight_Msrp), 0, Avg(Msrp), Sum(Weight_Msrp))
    			 Else Avg(Msrp) 
    			 End Weight_Msrp 
    		FROM (
	         Select Sales.Vid, Sales.ObjId, Sales.Ym As Yearmonth,Msrp.Week,Sales.saleMix,Msrp.Msrp,
	                nvl(Msrp.Msrp,0) * nvl(Sales.salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Msrp.Yearmonth,Msrp.Week),0) weight_Msrp
	           From Msrp Msrp, All_Weight_Sales Sales
	          Where Msrp.Vid(+) = Sales.Vid
	            And Msrp.Yearmonth(+) = Sales.Ym
	            And Msrp.Week In('7', '1', '2', '3', '4')
          ) Group By ObjId,YearMonth,Week
),
获取促销激励等数据
Subsidy as (
select ym, 
       version_id vid, 
       nvl(sum(std), 0) std,
       nvl(sum(aak), 0) aak,
       nvl(sum(std), 0) + nvl(sum(aak), 0) grossSupport,
       nvl(sum(personReward), 0) personReward,
       nvl(sum(financeLoan), 0) financeLoan,
       nvl(sum(displacesSupport), 0) displacesSupport,
       nvl(sum(insurance), 0) insurance,
       nvl(sum(present), 0) present,
       nvl(sum(maintenance), 0) maintenance,
       nvl(sum(personReward), 0) + nvl(sum(financeLoan), 0) + nvl(sum(displacesSupport), 0) + 
       nvl(sum(insurance), 0) + nvl(sum(present), 0) + nvl(sum(maintenance), 0) customerIncentive
from(
  select * from(
   select sidy.ym, sidy.version_id, sidy.subsidy_type_id, sidy.subsidy from fdm_version_subsidy2 sidy
     left join version v
          on sidy.version_id = v.vid
      where sidy.ym between replace('$beginDate$', '-', '') and replace('$endDate$', '-', '')
        and sidy.subsidy_type_id in (6, 7, 8, 9, 10, 11, 12, 14))
         pivot(sum(subsidy)
           for subsidy_type_id in(6 as std, 7 as aak, 8 as personReward, 9 as financeLoan, 10 as displacesSupport,
                          11 as insurance, 12 as present, 14 as maintenance)))
        group by ym, version_id
),
通过未加权的成交价,指导价,型号返利数据计算获取型号返利信息
Rebate As
(
 Select  MSRP.vid,
         Decode(Tp.yearmonth, Null, rebate.yearmonth, Tp.yearmonth) yearmonth,
         Decode(Tp.Week, Null, rebate.Week, Tp.Week) Week,
         nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0) fullyPaidPromotion,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0)) grossCost,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - nvl(Subsidy.grossSupport, 0) -
             Rebate.Ck_reward - nvl(Subsidy.CustomerIncentive, 0) invoicePrice,
         Rebate.Rebate_Cash Rebateprice,
         Rebate.Ck_Reward Rewardassessment,
         Rebate.Allowance Promotionalallowance,
         nvl(Tp.Tp, 0) - (nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0))) Modelprofit
    FROM Version_Tp tp,Msrp msrp, Subsidy Subsidy,
        (Select *  From (  Select  b.vid,
		                           b.objid,
		                           p.Ym Yearmonth,
		                           p.Week,
		                           p.Rebate_Count Rebate_Cash,
		                           p.Rebate_Pst Allowance,
		                           p.Reward_Count Ck_Reward,
		                           Row_Number() Over(Partition By b.vid, p.Ym,p.Week Order By b.vid Desc) Rebatern
		                      From Fdm_faw_rebate p
		                     Inner Join Version b On b.vid = p.version_id And b.Is_Installed_Flag != 1
		                     Where 1 = 1
		                     <include refid="price_Condition"/>
		            )
		       Where Rebatern = 1
         ) rebate
     Where Tp.vid = Msrp.vid(+)
       And Tp.Yearmonth = Msrp.Yearmonth(+)
       And Tp.Week = Msrp.Week(+)
       And Msrp.Yearmonth = Subsidy.ym(+)
       And Msrp.Vid = Subsidy.Vid(+)
       And Msrp.Vid = Rebate.vid(+)
       And Msrp.Yearmonth = Rebate.Yearmonth(+)
       And Msrp.Week = Rebate.Week(+)         
)
加权车型返利数据获取(通过型号返利信息并通过销量计算出车型或生产商返利信息)
,weight_Rebate As(
	  Select Objid,Yearmonth,Week,
	  	    Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_fullyPaidPromotion), 0, Avg(fullyPaidPromotion), Sum(Weight_fullyPaidPromotion)) Else Avg(fullyPaidPromotion) End Weight_fullyPaidPromotion,
	        Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_grossCost), 0, Avg(grossCost), Sum(Weight_grossCost)) Else Avg(grossCost) End Weight_grossCost,
	        Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_Invoiceprice), 0, Avg(invoicePrice), Sum(Weight_Invoiceprice)) Else Avg(invoicePrice) End Weight_Invoiceprice,
	        Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_Rebateprice), 0, Avg(Rebateprice), Sum(Weight_Rebateprice)) Else Avg(Rebateprice) End Weight_Rebateprice,
	        Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_Rewardassessment), 0, Avg(Rewardassessment), Sum(Weight_Rewardassessment)) Else Avg(Rewardassessment) End Weight_Rewardassessment,
	  		Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_Promotionalallowance), 0, Avg(Promotionalallowance), Sum(Weight_Promotionalallowance)) Else Avg(Promotionalallowance) End Weight_Promotionalallowance,
	        Case When Max(Salemix) Is Not Null Then Decode(Sum(Weight_Modelprofit), 0, Avg(Modelprofit), Sum(Weight_Modelprofit)) Else Avg(Modelprofit)End Weight_Modelprofit
	   From (Select Sales.Vid,
	                Sales.Objid,
	                Decode(rebate.yearmonth,Null,Sales.Ym,rebate.yearmonth) Yearmonth,
	                Rebate.Week,
	                Sales.Salemix,
	                rebate.fullyPaidPromotion,
	                rebate.grossCost,
	                rebate.invoicePrice,
	                rebate.Rebateprice,
	                rebate.Rewardassessment,
	                rebate.Promotionalallowance,
	                rebate.Modelprofit,
	                Nvl(rebate.fullyPaidPromotion, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_fullyPaidPromotion,
	                Nvl(rebate.grossCost, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_grossCost,
	                Nvl(rebate.invoicePrice, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_Invoiceprice,
	                Nvl(rebate.Rebateprice, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_Rebateprice,
	                Nvl(rebate.Rewardassessment, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_Rewardassessment,
	    			Nvl(rebate.Promotionalallowance, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_Promotionalallowance,                 
	    			Nvl(rebate.Modelprofit, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix) Over(Partition By Sales.Objid, rebate.Yearmonth,rebate.Week),0) Weight_Modelprofit
	           From rebate rebate, All_Weight_Sales Sales
	          Where rebate.Vid(+) = Sales.Vid
	            And rebate.Yearmonth(+) = Sales.Ym
	            And Rebate.Week In(7, 1, 2, 3, 4)
	            And rebate.Modelprofit Is Not Null
	     )
	  Group By Objid, Yearmonth, Week
),
base_time as (
 select distinct p.ym, v.objid, p.week from fdm_version_state_msrp p, version v
   where v.is_installed_flag != 1
         And (ym Between Replace('$beginDate$', '-', '') And Replace('$endDate$', '-', '') And Week = '7')
 <isEqual property="latestWeek" compareValue="true">
	 or (ym = Replace('$endDate$', '-', ''))
 </isEqual>
)
Select v.manfId,
       v.manfName,
       v.manfNameen,
       v.GradeId,
       v.Gradename,
       v.Gradenameen,
       v.subModelId,
       v.Submodelnameen,
       v.Submodelname,
       v.isBase,
       bt.ym yearmonth,
       bt.Week,
       bt.ObjId,
       tp.weight_tp As tp,
	   msrp.weight_Msrp As msrp,
	   rebate.weight_fullyPaidPromotion fullyPaidPromotion,
	   rebate.weight_grossCost grossCost,
	   rebate.weight_InvoicePrice invoicePrice,
	   rebate.weight_RebatePrice rebatePrice,
	   rebate.weight_RewardAssessment rewardAssessment,
	   rebate.weight_PromotionalAllowance promotionalAllowance,
	   round(rebate.weight_ModelProfit) modelProfit   
  FROM base_time bT, weight_tp tp, weight_Msrp msrp, weight_Rebate rebate,         	       
	(
		<include refid="getVersionColumn"/>
	) v
    Where bT.ObjId = v.ObjId(+) 
      AND bT.ObjId = tp.ObjId(+) 
      AND bT.ym = tp.yearmonth(+)
      And bT.WEEK = tp.WEEK(+)
      AND bT.ObjId = msrp.ObjId(+) 
      AND bT.ym = msrp.yearmonth(+)
      And bT.WEEK = msrp.WEEK(+)
      AND bT.ObjId = rebate.ObjId(+) 
      AND bT.ym = rebate.yearmonth(+)
      And bT.WEEK = rebate.WEEK(+)
 Order By bT.ObjId, bT.YM,BT.week
</select> -->

<!-- 下载利润数据 (车型，厂商-对象对比) -->
<!-- <select id="exportProfitData" resultClass="com.ways.app.price.model.VersionInfoEntity">
With Version As(
<include refid="getVersionInfoByObject"/>
)
时间段缺失日期补充
,Full_Time As(
	     Select p.yearmonth ym,v.Vid,v.ObjId, s.maxdate
	            FROM Fdm_date_main p,Version v, (Select  Max(s.year || Lpad(s.month, 2, 0)) maxdate From Fdm_version_sales s ) s
	            Where p.yearmonth Between Replace('$beginDate$','-','') And Replace('$endDate$','-','')
	             <isEqual property="objectType" compareValue="2">
                   <![CDATA[
                    And nvl(case when v.isBase = '1' then v.no_sale else v.no_product end, '99999999') >= case when v.isBase = '1' then p.Yearmonth else p.Yearmonth||32 end 
                   ]]>
                 </isEqual>
                 <isEqual property="objectType" compareValue="3">
                   <![CDATA[
                   And (p.Yearmonth <= v.no_sale or v.no_sale is null)
                   ]]>
                 </isEqual>
                   And p.Yearmonth >= v.launch_date
	            And v.is_installed_flag != 1            
)
 <isEqual property="objectType" compareValue="2">
,sales as (
   select s.version_id,s.year,s.month,s.version_sale From Fdm_Version_Sales s, Version V
                   Where s.Year || Lpad(s.Month, 2, 0) Between to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'yyyymm'), -1), 'yyyymm') And
                           Replace('$endDate$', '-', '')
                     And s.Version_Id = V.VID
)
,sales2 as ( 
<![CDATA[
   Select Version_Sale,  
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) and  v.parentid <> 0  
            Then v.parentid
              Else v.vid
           End As Vid,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else V.o_Car_Number_Id
           End As o_Car_Number_Id,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else v.Is_Installed_Flag
           End As Is_Installed_Flag,
         v.Objid,
         s.Year || Lpad(s.Month, 2, 0) Yearmonth From sales s left join  Version V on s.Version_Id = V.VID
) 
, sales3 as ( 
   Select * From (
     Select Version_Sale,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date)  and  v.parentid <> 0  
               Then v.vid
             End As Vid,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else V.o_Car_Number_Id
             End As o_Car_Number_Id,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else v.Is_Installed_Flag
             End As Is_Installed_Flag,
            v.Objid,
            s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s left join  Version V
               on s.Version_Id = V.VID )  where Vid is not null       
)
,sales4 as (
  Select * From sales2 Union Select * From sales3
)
           ]]>
获取型号加权销量(型号销量/车型销量通过型号与日期分组)
,weight_sales As(
	Select e.Version_Sale,
	        e.Objid,
	        e.Vid,
	        to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
	        Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
	  From (
	  		 Select Sum(b.Version_Sale) As Version_Sale,
	               Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid) As Vid,
	               b.Objid,
	               b.Yearmonth
	            From sales4 b
	            Group By Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid), b.Objid, b.Yearmonth
	        ) e
	 Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth
)
补全缺失日期段数据
,all_weight_sales As(
    Select 
         s.Vid,s.ObjId,s.ym,
         Case When (s.Version_Sale Is Null Or s.Version_Sale = 0) And s.ym > s.maxDate Then
            (Select decode(t.Version_sale,0,null,t.Version_sale) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.Version_sale, 0, null, s.Version_sale)
            End Version_sale,
         Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > m.maxDate Then
            (Select decode(t.Salemix,0,null,t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = m.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
            End saleMix
         FROM (补全无销量的月份型号数据
              Select t.*,s.version_sale,s.salemix
                     FROM Full_Time t,weight_sales s
                     Where t.ym = s.yearmonth(+) And t.vid = s.vid(+) And t.ObjId = s.ObjId(+)
         ) s,(Select to_char(add_months(to_date(Max(s.year || Lpad(s.month, 2, 0)), 'yyyymm'), 1), 'yyyymm') maxdate From Fdm_version_sales s
           inner join version v on s.version_id = v.vid
         <![CDATA[
         where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '')) m
         ]]>
)
</isEqual>
<isEqual property="objectType" compareValue="3">
<![CDATA[
,sales as
 (select s.version_id, s.year, s.month, s.version_sale
    From Fdm_Version_Sales s, Version V
   Where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '') And s.Version_Id = V.VID)
,weight_sales As
 (Select e.Version_Sale,
         e.Objid,
         e.Vid,
         to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
         Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
    From (Select Sum(s.Version_Sale) As Version_Sale,
                 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,
                 v.Objid,
                 s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s, Version v
           Where s.Version_id = v.Vid
           Group By Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),
                    v.Objid,
                    s.Year || Lpad(s.Month, 2, 0)) e
   Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth) 
,all_weight_sales As
 (Select s.Vid,
         s.ObjId,
         s.ym,
         Case When (s.Version_Sale Is Null Or s.Version_Sale = 0) And s.ym > s.maxDate Then
            (Select decode(t.Version_sale,0,null,t.Version_sale) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.Version_sale, 0, null, s.Version_sale)
            End Version_sale,
         Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > s.maxDate Then
            (Select decode(t.Salemix,0,null,t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
            End saleMix
    FROM (Select t.*, s.version_sale, s.salemix

        from Full_Time t left join  weight_sales s
   on t.vid = s.vid and t.ym = s.yearmonth and t.ObjId = s.ObjId
      ) s)
 ]]>
</isEqual>
,city_price as 
(
     select p.ym,p.year,p.week,p.version_id,p.city_id,p.price_fawvw From Fdm_Version_City_Price P
        where  P.price_fawvw Is Not Null
           And P.price_fawvw != 0.00
     <include refid="price_Condition"/>
           And P.City_Id In($citys$))
查询所选城市,时间段成交价及城市Mix数据
,city_mix As(
 Select /*+ RULE*/
 		v.Vid,
 		v.ObjId,
        p.price_fawvw tp,
        p.city_id Region,        
        p.ym Yearmonth,
		p.week,        
        row_number() over(partition by v.Vid,p.City_id,p.Ym,p.Week Order By v.Vid Desc) rn,
        m.Value
   From city_price P
  Inner Join Version v On P.Version_Id = v.Vid
   斜对应关系查询出成交价城市Mix
   <![CDATA[
   Left Join Fdm_Model_City_Mix m On m.Sub_Model_Id = v.subModelId And m.City_Id = P.City_Id
                                         And m.Year = (Case When P.Year <= 2013 Then 2013 Else P.Year - 1 End)
   ]]>                                         
    Where v.Is_Installed_Flag != 1)
,version_tp As(
获取型号成交价sum(min(tp)*([城市x]Mix/sum([城市All]Mix)))
select distinct e.vid,e.ObjId,e.yearmonth,e.Week,
			     当前型号所有城市Mix不为为Null时型号成交价sum(min(tp)*([城市x]Mix/sum([城市All]Mix)))
			     	  ,为Null时取当前型号最低成交价的算术平均	
			     
				 Case When Max(e.MaxCityMix) > 0 
                      Then Sum(e.Mix)
                      Else Avg(e.minTp)
                      End Tp  From
        (
          Select c.vid,c.ObjId,c.yearmonth,c.Week,Max(c.Value) MaxCityMix,Min(c.tp) minTp,c.region,
          城市Mix归一,获取型号在所选城市的Mix权重
          case when min(c.value) is not Null then to_char(min(c.tp) * ratio_to_report(sum(c.value)) over(partition by c.vid,c.yearmonth,c.Week))
               判断城市个数如果城市个数为一的话,加权成交价直接为最低参考价
               <isEqual property="cityNum" compareValue="1">
               	 	else to_char(min(c.tp))
               </isEqual>
               判断城市个数如果城市个数不为一的话,加权成交价为零
               <isNotEqual property="cityNum" compareValue="1">
               	    else null
               </isNotEqual>                                                                     
               end mix
          From  city_mix c
          where c.rn = 1  
          Group By c.Vid,c.ObjId,c.Yearmonth,c.Week,c.Region
         ) e
       Group By e.Vid, e.Objid, e.Yearmonth, e.Week   
)
,state_msrp as 
(
   Select p.version_id, p.msrp, p.ym, p.week From Fdm_Version_State_Msrp p
     where p.Msrp Is Not Null
     <include refid="price_Condition"/>
 )
获取型号每月最新指导价信息
,Msrp As(       
    Select * From 
           (
            Select p.ym Yearmonth,p.Week,p.Msrp,
              	   Row_Number() over(Partition By v.Vid, p.ym, p.week Order By v.Vid Desc) Rn,v.*
              From state_msrp p
              Inner Join Version v On v.Vid = p.Version_Id
              Where v.Is_Installed_Flag != 1
            ) msrp
     Where Rn = 1
),
获取促销激励等数据
Subsidy as
 (select ym,
         version_id vid,
         nvl(sum(std), 0) std,
         nvl(sum(aak), 0) aak,
         nvl(sum(std), 0) + nvl(sum(aak), 0) grossSupport,
         nvl(sum(personReward), 0) personReward,
         nvl(sum(financeLoan), 0) financeLoan,
         nvl(sum(displacesSupport), 0) displacesSupport,
         nvl(sum(insurance), 0) insurance,
         nvl(sum(present), 0) present,
         nvl(sum(maintenance), 0) maintenance,
         nvl(sum(personReward), 0) + nvl(sum(financeLoan), 0) +
         nvl(sum(displacesSupport), 0) + nvl(sum(insurance), 0) +
         nvl(sum(present), 0) + nvl(sum(maintenance), 0) customerIncentive
    from (select *
            from (select sidy.ym,
                         sidy.version_id,
                         sidy.subsidy_type_id,
                         sidy.subsidy
                    from fdm_version_subsidy2 sidy
                    left join version v
                      on sidy.version_id = v.vid
                   where sidy.ym between replace('$beginDate$', '-', '') and
                         replace('$endDate$', '-', '')
                     and sidy.subsidy_type_id in (6, 7, 8, 9, 10, 11, 12, 14))
          pivot(sum(subsidy)
             for subsidy_type_id in(6 as std,
                                   7 as aak,
                                   8 as personReward,
                                   9 as financeLoan,
                                   10 as displacesSupport,
                                   11 as insurance,
                                   12 as present,
                                   14 as maintenance)))
   group by ym, version_id),
Rebate As
 (Select MSRP.vid,
         MSRP.objid,
         Decode(Tp.yearmonth, Null, rebate.yearmonth, Tp.yearmonth) yearmonth,
         Decode(Tp.Week, Null, rebate.Week, Tp.Week) Week,
         Subsidy.grossSupport grossSupport,
         Subsidy.aak aak,
         Subsidy.std std,
         Subsidy.personReward personReward,
         Subsidy.financeLoan financeLoan,
         Subsidy.displacesSupport displacesSupport,
         Subsidy.insurance insurance,
         Subsidy.present present,
         Subsidy.maintenance maintenance,
         Subsidy.customerIncentive customerIncentive,
         nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0) fullyPaidPromotion,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0)) grossCost,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - nvl(Subsidy.grossSupport, 0) -
             Rebate.Ck_reward - nvl(Subsidy.CustomerIncentive, 0) invoicePrice,
         Rebate.Rebate_Cash Rebateprice,
         Rebate.Ck_Reward Rewardassessment,
         Rebate.Allowance Promotionalallowance,
         nvl(Tp.Tp, 0) - (nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0))) Modelprofit
    FROM Version_Tp tp,Msrp msrp, Subsidy Subsidy,
        (Select *  From (  Select  b.vid,
		                           b.objid,
		                           p.Ym Yearmonth,
		                           p.Week,
		                           p.Rebate_Count Rebate_Cash,
		                           p.Rebate_Pst Allowance,
		                           p.Reward_Count Ck_Reward,
		                           Row_Number() Over(Partition By b.vid, p.Ym,p.Week Order By b.vid Desc) Rebatern
		                      From Fdm_faw_rebate p
		                     Inner Join Version b On b.vid = p.version_id And b.Is_Installed_Flag != 1
		                     Where 1 = 1
		                     <include refid="price_Condition"/>
		            )
		       Where Rebatern = 1
         ) rebate
     Where Tp.vid = Msrp.vid(+)
       And Tp.Yearmonth = Msrp.Yearmonth(+)
       And Tp.Week = Msrp.Week(+)
       And Msrp.Yearmonth = Subsidy.ym(+)
       And Msrp.Vid = Subsidy.Vid(+)
       And Msrp.Vid = Rebate.vid(+)
       And Msrp.Yearmonth = Rebate.Yearmonth(+)
       And Msrp.Week = Rebate.Week(+))  
Select s.Ym Yearmonth,s.Week,v.Vid Versionid,v.Versionchartname,v.Isbase,
       Msrp.Msrp,Ct.Tp,v.Versionname,v.Versionnameen,v.Versioncode,v.Modelyear,
       v.Versionlaunchdate,v.Typeid,v.Typeiden,v.Manfname,v.Manfnameen,
       v.brandname,v.brandnameen,
       v.Submodelname,v.Submodelnameen,v.Discharge,v.Gearmode,
       v.Gearmodeen,v.Bodytype,v.Bodytypeen,v.Gradename,v.Gradenameen,
       Rebate.grossSupport grossSupport,
       Rebate.aak aak,
       Rebate.std std,
       Rebate.personReward personReward,
       Rebate.financeLoan financeLoan,
       Rebate.displacesSupport displacesSupport,
       Rebate.insurance insurance,
       Rebate.present present,
       Rebate.maintenance maintenance,
       Rebate.customerIncentive customerIncentive,
       Rebate.fullyPaidPromotion fullyPaidPromotion,
       Rebate.grossCost grossCost,
       Rebate.invoicePrice invoicePrice,
       Rebate.Rebateprice Rebateprice,
       Rebate.Rewardassessment Rewardassessment,
       Rebate.Promotionalallowance Promotionalallowance,
       round(Rebate.Modelprofit) Modelprofit,
       S.Version_Sale versionSale
  From (Select s1.Vid,s1.Objid,s1.Ym,s1.Version_Sale,s1.Salemix,'7' Week From All_Weight_Sales s1
  		<isEqual property="latestWeek" compareValue="true">
  		Union
  		Select s2.Vid,s2.Objid,s2.Ym,s2.Version_Sale,s2.Salemix,'1' Week From All_Weight_Sales s2 Where s2.Ym = Replace('$endDate$','-','')
  		Union
  		Select s3.Vid,s3.Objid,s3.Ym,s3.Version_Sale,s3.Salemix,'2' Week From All_Weight_Sales s3 Where s3.Ym = Replace('$endDate$','-','')
  		Union
  		Select s4.Vid,s4.Objid,s4.Ym,s4.Version_Sale,s4.Salemix,'3' Week From All_Weight_Sales s4 Where s4.Ym = Replace('$endDate$','-','')
  		</isEqual>
  		) s,
       Version_Tp       Ct,
       Msrp             Msrp,
       Rebate           Rebate,
       Version          v
 Where Ct.Vid(+) = s.Vid
   And Ct.Objid(+) = s.Objid
   And Ct.Yearmonth(+) = s.Ym
   And Ct.Week(+) = s.Week
   And Msrp.Vid(+) = s.Vid
   And Msrp.Objid(+) = s.Objid
   And Msrp.Yearmonth(+) = s.Ym
   And Msrp.Week(+) = s.Week
   And Rebate.Vid(+) = s.Vid
   And Rebate.Objid(+) = s.Objid
   And Rebate.Yearmonth(+) = s.Ym
   And Rebate.Week(+) = s.Week
   And s.Vid = v.Vid(+)
   And Ct.Tp > 0
 Order By s.Vid, s.Ym,s.Week
</select> -->

<!-- 加载城市利润图形和表格数据(型号-城市对比)  -->
<!-- <select id="loadCityProfitChartAndTable" resultClass="com.ways.app.price.model.VersionInfoEntity">
	<include refid="getVersionSubsetRelationship" />
	,t1 as(
		  查询型号城市成交价
		  <![CDATA[
		  select d.vid,d.yearmonth,d.week,d.tp,d.cityId oncityid,d.versionSale
	             from (
			           Select b.Groupid Vid,
			                  p.Ym Yearmonth,
			                  p.Week,
			                  p.price_fawvw Tp,
			                  p.City_Id Cityid,
			                  sales.version_sale versionSale,
			                  Row_Number() Over(Partition By b.Groupid, p.City_Id, p.Ym, p.Week Order By b.Vid Desc) Rn
			            From  Fdm_Version_City_Price p
			            Inner Join Base b On b.Vid = p.Version_Id and b.listingdate <= p.ym
			            ]]>
			            left join Fdm_Version_Sales sales on sales.version_id = b.vid and sales.year = p.year and sales.month = p.month
			           Where p.City_Id In($citys$) And p.price_fawvw Is Not Null
	            			新增判断存在最新周时成交价需查询出周数据
					<include refid="price_Condition"/>
            	)d where d.rn = 1
	)
	,t2 as(
		查询型号每月在全国的最新指导价
		<![CDATA[
	 	select * from ( 
		      select distinct b.groupid vid
		                      ,p.ym yearmonth
		                      ,p.week
		                      ,p.msrp
		                      ,row_number() over(partition by b.groupid,p.ym,p.week order by b.vid desc) rn
		                      ,v.*
		        from Fdm_Version_State_Msrp p
		        inner join base b on b.vid = p.Version_Id and b.listingdate <= p.ym
		]]>
		        inner join (<include refid="getVersionInfo"/>) v on v.onvid = b.vid
		        where p.msrp is not null
		          <include refid="price_Condition"/>
		   ) where rn = 1
	)
	,t3 as(
		查询型号每月返利返点数据
		select * from(
			select b.groupid vid,p.ym yearmonth,p.week
				   ,p.rebate_count rebate_cash
				   ,p.rebate_pst allowance
				   ,p.reward_count ck_reward 
				   ,row_number() over(partition by b.groupid,p.ym,p.week order by b.vid desc) rebatern
	       		   From Fdm_Faw_Rebate p 
	       		   inner join base b on b.vid = p.Version_Id
	       		   where 1 = 1
	       		   <include refid="price_Condition"/>
		) where rebatern = 1
	)
	,t4 as(
		时间维度补数主表
		Select p.ym||'' Yearmonth,p.week,
       		   v.version_id Versionid, 
       		   c.City_Id      Cityid,
		       c.City_Name_Cn Cityname,
		       c.City_Name_En Citynameen
		    From (select distinct ym,week from fdm_version_state_msrp 
               where (ym Between Replace('$beginDate$','-','') And Replace('$endDate$','-','') and week = '7') 
                <isEqual property="latestWeek" compareValue="true">
                <![CDATA[
                or (ym = Replace('$endDate$','-','') and week < '5')
                ]]>
                </isEqual>
                ) p,  
		    	 Fdm_Car_Version v, 
		    	 Fdm_City c
   			Where v.Version_Id = $vids$
              And c.City_Id In ($citys$)
	), t5 as(
	  获取促销各类数据
	  select ym,
         version_id vid,
         sum(std) std,
         sum(aak) aak,
         nvl(sum(std), 0) + nvl(sum(aak), 0) grossSupport,
         sum(personReward) personReward,
         sum(financeLoan) financeLoan,
         sum(displacesSupport) displacesSupport,
         sum(insurance) insurance,
         sum(present) present,
         sum(maintenance) maintenance,
         nvl(sum(personReward), 0) + nvl(sum(financeLoan), 0) +
         nvl(sum(displacesSupport), 0) + nvl(sum(insurance), 0) +
         nvl(sum(present), 0) + nvl(sum(maintenance), 0) customerIncentive
    from (select *
            from (select sidy.ym,
                         sidy.version_id,
                         sidy.subsidy_type_id,
                         sidy.subsidy
                    from fdm_version_subsidy2 sidy
                    inner join Base b
                      on sidy.version_id = b.vid
                   where sidy.ym between replace('$beginDate$', '-', '') and
                         replace('$endDate$', '-', '')
                     and sidy.subsidy_type_id in (6, 7, 8, 9, 10, 11, 12, 14))
          pivot(sum(subsidy)
             for subsidy_type_id in(6 as std,
                                   7 as aak,
                                   8 as personReward,
                                   9 as financeLoan,
                                   10 as displacesSupport,
                                   11 as insurance,
                                   12 as present,
                                   14 as maintenance)))
   group by ym, version_id  
	)
	select  Case When d.Yearmonth Is Null Then T4.Yearmonth Else d.Yearmonth End Yearmonth,
			Case When d.Week Is Null Then T4.Week Else d.Week End Week,
       		T4.VersionId,T4.CityId,T4.CityName,T4.CityNameEn,d.*
			 from t4,
			   (select T2.Vid,To_Char(To_Date(To_Char(T1.Yearmonth), 'YYYYMM'), 'YYYYMM') Yearmonth,T1.Week,
		               T2.Msrp,T2.Rn,T2.Onvid,T2.Versionname,T2.Versionnameen,T2.Versioncode,T2.Modelyear,T2.Versionlaunchdate,T2.Typeid,T2.Typeiden,T2.Manfname,
		               T2.Manfnameen,T2.Brandname,T2.Brandnameen,T2.Submodelname,T2.Submodelnameen,T2.Discharge,T2.Gearmode,T2.Gearmodeen,T2.Bodytype,T2.Bodytypeen,T2.Gradename,
		               T2.Gradenameen,
		               t1.tp,
					   t5.grossSupport,
		               t5.aak,                
		               t5.std,    
		               t5.personReward,
		               t5.financeLoan,  
		               t5.displacesSupport,  
		               t5.insurance,  
		               t5.present,       
		               t5.maintenance,         
		               t5.customerIncentive,    
		               nvl(t3.allowance, 0) - nvl(t5.maintenance, 0) fullyPaidPromotion,
                       nvl(t2.Msrp, 0) - t3.Rebate_cash - (nvl(t3.allowance, 0) - nvl(t5.maintenance, 0)) grossCost,
		               nvl(t2.Msrp, 0) - t3.Rebate_Cash - nvl(t5.grossSupport, 0) - t3.ck_reward -
		                   nvl(t5.CustomerIncentive, 0) invoicePrice,
		               t3.rebate_cash rebatePrice,
		               t3.ck_reward rewardAssessment,
		               t3.allowance promotionalAllowance,
                       round(nvl(t1.tp, 0) - (nvl(t2.msrp, 0) - t3.rebate_cash - (nvl(t3.allowance, 0) - nvl(t5.maintenance, 0)))) modelProfit,
                       t1.versionSale,
					   t1.oncityid
					   from t2, t1, t3, t5 
					   where t2.vid = t1.vid(+) and t2.yearmonth = T1.Yearmonth(+) And t2.Week = t1.Week(+)
					     and t2.vid = t3.vid(+) and t2.yearmonth = t3.yearmonth(+) And t2.Week = t3.Week(+)
					     and t2.onvid = t5.vid(+) and t2.yearmonth = t5.ym(+)
			 ) d where t4.versionid = d.vid(+) and t4.yearmonth = d.Yearmonth(+) and t4.Week = d.Week(+) and t4.cityid = d.oncityid(+)
		     order by t4.cityid,T4.Yearmonth,t4.Week
</select> -->

<!-- 加载对象城市利润图形和表格数据 (车型,厂商城市对比) -->
<!-- <select id="loadObjectCityProfitChartAndTable" resultClass="com.ways.app.price.model.ObjectInfoEntity">
With Version As(  
	获取对象下所对应型号信息         
	<include refid="getVersionInfoByObject"/>
 ) 
,Full_Time As(
     补数表
	 Select p.YearMonth ym,c.City_Id regionId,c.city_name_cn region,c.city_name_en regionEn,v.Vid,v.Objid,s.maxdate
	   From Fdm_date_main p,Fdm_City c,Version v, (Select  Max(s.year || Lpad(s.month, 2, 0)) maxdate From Fdm_version_sales s ) s
	  Where p.YearMonth Between Replace('$beginDate$', '-', '') And Replace('$endDate$', '-', '')
	  			<isEqual property="objectType" compareValue="2">
                   <![CDATA[
                    And nvl(case when v.isBase = '1' then v.no_sale else v.no_product end, '99999999') >= case when v.isBase = '1' then p.Yearmonth else p.Yearmonth||32 end 
                   ]]>
                 </isEqual>
                 <isEqual property="objectType" compareValue="3">
                   <![CDATA[
                   And (p.Yearmonth <= v.no_sale or v.no_sale is null)
                   ]]>
                 </isEqual>
                   And p.Yearmonth >= v.launch_date
	  And   v.Is_Installed_Flag != 1
	  And   c.City_Id In($citys$)
 ) 
,city_tp As(
	城市最低成交价查询
	Select * From (
		Select   /*+ RULE*/ 
				 v.Vid,
				 v.Objid,
				 p.price_fawvw Tp,
				 p.City_Id Region,
				 p.Ym Yearmonth,
	             p.Week,
		    每月最低成交价获取 
		     	 Row_Number() Over(Partition By v.Vid, p.City_Id, p.Ym, p.Week Order By v.Vid Desc) Rn
		  From  Fdm_Version_City_Price p
		  Inner Join Version v On p.Version_Id = v.Vid
		  Where v.Is_Installed_Flag != 1
		    And p.City_Id In($citys$)
		    And p.price_fawvw Is Not Null And p.price_fawvw != 0.00
		    新增判断存在最新周时成交价需查询出周数据
		   	<include refid="price_Condition"/>
	) Where Rn = 1   	
 )
,Msrp As(
	获取所选对象下型号每月最新指导价          
	 Select *
	   From (
		   Select Distinct p.Ym Yearmonth,
		                   p.Week,
	                       p.Msrp,
		                   Row_Number() Over(Partition By v.Vid, p.Ym, p.Week Order By v.Vid Desc) Rn,
		                   v.*
		     From Fdm_Version_State_Msrp p
		    Inner Join Version v On v.Vid = p.Version_Id
		    Where p.Msrp Is Not Null 
		      And v.Is_Installed_Flag != 1
		      <include refid="price_Condition"/>
	  ) Msrp
	  Where Rn = 1 
),
获取促销激励等数据
Subsidy as (
select ym, 
       version_id vid, 
       nvl(sum(std), 0) std,
       nvl(sum(aak), 0) aak,
       nvl(sum(std), 0) + nvl(sum(aak), 0) grossSupport,
       nvl(sum(personReward), 0) personReward,
       nvl(sum(financeLoan), 0) financeLoan,
       nvl(sum(displacesSupport), 0) displacesSupport,
       nvl(sum(insurance), 0) insurance,
       nvl(sum(present), 0) present,
       nvl(sum(maintenance), 0) maintenance,
       nvl(sum(personReward), 0) + nvl(sum(financeLoan), 0) + nvl(sum(displacesSupport), 0) + 
       nvl(sum(insurance), 0) + nvl(sum(present), 0) + nvl(sum(maintenance), 0) customerIncentive
from(
  select * from(
   select sidy.ym, sidy.version_id, sidy.subsidy_type_id, sidy.subsidy from fdm_version_subsidy2 sidy
     left join version v
          on sidy.version_id = v.vid
      where sidy.ym between replace('$beginDate$', '-', '') and replace('$endDate$', '-', '')
        and sidy.subsidy_type_id in (6, 7, 8, 9, 10, 11, 12, 14))
         pivot(sum(subsidy)
           for subsidy_type_id in(6 as std, 7 as aak, 8 as personReward, 9 as financeLoan, 10 as displacesSupport,
                          11 as insurance, 12 as present, 14 as maintenance)))
        group by ym, version_id
),
获取型号城市返利信息
Rebate As
	 (Select Tp.region,
	         MSRP.vid,
             Decode(Tp.yearmonth, Null, rebate.yearmonth, Tp.yearmonth) yearmonth,
         	 Decode(Tp.Week, Null, rebate.Week, Tp.Week) Week,
         	 nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0) fullyPaidPromotion,
         	 nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0)) grossCost,
         	 nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - nvl(Subsidy.grossSupport, 0) - 
         	      Rebate.Ck_reward - nvl(Subsidy.CustomerIncentive, 0) invoicePrice,
          	 Rebate.Rebate_Cash Rebateprice,
          	 Rebate.Ck_Reward Rewardassessment,
         	 Rebate.Allowance Promotionalallowance,
         	 nvl(Tp.Tp, 0) - (nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0))) Modelprofit
	    From City_Tp Tp,Msrp Msrp,Subsidy Subsidy,
	         (Select *
	            From (Select b.Vid,
	                         b.Objid,
	                         p.Ym Yearmonth,
                 			 p.Week,
	                         p.Rebate_Count Rebate_Cash,
	                         p.Rebate_Pst Allowance,
	                         p.Reward_Count Ck_Reward,
	                         Row_Number() Over(Partition By b.Vid, p.Ym, p.Week Order By b.Vid Desc) Rebatern
	                    From Fdm_Faw_Rebate p
	                   Inner Join Version b On b.Vid = p.Version_Id
	                   Where b.Is_Installed_Flag != 1
	                   <include refid="price_Condition"/>
	                   )
	           Where Rebatern = 1
	         ) Rebate
	   Where Tp.Vid = Msrp.Vid(+)
	     And Tp.Yearmonth = Msrp.Yearmonth(+)
	     And Tp.Week = Msrp.Week(+)
	     And Msrp.Yearmonth = Subsidy.ym(+)
         And Msrp.Vid = Subsidy.Vid(+)
	     And Msrp.Vid = Rebate.Vid(+)
	     And Msrp.Yearmonth = Rebate.Yearmonth(+)
	     And Msrp.Week = Rebate.Week(+)
)
<isEqual property="objectType" compareValue="2">
,sales as (
   select s.version_id,s.year,s.month,s.version_sale From Fdm_Version_Sales s, Version V
    Where s.Year || Lpad(s.Month, 2, 0) Between to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'yyyymm'), -1), 'yyyymm') And Replace('$endDate$', '-', '')
                     And s.Version_Id = V.VID
)
,sales2 as ( 
<![CDATA[
   Select Version_Sale,  
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) and  v.parentid <> 0  
            Then v.parentid
              Else v.vid
           End As Vid,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else V.o_Car_Number_Id
           End As o_Car_Number_Id,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else v.Is_Installed_Flag
           End As Is_Installed_Flag,
         v.Objid,
         s.Year || Lpad(s.Month, 2, 0) Yearmonth From sales s left join  Version V on s.Version_Id = V.VID
) 
, sales3 as ( 
   Select * From (
     Select Version_Sale,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date)  and  v.parentid <> 0  
               Then v.vid
             End As Vid,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else V.o_Car_Number_Id
             End As o_Car_Number_Id,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else v.Is_Installed_Flag
             End As Is_Installed_Flag,
            v.Objid,
            s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s left join  Version V
               on s.Version_Id = V.VID )  where Vid is not null       
)
,sales4 as (
  Select * From sales2 Union Select * From sales3
)
]]>
,weight_sales As( 
 		获取型号在对象中销量占比  
		Select e.Version_Sale,
		       e.Objid,
		       e.Vid,
		       to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
		       Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.yearmonth) As Salemix
		  From (
	  		 Select Sum(b.Version_Sale) As Version_Sale,
	               Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid) As Vid,
	               b.Objid,
	               b.Yearmonth
	            From sales4 b
	            Group By Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid), b.Objid, b.Yearmonth
		          ) e
	 Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth
 )
 ,all_weight_sales As( 
		 型号销量数据补全    
		 Select s.Version_Sale,s.Vid,s.Objid,s.yearmonth,
                 Case When (s.saleMix Is Null Or s.saleMix = 0) And s.yearMonth > m.maxDate Then
                    (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = m.Maxdate)
                  Else decode(s.saleMix, 0, null, s.saleMix)
                   End saleMix
		  From (补全无销量的月份型号数据
			  	Select t.*, s.Version_Sale, s.Salemix
			           From (Select ft.Ym yearmonth, ft.Vid, ft.Objid From Full_Time ft Group By ft.Ym, ft.Vid, ft.Objid) t, Weight_Sales s
			           Where t.Yearmonth = s.Yearmonth(+) And t.Vid = s.Vid(+) And t.Objid = s.Objid(+)
			   ) s,(Select to_char(add_months(to_date(Max(s.year || Lpad(s.month, 2, 0)), 'yyyymm'), 1), 'yyyymm') maxdate From Fdm_Version_Sales s) m
)  
</isEqual>
<isEqual property="objectType" compareValue="3">
<![CDATA[
,sales as
 (select s.version_id, s.year, s.month, s.version_sale
    From Fdm_Version_Sales s, Version V
   Where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '') And s.Version_Id = V.VID)
,weight_sales As
 (Select e.Version_Sale,
         e.Objid,
         e.Vid,
         to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
         Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
    From (Select Sum(s.Version_Sale) As Version_Sale,
                 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,
                 v.Objid,
                 s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s, Version v
           Where s.Version_id = v.Vid
           Group By Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),
                    v.Objid,
                    s.Year || Lpad(s.Month, 2, 0)) e
   Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth)
,all_weight_sales As
 (Select s.Vid,
         s.ObjId,
         s.ym yearmonth,
          Case When (s.Version_Sale Is Null Or s.Version_Sale = 0) And s.ym > s.maxDate Then
            (Select decode(t.Version_sale, 0, null, t.Version_sale) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.Version_sale, 0, null, s.Version_sale)
            End Version_sale,
         Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > s.maxDate Then
            (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
            End saleMix
    FROM (Select t.*, s.version_sale, s.salemix
        from Full_Time t left join  weight_sales s
   on t.vid = s.vid and t.ym = s.yearmonth and t.ObjId = s.ObjId
      ) s)
 ]]>
</isEqual>
 ,weight_tp As(
型号权重成交价(型号成交价*型号销量权重) 
	Select Tp.Ym As Yearmonth,Tp.Week,Tp.Region,
		   当前车型有销量数据时车型TP为SUM(型号成交价*型号销量权重) ,无车型销量则取SUM(型号成交价)
		   Case When Max(tp.Salemix) Is Not Null Then Decode(Sum(Weight_Tp), 0, Avg(Tp), Sum(Weight_Tp)) Else Avg(tp) End Weight_Tp
		   From (
		   		 Select s.Vid,s.Objid,Decode(Ct.Yearmonth, Null, s.Yearmonth, Ct.Yearmonth) Ym,Ct.Week,Ct.Tp,Ct.Region,s.Version_Sale,s.Salemix,
		   		 		存在城市成交价与加权销量对应不上的问题,加权销量总和不等于百分百,将加权销量归一使总和为百分百
		   		 		Case When Ct.Tp Is Not Null And Sum(s.Salemix)Over(Partition By s.Objid, Ct.Yearmonth, Ct.Week, Ct.Region) > 0
		   		 			 Then Nvl(Ct.Tp, 0) * Nvl(s.Salemix  / Sum(s.Salemix)Over(Partition By s.Objid, Ct.Yearmonth,Ct.Week, Ct.Region), 0)
		   		 			 Else 0
		   		 		 End Weight_Tp
		           From city_tp Ct, All_Weight_Sales s
		          Where Ct.Vid(+) = s.Vid 
		            And Ct.Objid(+) = s.Objid
		            And Ct.Yearmonth(+) = s.Yearmonth
		            And Ct.Week In ('7', '1', '2', '3', '4')
		          ) Tp
		  Group By Tp.Region, Tp.Ym, Tp.Week
 ) 
 ,weight_Msrp As(
 		 加权指导价信息获取(最新指导价*加权销量)
		 Select Objid,Yearmonth,Week,
		        Case When Max(Salemix) Is Not Null 
	    			Then Decode(Sum(Weight_Msrp), 0, Avg(Msrp), Sum(Weight_Msrp))
	    			Else Avg(Msrp) 
	    			End Weight_Msrp 
		   From (Select Sales.Vid,
		                Sales.Objid,
		                Sales.Yearmonth,
		                Msrp.Week,
		                Sales.Salemix,
		                Msrp.Msrp,
		                Nvl(Msrp.Msrp, 0) * nvl(Sales.salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Msrp.Yearmonth,Msrp.Week),0) Weight_Msrp
		           From Msrp Msrp, All_Weight_Sales Sales
		          Where Msrp.Vid(+) = Sales.Vid
		            And Msrp.Yearmonth(+) = Sales.Yearmonth
		            And Msrp.Week In ('7', '1', '2', '3', '4')
		         )
		  Group By Objid, Yearmonth, Week
 )  
 ,weight_Rebate As(
 		 获取车型城市返利信息
		 Select Objid,region,Yearmonth,Week,
		     Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_fullyPaidPromotion),0,Avg(fullyPaidPromotion),Sum(Weight_fullyPaidPromotion))
	              Else Avg(fullyPaidPromotion)
	              End Weight_fullyPaidPromotion,
	         Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_grossCost),0,Avg(grossCost),Sum(Weight_grossCost))
	              Else Avg(grossCost)
	              End Weight_grossCost,
	         Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_Invoiceprice),0,Avg(invoicePrice),Sum(Weight_Invoiceprice))
	              Else Avg(invoicePrice)
	              End Weight_Invoiceprice,
	         Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_Rebateprice),0,Avg(Rebateprice),Sum(Weight_Rebateprice))
	              Else Avg(Rebateprice)
	              End Weight_Rebateprice,
	         Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_Rewardassessment),0,Avg(Rewardassessment),Sum(Weight_Rewardassessment))
	              Else Avg(Rewardassessment)
	              End Weight_Rewardassessment,
	         Case When Max(Salemix)Is Not Null 
	              Then Decode(Sum(Weight_Promotionalallowance),0,Avg(Promotionalallowance),Sum(Weight_Promotionalallowance))
	              Else Avg(Promotionalallowance)
	              End Weight_Promotionalallowance,
	         Case When Max(Salemix) Is Not Null 
	              Then Decode(Sum(Weight_Modelprofit),0,Avg(Modelprofit),Sum(Weight_Modelprofit))
	              Else Avg(Modelprofit)
	              End Weight_Modelprofit
	      	 From (
					Select Rebate.region,
					       Sales.Vid,
					       Sales.Objid,
					       Decode(rebate.yearmonth,Null,Sales.Yearmonth,rebate.yearmonth) Yearmonth,
					       Rebate.Week,
					       Sales.Salemix,
					       Rebate.fullyPaidPromotion,
					       Rebate.grossCost,
					       Rebate.invoicePrice,
					       Rebate.Rebateprice,
					       Rebate.Rewardassessment,
					       Rebate.Promotionalallowance,
					       Rebate.Modelprofit,
					       Nvl(Rebate.fullyPaidPromotion, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0) Weight_fullyPaidPromotion,
					       Nvl(Rebate.grossCost, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0) Weight_grossCost,
					       Nvl(Rebate.invoicePrice, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0) Weight_Invoiceprice,
					       Nvl(Rebate.Rebateprice, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0) Weight_Rebateprice,
					       Nvl(Rebate.Rewardassessment,0) * Nvl(Sales.Salemix/Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0)Weight_Rewardassessment,
					       Nvl(Rebate.Promotionalallowance, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid,Rebate.Yearmonth,Rebate.Week,Rebate.Region),0)Weight_Promotionalallowance,
					       Nvl(Rebate.Modelprofit, 0) * Nvl(Sales.Salemix / Sum(Sales.Salemix)Over(Partition By Sales.Objid, Rebate.Yearmonth,Rebate.Week,Rebate.Region),0) Weight_Modelprofit
					  From Rebate Rebate, All_Weight_Sales Sales
					  Where Rebate.Vid(+) = Sales.Vid
					    And Rebate.Yearmonth(+) = Sales.Yearmonth
					    And Rebate.Week In (7, 1, 2, 3, 4)
					    And Rebate.Modelprofit Is Not Null
	        )
		Group By Objid,Region,Yearmonth,Week
 ) 
 ,TempDate As(
 	Select Ft.Ym, Ft.Objid, Ft.Regionid,Ft.Region,Ft.RegionEn, '7' Week 
    			   From Full_Time Ft 
    			Group By Ft.Ym, Ft.Objid, Ft.Regionid,Ft.Region,Ft.RegionEn
 )
	Select  
			v.Manfid,v.Manfname,v.Manfnameen,v.Gradeid,v.Gradename,v.Gradenameen,
		    v.Submodelid,v.Submodelnameen,v.Submodelname,v.Isbase,rs.* 
	   FROM (
	          Select
			        T.RegionId CityId,
			        T.Region CityName,
			        T.RegionEn CityNameEn,
			        msrp.objid,
			        Case When Tp.Yearmonth Is Null Then T.ym Else Tp.Yearmonth End Yearmonth, 
			        Case When Tp.Week Is Null Then T.Week Else Tp.Week End Week,
			        Msrp.Weight_Msrp msrp,              
			        Tp.Weight_Tp tp,
			        Rebate.Weight_fullyPaidPromotion fullyPaidPromotion,
			        Rebate.Weight_grossCost grossCost,
	                Rebate.Weight_Invoiceprice invoicePrice,
	                Rebate.Weight_Rebateprice Rebateprice,
	                Rebate.Weight_Rewardassessment Rewardassessment,
	                Rebate.Weight_Promotionalallowance Promotionalallowance,
	                round(Rebate.Weight_Modelprofit) Modelprofit,
			        T.RegionId Oncityid 
	     FROM (
	     		Select t1.Ym, t1.Objid, t1.Regionid,t1.Region,t1.RegionEn,t1.Week  From TempDate t1
	     		<isEqual property="latestWeek" compareValue="true">
	     		Union
	     		Select t2.Ym, t2.Objid, t2.Regionid,t2.Region,t2.RegionEn,'1' Week  From TempDate t2 Where t2.Ym = Replace('$endDate$','-','')
	     		Union
	     		Select t3.Ym, t3.Objid, t3.Regionid,t3.Region,t3.RegionEn,'2' Week  From TempDate t3 Where t3.Ym = Replace('$endDate$','-','')
	     		Union
	     		Select t4.Ym, t4.Objid, t4.Regionid,t4.Region,t4.RegionEn,'3' Week  From TempDate t4 Where t4.Ym = Replace('$endDate$','-','')
	     		</isEqual>
	     ) t,
	     weight_tp tp,weight_Msrp msrp,weight_Rebate rebate
	   Where t.ym = tp.yearmonth(+)
	     And t.RegionId = Tp.region(+)
	     And t.Week = Tp.Week(+)
	     And t.Ym = Msrp.yearmonth(+)
	     And t.Week = Msrp.Week(+)
	     And tp.yearmonth = Rebate.yearmonth(+)
	     And tp.Week = Rebate.Week(+)
	     And tp.Region = Rebate.Region(+)
	)rs,
 (<include refid="getVersionColumn"/>) v
 Where rs.objid = v.objid
	Order By rs.CityId,rs.yearmonth,rs.Week
</select> -->

<!-- 下载城市利润数据 (车型,厂商-城市对比) -->
<!-- <select id="exportCityProfitData" resultClass="com.ways.app.price.model.VersionInfoEntity">
With Version As(  
	获取对象下所对应型号信息         
	<include refid="getVersionInfoByObject"/>
 ) 
,Full_Time As(
     补数表
	  Select p.Yearmonth Ym,
			 c.City_Id regionId,
			 c.City_Name_Cn region,
			 c.City_Name_En regionEn,
			 v.Vid,
			 v.Objid,
			 s.maxdate
	   From Fdm_Date_Main p,Fdm_City c,Version v,(Select  Max(s.year || Lpad(s.month, 2, 0)) maxdate From Fdm_version_sales s ) s
	  Where p.Yearmonth Between Replace('$beginDate$', '-', '') And Replace('$endDate$', '-', '')
	  			<isEqual property="objectType" compareValue="2">
                   <![CDATA[
                    And nvl(case when v.isBase = '1' then v.no_sale else v.no_product end, '99999999') >= case when v.isBase = '1' then p.Yearmonth else p.Yearmonth||32 end 
                   ]]>
                 </isEqual>
                 <isEqual property="objectType" compareValue="3">
                   <![CDATA[
                   And (p.Yearmonth <= v.no_sale or v.no_sale is null)
                   ]]>
                 </isEqual>
                   And p.Yearmonth >= v.launch_date
	  And v.Is_Installed_Flag != 1
	  And c.City_Id In($citys$)) 
,city_tp As(
	城市最低成交价查询
	Select * From (
		   Select 
				/*+ RULE*/ 
				v.Vid,
				v.Objid,
				price_fawvw Tp,
				p.City_Id Region,
			  	p.Ym Yearmonth,
			  	p.Week,
			  	每月最低成交价获取 
			    Row_Number() Over(Partition By v.Vid, p.City_Id, p.Ym, p.Week Order By v.Vid Desc) Rn
			  From Fdm_Version_City_Price p
			  Inner Join Version v On p.Version_Id = v.Vid
			  Where v.Is_Installed_Flag != 1
			    And p.City_Id In($citys$)
			    And p.price_fawvw Is Not Null And p.price_fawvw != 0.00
			    新增判断存在最新周时成交价需查询出周数据
			   	<include refid="price_Condition"/>
		) Where Rn = 1   	
 )
,Msrp As(
	获取所选对象下型号每月最新指导价          
	 Select *
	   From (
	   Select Distinct p.Ym Yearmonth,
                       p.Week,
                       p.Msrp,
	                   Row_Number() Over(Partition By v.Vid, p.Ym, p.Week Order By v.Vid Desc) Rn,
	                   v.*
	     From Fdm_Version_State_Msrp p
	    Inner Join Version v On v.Vid = p.Version_Id
	    Where p.Msrp Is Not Null
	      And v.Is_Installed_Flag != 1
	      新增判断存在最新周时成交价需查询出周数据
		  <include refid="price_Condition"/>
	  ) Msrp
	  Where Rn = 1 
),
获取各类促销信息
Subsidy as
 (select ym,
         version_id vid,
         nvl(sum(std), 0) std,
         nvl(sum(aak), 0) aak,
         nvl(sum(std), 0) + nvl(sum(aak), 0) grossSupport,
         nvl(sum(personReward), 0) personReward,
         nvl(sum(financeLoan), 0) financeLoan,
         nvl(sum(displacesSupport), 0) displacesSupport,
         nvl(sum(insurance), 0) insurance,
         nvl(sum(present), 0) present,
         nvl(sum(maintenance), 0) maintenance,
         nvl(sum(personReward), 0) + nvl(sum(financeLoan), 0) +
         nvl(sum(displacesSupport), 0) + nvl(sum(insurance), 0) +
         nvl(sum(present), 0) + nvl(sum(maintenance), 0) customerIncentive
    from (select *
            from (select sidy.ym,
                         sidy.version_id,
                         sidy.subsidy_type_id,
                         sidy.subsidy
                    from fdm_version_subsidy2 sidy
                    left join version v
                      on sidy.version_id = v.vid
                   where sidy.ym between replace('$beginDate$', '-', '') and
                         replace('$endDate$', '-', '')
                     and sidy.subsidy_type_id in (6, 7, 8, 9, 10, 11, 12, 14))
          pivot(sum(subsidy)
             for subsidy_type_id in(6 as std,
                                   7 as aak,
                                   8 as personReward,
                                   9 as financeLoan,
                                   10 as displacesSupport,
                                   11 as insurance,
                                   12 as present,
                                   14 as maintenance)))
   group by ym, version_id),
获取型号城市返利信息
Rebate As
 (Select MSRP.vid,
         MSRP.objid,
         tp.region,
         Decode(Tp.yearmonth, Null, rebate.yearmonth, Tp.yearmonth) yearmonth,
         Decode(Tp.Week, Null, rebate.Week, Tp.Week) Week,
         nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0) fullyPaidPromotion,
         Subsidy.grossSupport grossSupport,
         Subsidy.aak aak,
         Subsidy.std std,
         Subsidy.personReward personReward,
         Subsidy.financeLoan financeLoan,
         Subsidy.displacesSupport displacesSupport,
         Subsidy.insurance insurance,
         Subsidy.present present,
         Subsidy.maintenance maintenance,
         Subsidy.customerIncentive customerIncentive,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0)) grossCost,
         nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - nvl(Subsidy.grossSupport, 0) - 
             Rebate.Ck_reward - nvl(Subsidy.CustomerIncentive, 0) invoicePrice,
         Rebate.Rebate_Cash Rebateprice,
         Rebate.Ck_Reward Rewardassessment,
         Rebate.Allowance Promotionalallowance,
         nvl(Tp.Tp, 0) - (nvl(Msrp.Msrp, 0) - Rebate.Rebate_Cash - (nvl(Rebate.Allowance, 0) - nvl(Subsidy.Maintenance, 0))) Modelprofit
    FROM city_tp tp,
         Msrp msrp,
         Subsidy Subsidy,
         (Select *
            From (Select b.vid,
                         b.objid,
                         p.Ym Yearmonth,
                         p.Week,
                         p.Rebate_Count Rebate_Cash,
                         p.Rebate_Pst Allowance,
                         p.Reward_Count Ck_Reward,
                         Row_Number() Over(Partition By b.vid, p.Ym, p.Week Order By b.vid Desc) Rebatern
                    From Fdm_faw_rebate p
                   Inner Join Version b
                      On b.vid = p.version_id
                     And b.Is_Installed_Flag != 1
                   Where P.ym between Replace('$beginDate$', '-', '') and
                         Replace('$endDate$', '-', '')
                     and p.Week = 7)
           Where Rebatern = 1) rebate
   Where Tp.vid = Msrp.vid(+)
     And Tp.Yearmonth = Msrp.Yearmonth(+)
     And Tp.Week = Msrp.Week(+)
     And Msrp.Yearmonth = Subsidy.ym(+)
     And Msrp.Vid = Subsidy.Vid(+)
     And Msrp.Vid = Rebate.vid(+)
     And Msrp.Yearmonth = Rebate.Yearmonth(+)
     And Msrp.Week = Rebate.Week(+))
<isEqual property="objectType" compareValue="2">
,sales as (
   select s.version_id,s.year,s.month,s.version_sale From Fdm_Version_Sales s, Version V
    Where s.Year || Lpad(s.Month, 2, 0) Between to_char(add_months(to_date(Replace('$beginDate$', '-', ''), 'yyyymm'), -1), 'yyyymm') And Replace('$endDate$', '-', '')
                     And s.Version_Id = V.VID
)
,sales2 as ( 
<![CDATA[
   Select Version_Sale,  
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) and  v.parentid <> 0  
            Then v.parentid
              Else v.vid
           End As Vid,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else V.o_Car_Number_Id
           End As o_Car_Number_Id,
         Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
            Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
              Else v.Is_Installed_Flag
           End As Is_Installed_Flag,
         v.Objid,
         s.Year || Lpad(s.Month, 2, 0) Yearmonth From sales s left join  Version V on s.Version_Id = V.VID
) 
, sales3 as ( 
   Select * From (
     Select Version_Sale,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date)  and  v.parentid <> 0  
               Then v.vid
             End As Vid,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Original_Version_Id From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else V.o_Car_Number_Id
             End As o_Car_Number_Id,
            Case When v.isBase = '0' And (to_char(add_months(to_date(s.year || lpad(s.month, 2, 0), 'yyyymm'), 1), 'yyyymm') = v.launch_date) 
               Then (Select Is_Installed_Flag From Fdm_Car_Version Where Version_Id = v.Parentid)
                Else v.Is_Installed_Flag
             End As Is_Installed_Flag,
            v.Objid,
            s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s left join  Version V
               on s.Version_Id = V.VID )  where Vid is not null       
)
,sales4 as (
  Select * From sales2 Union Select * From sales3
)
]]>
,weight_sales As( 
 		获取型号在对象中销量占比  
		Select e.Version_Sale,
		       e.Objid,
		       e.Vid,
		       to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
		       Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.yearmonth) As Salemix
		  From (
	  		 Select Sum(b.Version_Sale) As Version_Sale,
	               Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid) As Vid,
	               b.Objid,
	               b.Yearmonth
	            From sales4 b
	            Group By Decode(b.Is_Installed_Flag, 1, b.o_Car_Number_Id, b.Vid), b.Objid, b.Yearmonth
		          ) e
	 Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth
 )
 ,all_weight_sales As( 
		 型号销量数据补全    
		 Select s.Version_Sale,s.Vid,s.Objid,s.yearmonth,
             Case When (s.saleMix Is Null Or s.saleMix = 0) And s.yearMonth > m.maxDate Then
            (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = m.Maxdate)
               Else decode(s.saleMix, 0, null, s.saleMix)
                End saleMix
		  From (补全无销量的月份型号数据
			  	Select t.*, s.Version_Sale, s.Salemix
			           From (Select ft.Ym yearmonth, ft.Vid, ft.Objid From Full_Time ft Group By ft.Ym, ft.Vid, ft.Objid) t, Weight_Sales s
			           Where t.Yearmonth = s.Yearmonth(+) And t.Vid = s.Vid(+) And t.Objid = s.Objid(+)
			   ) s,(Select to_char(add_months(to_date(Max(s.year || Lpad(s.month, 2, 0)), 'yyyymm'), 1), 'yyyymm') maxdate From Fdm_Version_Sales s) m
)  
</isEqual>
<isEqual property="objectType" compareValue="3">
<![CDATA[
,sales as
 (select s.version_id, s.year, s.month, s.version_sale
    From Fdm_Version_Sales s, Version V
   Where s.Year || Lpad(s.Month, 2, 0) <= Replace('$endDate$', '-', '')  And s.Version_Id = V.VID)
,weight_sales As
 (Select e.Version_Sale,
         e.Objid,
         e.Vid,
         to_char(add_months(to_date(e.yearmonth, 'yyyymm'), 1), 'yyyymm') yearmonth,
         Ratio_To_Report(Sum(e.Version_Sale)) Over(Partition By e.Objid, e.Yearmonth) As Salemix
    From (Select Sum(s.Version_Sale) As Version_Sale,
                 Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid) As Vid,
                 v.Objid,
                 s.Year || Lpad(s.Month, 2, 0) Yearmonth
            From sales s, Version v
           Where s.Version_id = v.Vid
           Group By Decode(v.Is_Installed_Flag, 1, v.o_Car_Number_Id, v.Vid),
                    v.Objid,
                    s.Year || Lpad(s.Month, 2, 0)) e
   Group By e.Version_Sale, e.Objid, e.Vid, e.Yearmonth)
   , 
all_weight_sales As
 (Select s.Vid,
         s.ObjId,
         s.ym yearmonth,
         Case When (s.Version_Sale Is Null Or s.Version_Sale = 0) And s.ym > s.maxDate Then
            (Select decode(t.Version_sale, 0, null, t.Version_sale) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.Version_sale, 0, null, s.Version_sale)
            End Version_sale,
         Case When (s.saleMix Is Null Or s.saleMix = 0) And s.ym > s.maxDate Then
            (Select decode(t.Salemix, 0, null, t.Salemix) FROM weight_sales t Where t.Vid = s.Vid And t.Yearmonth = s.Maxdate)
           Else decode(s.saleMix, 0, null, s.saleMix)
            End saleMix
    FROM (Select t.*, s.version_sale, s.salemix from Full_Time t left join  weight_sales s
   on t.vid = s.vid and t.ym = s.yearmonth and t.ObjId = s.ObjId
      ) s)
 ]]>
</isEqual>
Select Ct.Yearmonth,Ct.Week,c.city_id Cityid,c.city_name_cn Cityname,c.city_name_en Citynameen,v.Vid Versionid,
       v.Versionchartname,v.Isbase,Msrp.Msrp,Ct.Tp,v.Versionname,v.Versionnameen,v.Versioncode,v.Modelyear,
       v.Versionlaunchdate,v.Typeid,v.Typeiden,v.Manfname,v.Manfnameen,v.brandname,v.brandnameen,v.Submodelname,
       v.Submodelnameen,v.Discharge,v.Gearmode,v.Gearmodeen,v.Bodytype,v.Bodytypeen,
       v.Gradename,v.Gradenameen,
       Rebate.fullyPaidPromotion fullyPaidPromotion,
       Rebate.grossSupport grossSupport,
       Rebate.aak aak,
       Rebate.std std,
       Rebate.personReward personReward,
       Rebate.financeLoan financeLoan,
       Rebate.displacesSupport displacesSupport,
       Rebate.insurance insurance,
       Rebate.present present,
       Rebate.maintenance maintenance,
       Rebate.customerIncentive customerIncentive,
       Rebate.grossCost grossCost,
       Rebate.invoicePrice invoicePrice,
       Rebate.Rebateprice Rebateprice,
       Rebate.Rewardassessment Rewardassessment,
       Rebate.Promotionalallowance Promotionalallowance,
       round(Rebate.Modelprofit) Modelprofit,
       S.Version_Sale versionSale
  From (Select s1.Vid,s1.Objid,s1.Yearmonth,s1.Version_Sale,s1.Salemix,'7' Week From All_Weight_Sales s1
  		<isEqual property="latestWeek" compareValue="true">
  		Union
  		Select s2.Vid,s2.Objid,s2.yearmonth,s2.Version_Sale,s2.Salemix,'1' Week From All_Weight_Sales s2
  		Union
  		Select s3.Vid,s3.Objid,s3.yearmonth,s3.Version_Sale,s3.Salemix,'2' Week From All_Weight_Sales s3
  		Union
  		Select s4.Vid,s4.Objid,s4.yearmonth,s4.Version_Sale,s4.Salemix,'3' Week From All_Weight_Sales s4
  		</isEqual>
  		)s,
       City_Tp          Ct,
       Fdm_City         c,
       Msrp             Msrp,
       Rebate           Rebate,
       Version          v
 Where Ct.Vid(+) = s.Vid
   And Ct.Objid(+) = s.Objid
   And Ct.Yearmonth(+) = s.Yearmonth
   And Ct.Week(+) = s.Week
   And Msrp.Vid(+) = s.Vid
   And Msrp.Objid(+) = s.Objid
   And Msrp.Yearmonth(+) = s.Yearmonth
   And Msrp.Week(+) = s.Week
   And Rebate.Vid(+) = s.Vid
   And Rebate.Objid(+) = s.Objid
   And Rebate.Yearmonth(+) = s.Yearmonth
   And Rebate.Week(+) = s.Week
   And s.Vid = v.Vid(+)
   And Ct.Region = c.City_id(+)
   And Ct.Region = Rebate.Region
   And Ct.Tp > 0
 Order By Ct.Region, s.Yearmonth,s.Week
</select> -->

<!-- 校验弹出框有效数据  -->
<resultMap class="com.ways.app.price.model.SubModel" id="checkPopBoxDataGroup1" groupBy="subModelId">
	<result property="subModelId" column="mid" nullValue="" />
	<result property="versionList" resultMap="profit.checkPopBoxDataGroup2" />
</resultMap>
<resultMap class="com.ways.app.price.model.Version" id="checkPopBoxDataGroup2">
	<result property="versionId" column="vid" nullValue="" />
</resultMap>
<select id="checkPopBoxData" resultMap="checkPopBoxDataGroup1">
	With t1 As(
		<isNotEmpty property="vids">
			Select v.Submodel_Id Mid, v.Version_Id Vid From Fdm_Car_Version v Where v.Version_Id In ($vids$)
		</isNotEmpty>
		<isNotEmpty property="mids">
			Select v.Submodel_Id Mid, v.Version_Id Vid From Fdm_Car_Version v Where v.Submodel_Id In ($mids$)
		</isNotEmpty>
	)
	Select T1.Vid, T1.Mid
		   From T1
		   Where Not Exists (
				<isEqual compareValue="1" property="analysisContentType">
					<!-- 返点返利校验 -->
					Select /*+ RULE*/ 1
			          From Fdm_Faw_Rebate         p,
			               Sub_Version_Price_Date Pm,
			               Fdm_Car_Version        v
			             Where v.Version_Id = p.Version_Id
				           And v.Version_Id = pm.Version_Id
				           And p.Ym = Pm.Ym
				           And p.Ym Between replace('$beginDate$','-','') And replace('$endDate$','-','')
					       <isNotEmpty property="vids">
							   And p.Version_Id = t1.vid
						   </isNotEmpty>
						   <isNotEmpty property="mids">
							   And v.Submodel_id = t1.mid
						   </isNotEmpty>
				</isEqual>		  
				<isNotEqual compareValue="1" property="analysisContentType">
					<!-- 成交价校验 -->
					Select /*+ RULE*/1 
						   From Sub_Version_Price_Date p
						   Inner Join Fdm_Car_Version v On v.Version_Id = p.Version_Id
						   where p.Ym between replace('$beginDate$','-','') and replace('$endDate$','-','') 
								<isNotEmpty property="vids">
									and p.Version_Id = t1.vid
								</isNotEmpty>
								<isNotEmpty property="mids">
									and v.Submodel_id = t1.mid
								</isNotEmpty>
				</isNotEqual> 
		   )
</select>

<!-- 校验生产商弹出框有效数据  -->
<select id="checkManfPopBoxData" resultClass="com.ways.app.price.model.Manf">
	with t1 as(
		Select s.Id Manfid, s.Manf_Name_Cn As Manfname From v_Car_Manf_Brand s Where s.id In ($manfs$)
	)
	select t1.manfId,t1.manfName 
		   from t1
		   where not exists(
				<isEqual compareValue="1" property="analysisContentType">
					<!-- 返点返利校验 -->
			        Select 1
			              From Fdm_Faw_Rebate         p,
			                   Fdm_Car_Version        v,
			                   Fdm_Car_Submodel       Sm,
			                   Sub_Version_Price_Date Pm
			             Where p.Ym = Pm.Ym
			               And p.ym Between Replace('$beginDate$','-','') And Replace('$endDate$','-','')
			               And p.Version_Id = v.Version_Id
			               And Pm.Version_Id = v.Version_Id
			               And v.Submodel_Id = Sm.Submodel_Id
			               And Sm.Manf_Id || '~' || Sm.Brand_Id = T1.Manfid       							 
				</isEqual>		  
				<isNotEqual compareValue="1" property="analysisContentType">
					<!-- 成交价校验 -->
					Select 1 From
					       <!-- Sub_transprice成交价中间表通过车型,型号,成交价日期分组 -->
					       Sub_Version_Price_Date p,
					       Fdm_Car_Version        v,
					       Fdm_Car_Submodel       Sm
					 Where v.Version_Id = p.Version_Id
					   And v.Submodel_Id = Sm.Submodel_Id
					   And p.Ym Between replace('$beginDate$','-','') And replace('$endDate$','-','')
					   And Sm.Manf_Id || '~' || Sm.Brand_Id = T1.Manfid	  
				</isNotEqual> 
		   )
</select>

<!-- <select id="findLatestWeek" resultClass="java.lang.String">
	With T1 As (
		Select Distinct To_Char(To_Date(To_Char(p.Ym), 'YYYYMM'), 'YYYY-MM') Pricetime, p.Week From Fdm_Version_State_Msrp p Where Ym = replace('$endDate$','-','')
	 )
	Select Distinct t.Pricetime From T1 t
				Where Not Exists (Select 1 From T1 Where T1.Week = '7')
</select> -->

</sqlMap>