<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="globalModelProfitPrice">

<!-- 根据条件获取有效车型公共SQL -->
<sql id="getSubModel">
	<isEqual property="moduleName" compareValue="brandprofitanaly">
      	 <!-- 返利返点表有效数据范围 -->
		 select distinct v.fzdy2 submodelid 
		 				 from tb_autoprice_month_rebate p ,cims_car_number v,Sub_Transprice St
				         Where v.Id = p.Version_Id And v.Id = St.Car_Model
				         	  <!-- 时间点 -->
				         	  <isEqual property="timeType" compareValue="1">
				         	  		<isEqual property="frequency" compareValue="1">
				         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') = '$beginDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="2">
				         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') = '$beginDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="3">
				         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
				         	  			and To_Char(St.Price_Time, 'yyyy-MM') = '$beginDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="4">
				         	  			<!-- 频次为季度时过滤条件为时间段 -->
				         	  			and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$' 
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="5">
				         	  			<!-- 频次为年时过滤条件为时间段 -->
				         	  			and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$'
				         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  </isEqual>
				         	  <isEqual property="timeType" compareValue="2">
				         	  			<!-- 时间段 -->
				         	  		    and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$'
				         	  		<isEqual property="frequency" compareValue="1">
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="2">
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="3">
				         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="4">
				         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  		<isEqual property="frequency" compareValue="5">
				         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
				         	  		</isEqual>
				         	  </isEqual>
   </isEqual>
</sql>

<!-- 获取本品子车型和其竟品车型 -->
<resultMap class="com.ways.app.price.model.BPSubModel" id="getSubmodelByBpGroup1" groupBy="subModelId">
	<result property="subModelId" column="subModelBpId" nullValue="" />
	<result property="subModelName" column="subModelName" nullValue="" />
	<result property="pooAttributeId" column="bp_car_in" nullValue="" />
	<result property="jpSubModelList" resultMap="global.getSubmodelByBpGroup2" />
</resultMap> 
<resultMap class="com.ways.app.price.model.SubModel" id="getSubmodelByBpGroup2">
	<result property="subModelId" column="subModelJpId" nullValue="" />
	<result property="subModelName" column="subModelJpName" nullValue="" />
	<result property="pooAttributeId" column="jp_car_in" nullValue="" />
</resultMap>
<select id="getSubmodelByBp" resultMap="getSubmodelByBpGroup1">

	with t1 as(
		<include refid="getSubModel"/>
	)
	select b.model_bp_id subModelBpId,c.name subModelName,s.car_in bp_car_in,b.model_jp_id subModelJpId,j.name subModelJpName,js.car_in jp_car_in
	       from cims_model_bp_jp b
	       inner join wias_grade g on g.grade_id = b.modellevel
	       inner join cims_car_brandchild c on c.id = b.model_bp_id
	       inner join cims_scs s on s.id = b.manf_bp_id
	       left join cims_car_brandchild j on j.id = b.model_jp_id
	       left join cims_scs js on js.id = b.manf_jp_id
	       where b.userid= $userId$
		         and exists (
	              	 select 1 from t1 where t1.submodelid = b.model_bp_id
	             )
			     and exists (
			         select 1 from t1 where t1.submodelid = b.model_jp_id
			     )
	       order by g.grade_order asc
</select>
 
<!-- 获取细分市场下子车型关系 --> 
<resultMap class="com.ways.app.price.model.Segment" id="getSubmodelBySegmentGroup1" groupBy="segmentId">
	<result property="segmentId" column="parent_id" nullValue="" />
	<result property="segmentName" column="parent_grade_name_cn" nullValue="" />
	<result property="segmentList" resultMap="global.getSubmodelBySegmentGroup2" />
</resultMap> 
<resultMap class="com.ways.app.price.model.Segment" id="getSubmodelBySegmentGroup2" groupBy="segmentId">
	<result property="segmentId" column="grade_id" nullValue="" />
	<result property="segmentName" column="grade_name_cn" nullValue="" />
	<result property="subModelList" resultMap="global.getSubmodelBySegmentGroup3" />
</resultMap>
<resultMap class="com.ways.app.price.model.SubModel" id="getSubmodelBySegmentGroup3">
	<result property="subModelId" column="submodelid" nullValue="" />
	<result property="subModelName" column="submodelname" nullValue="" />
	<result property="pooAttributeId" column="car_in" nullValue="" />
</resultMap>
<sql id="getUserGroupGradeSubModel">
	with t1 as(
		select d.*
			  from (select distinct g.grade_id,
			               g.grade_name_cn,
			               g.parent_id,
			               c.id submodelid,
			               c.name submodelname,
			               s.car_in,
			               s.id manfid,
			               s.scs manfName,
			               p.id brandid,
			               p.name brandName,
			               upper(getLetter(substr(p.name,0,1))) brandletter,
               			   upper(getLetter(substr(s.scs,0,1))) manfletter
			          from wias_grade g
			         inner join wias_info_grade i on g.grade_id = i.grade_id
			         inner join cims_car_brand b on b.id = i.brand_id
			         inner join cims_scs s on s.id = b.scs
			         inner join cims_car_pbrand p on p.id = b.mid
			         inner join cims_car_brandchild c on c.parent_id = b.id
			         where g.group_id = $userId$
			  ) d
			 ,(
			 		<include refid="getSubModel"/>
			  ) c 
			  where c.submodelid = d.submodelid
	)
</sql>
<select id="getSubmodelBySegment" resultMap="getSubmodelBySegmentGroup1">
	<include refid="getUserGroupGradeSubModel"/>
	select d.*,g.grade_name_cn parent_grade_name_cn
	       	from t1 d ,wias_grade g 
	       	where g.grade_id(+) = d.parent_id
	        order by g.grade_order
</select>

<!-- 获取品牌下子车型关系 -->
<resultMap class="com.ways.app.price.model.LetterObj" id="getSubmodelByBrandGroup1" groupBy="letter">
	<result property="letter" column="brandletter" nullValue="" />
	<result property="objList" resultMap="global.getSubmodelByBrandGroup2" />
</resultMap>
<resultMap class="com.ways.app.price.model.Brand" id="getSubmodelByBrandGroup2" groupBy="brandId">
	<result property="brandId" column="brandid" nullValue="" />
	<result property="brandName" column="brandname" nullValue="" />
	<result property="subModelList" resultMap="global.getSubmodelByBrandGroup3" />
</resultMap>
<resultMap class="com.ways.app.price.model.SubModel" id="getSubmodelByBrandGroup3">
	<result property="subModelId" column="submodelid" nullValue="" />
	<result property="subModelName" column="submodelname" nullValue="" />
	<result property="pooAttributeId" column="car_in" nullValue="" />
</resultMap>
<select id="getSubmodelByBrand" resultMap="getSubmodelByBrandGroup1">

	<include refid="getUserGroupGradeSubModel"/>			
	select * from t1 order by t1.brandletter,t1.brandId,t1.submodelid
</select>

<!-- 获取厂商 下子车型关系 -->
<resultMap class="com.ways.app.price.model.LetterObj" id="getSubmodelByManfGroup1" groupBy="letter">
	<result property="letter" column="manfletter" nullValue="" />
	<result property="objList" resultMap="global.getSubmodelByManfGroup2" />
</resultMap>
<resultMap class="com.ways.app.price.model.Manf" id="getSubmodelByManfGroup2" groupBy="manfId">
	<result property="manfId" column="manfid" nullValue="" />
	<result property="manfName" column="manfname" nullValue="" />
	<result property="subModelList" resultMap="global.getSubmodelByManfGroup3" />
</resultMap>
<resultMap class="com.ways.app.price.model.SubModel" id="getSubmodelByManfGroup3">
	<result property="subModelId" column="submodelid" nullValue="" />
	<result property="subModelName" column="submodelname" nullValue="" />
	<result property="pooAttributeId" column="car_in" nullValue="" />
</resultMap>
<select id="getSubmodelByManf" resultMap="getSubmodelByManfGroup1">

	<include refid="getUserGroupGradeSubModel"/>			
	select * from t1 order by t1.manfletter,t1.manfid,t1.submodelid
</select>

<!-- 获取子车型下型号数据 -->
<resultMap class="com.ways.app.price.model.SubModel" id="getVersionModalByCommonGroup1" groupBy="subModelId">
	<result property="subModelId" column="submodelid" nullValue="" />
	<result property="subModelName" column="submodelname" nullValue="" />
	<result property="versionList" resultMap="global.getVersionModalByCommonGroup2" />
</resultMap>
<resultMap class="com.ways.app.price.model.Version" id="getVersionModalByCommonGroup2">
	<result property="versionId" column="vid" nullValue="" />
	<result property="versionName" column="vanme" nullValue="" />
	<result property="msrp" column="msrp" nullValue="-" />
	<result property="mix" column="mix" nullValue="-" />
</resultMap>
<select id="getVersionModalByCommon" resultMap="getVersionModalByCommonGroup1">
	with t1 as(
		select v.id vid,v.parentid,c.id submodelid,c.name submodelname,v.fyear,v.typeid
			   ,c.name || ' ' || v.fyear||' '||v.typeid vanme
		       from cims_car_brandchild c
		       inner join cims_car_number v on v.fzdy2 = c.id
		       inner join(
				           <isEqual property="moduleName" compareValue="brandprofitanaly">
					       	     <!-- 返利返点表有效数据范围 -->
								 select distinct p.version_id vid from tb_autoprice_month_rebate p,Sub_Transprice St
								 		where p.version_id = St.Car_Model
								 		<!-- 时间点 -->
						         	  <isEqual property="timeType" compareValue="1">
						         	  		<isEqual property="frequency" compareValue="1">
						         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') = '$beginDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="2">
						         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') = '$beginDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="3">
						         	  			and p.year||'-'||lpad(p.month,2,0) = '$r_beginDate$'
						         	  			and To_Char(St.Price_Time, 'yyyy-MM') = '$beginDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="4">
						         	  			<!-- 频次为季度时过滤条件为时间段 -->
						         	  			and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$' 
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="5">
						         	  			<!-- 频次为年时过滤条件为时间段 -->
						         	  			and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$'
						         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  </isEqual>
						         	  <isEqual property="timeType" compareValue="2">
						         	  			<!-- 时间段 -->
						         	  		    and p.year||'-'||lpad(p.month,2,0) between '$r_beginDate$' and '$r_endDate$'
						         	  		<isEqual property="frequency" compareValue="1">
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="2">
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="3">
						         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="4">
						         	  			and To_Char(St.Price_Time, 'yyyy-MM-dd') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  		<isEqual property="frequency" compareValue="5">
						         	  			and To_Char(St.Price_Time, 'yyyy-MM') between '$beginDate$' and '$endDate$'
						         	  		</isEqual>
						         	  </isEqual>
						   </isEqual>
				)d on d.vid = v.id
		        where c.id in ($modelIds$) and v.is_installed_flag != 1
	)
	,t3 as(
		<!-- 获取型号最新MIX -->
		select * from(
				select t1.*,
					   to_char(m.endpercent * 100) initMix,
					   to_char(m.currentdate) yearmonth,
					   row_number() over(partition by t1.vid order by m.currentdate desc) mixrn
					   from t1 
				       left join sale_scale m on t1.vid = m.car_config_id
		)where mixrn = 1
	)
	,t4 as (
		<!-- 如果上下代并存，只取最新一代，且上一代MIX时间相同则相加 -->
		select * from(
			select 
				d.*, 
				row_number() over(partition by d.groupid order by d.vid desc) vidrn,<!-- 上下代新型号排序 -->
				to_char(sum(d.initMix) over(partition by d.groupid),'fm99999990.00') mix
				from(
			    	select t3.*,
			    		   case when t3.parentid = 0 or exists(select 1 from t1 where t1.parentid = t3.vid) then t3.vid 
			    		   		else t3.parentid 
			    		   end groupid from t3
				) d
		)where vidrn = 1
	)
	,t5 as(
		<!-- 去除ID不同，组合型号名称相同的记录，取ID最大的 -->
		select * from (
						select t4.*,row_number() over(partition by t4.vanme order by t4.vid desc) namern from t4
			    	)d where d.namern = 1
	)
	select t5.*,d.msrp
			   ,row_number() over(partition by t5.submodelid order by t5.fyear desc,to_number(d.msrp) asc,t5.typeid asc) ordern
		       from t5
		       left join (
		            select * from (
                          select p.car_name vid,to_char(p.direction_price * 10000) msrp,
                                 row_number() over(partition by p.car_name order by p.msrp_adjust_date desc) rn
                                 from cims_direction_price p 
		            ) where rn = 1
		       )d on t5.vid = d.vid
</select>

<!-- 校验弹出框有效数据  -->
<resultMap class="com.ways.app.price.model.SubModel" id="checkPopBoxTpDataGroup1" groupBy="subModelId">
	<result property="subModelId" column="mid" nullValue="" />
	<result property="versionList" resultMap="global.checkPopBoxTpDataGroup2" />
</resultMap>
<resultMap class="com.ways.app.price.model.Version" id="checkPopBoxTpDataGroup2">
	<result property="versionId" column="vid" nullValue="" />
</resultMap>
<select id="checkPopBoxTpData" resultMap="checkPopBoxTpDataGroup1">
	with t1 as(
		<isNotEmpty property="vid">
			select v.fzdy2 mid,v.id vid from cims_car_number v where v.id in($vid$)
		</isNotEmpty>
		<isNotEmpty property="mid">
			select v.fzdy2 mid,v.id vid  from cims_car_number v where v.fzdy2 in($mid$)	
		</isNotEmpty>
	)
	select t1.vid,t1.mid 
		   from t1
		   where not exists(
				<!-- 成交价校验 -->
					select 1 
						   from pms_promotion_price p 
						   inner join cims_car_number v on v.id = p.model_id
						   where p.sdate = replace('$beginDate$','-','') and p.price is not null
								<isNotEmpty property="vid">
									and p.model_id = t1.vid
								</isNotEmpty>
								<isNotEmpty property="mid">
									and v.fzdy2 = t1.mid
								</isNotEmpty> 
		   )
</select>
</sqlMap>